basic block ends with indirect unconditional branch
lock cmpxchg
	ebp=0xa4e666
	0xa8a861: lock cmpxchg dword ptr [ebp + ebx], ecx
[0xa4e6db]=0x0
[0xa4e72e]=0x7bab1f1a
[0xa4e72e]=0x400000
[0xa4e73b]=0x400000
[0xa4e6fb]=0xb617d9
[ebp+0x75]=0x0 <- lock
[ebp+0x95]=0xb617d9 <- ByteCode
[ebp+0xc8]=0x400000 <- module base
[ebp+0xd5]=0x400000 <- module base
basic block ends with indirect unconditional branch
	0xa70b5a: mov edx, ebp
	0xa70b5c: add edx, 0x49
	0xa70b7a: cmp dl, 0
	0xa70b7d: je 0xa70b8e
	0xa70bb9: mov ecx, 0
	0xa70bc2: mov eax, ebp
	0xa70bca: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa70bcf: mov eax, dword ptr [eax]
	0xa70bd3: add eax, 2
	0xa70be2: mov cx, word ptr [eax]
	0xa70be5: shl ecx, 2
	0xa70be8: mov esi, ebp
	0xa70bf7: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa70c0a: mov edi, dword ptr [esi]
	0xa70c0e: add edi, ecx
	0xa70c12: mov ebx, dword ptr [edi]
	0xa70c1d: mov edi, ebp
	0xa70c1f: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617dd
	0xa70c25: add dword ptr [edi], 4
	0xa70c2b: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7418b: mov esi, ebp
	0xa7418f: add esi, 0xe5
	0xa74195: cmp dl, 0
	0xa74198: je 0xa741a9
Load [EBP+0xe5](STATIC)
	0xa741ab: mov eax, dword ptr [esi]
	0xa741ad: mov ecx, ebp
	0xa741af: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa741b5: or dword ptr [ecx], eax
	0xa741b7: mov eax, ebp
	0xa741bb: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa741c8: add dword ptr [eax], 0x3c5d242f
	0xa741f0: mov ebx, ebp
	0xa741f8: add ebx, 0xe5
Store [EBP+0xe5](STATIC)
	0xa74200: mov dword ptr [ebx], 0
	0xa74206: mov ecx, ebp
	0xa74208: add ecx, 0xa
Store [EBP+0xa](STATIC)
	0xa7420e: mov dword ptr [ecx], 0
	0xa74214: mov esi, ebp
	0xa74216: add esi, 0xd1
Store [EBP+0xd1](STATIC)
	0xa7421c: mov dword ptr [esi], 0
	0xa74228: mov esi, 0
	0xa74233: mov eax, ebp
	0xa74235: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa7423e: mov eax, dword ptr [eax]
	0xa74240: add eax, 0
	0xa74245: mov si, word ptr [eax]
	0xa7424e: shl esi, 2
	0xa74259: mov eax, ebp
	0xa7425b: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa74270: mov ebx, dword ptr [eax]
	0xa74278: add ebx, esi
	0xa7427c: mov esi, dword ptr [ebx]
	0xa7428e: mov edi, ebp
	0xa74295: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617df
	0xa7429b: add dword ptr [edi], 2
	0xa742a1: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7cd24: mov edx, ebp
	0xa7cd28: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cd33: mov ecx, dword ptr [edx]
	0xa7cd35: mov edx, ebp
	0xa7cd37: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cd3f: and dword ptr [edx], ecx
	0xa7cd4f: mov eax, ebp
	0xa7cd59: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa7cd64: mov eax, dword ptr [eax]
	0xa7cd6c: add eax, 2
	0xa7cd73: movzx edx, word ptr [eax]
	0xa7cd7a: add edx, ebp
Store VM_REG [EBP+0xdd]
	0xa7cd8b: mov dword ptr [edx], esp
	0xa7cd8d: mov edi, ebp
	0xa7cd8f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cd95: mov edx, dword ptr [edi]
	0xa7cd99: mov ebx, ebp
	0xa7cda3: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cda9: add dword ptr [ebx], edx
	0xa7cdb3: mov edx, 0
	0xa7cdc2: mov esi, ebp
	0xa7cdc4: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7cdca: mov esi, dword ptr [esi]
	0xa7cdd0: add esi, 0
	0xa7cde4: mov dx, word ptr [esi]
	0xa7cdeb: shl edx, 2
	0xa7cdfe: mov ebx, ebp
	0xa7ce04: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7ce0a: mov ecx, dword ptr [ebx]
	0xa7ce0c: add ecx, edx
	0xa7ce0e: mov ebx, dword ptr [ecx]
	0xa7ce12: mov esi, ebp
	0xa7ce18: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617e3
	0xa7ce1e: add dword ptr [esi], 4
	0xa7ce24: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7a755: mov ecx, ebp
	0xa7a763: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a769: mov ecx, dword ptr [ecx]
	0xa7a76d: add ecx, 0
	0xa7a778: movzx ebx, word ptr [ecx]
	0xa7a79d: mov eax, ebp
	0xa7a7b0: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a7be: sub ebx, dword ptr [eax]
	0xa7a7c2: mov eax, ebp
	0xa7a7cf: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a7d4: or dword ptr [eax], ebx
	0xa7a801: and ebx, 0xffff
	0xa7a807: add ebx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa7a81b: mov ebx, dword ptr [ebx]
	0xa7a823: xor ebx, 0x9af695a
	0xa7a832: mov edx, ebp
	0xa7a839: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa7a84f: mov dword ptr [edx], ebx
	0xa7a851: mov ebx, ebp
	0xa7a853: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a859: mov edi, dword ptr [ebx]
	0xa7a865: mov edx, ebp
	0xa7a867: add edx, 0xa
	0xa7a86d: and edi, 2
	0xa7a873: cmp edi, 0
	0xa7a879: je 0xa7a895
	0xa7a899: mov edi, ebp
	0xa7a8a0: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8a6: mov ebx, dword ptr [edi]
	0xa7a8a8: and ebx, 2
	0xa7a8ae: cmp ebx, 0
	0xa7a8b4: je 0xa7a8d6
	0xa7a8d8: cmp dl, 0
	0xa7a8db: je 0xa7a8ec
	0xa7a8f7: mov edx, ebp
	0xa7a8f9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8ff: mov ecx, dword ptr [edx]
	0xa7a901: and ecx, 2
	0xa7a907: cmp ecx, 0
	0xa7a90d: je 0xa7a92f
	0xa7a92f: mov esi, ebp
	0xa7a931: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a937: mov ecx, dword ptr [esi]
	0xa7a939: and ecx, 0x5db1956c
	0xa7a93f: mov eax, ebp
	0xa7a941: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a946: xor dword ptr [eax], ecx
	0xa7a948: mov esi, ebp
	0xa7a95a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a960: mov eax, dword ptr [esi]
	0xa7a962: and eax, 2
	0xa7a967: cmp eax, 0
	0xa7a96c: je 0xa7a98e
	0xa7a98e: mov ecx, ebp
	0xa7a998: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa7a99e: mov edx, dword ptr [ecx]
	0xa7a9a2: cmp dl, 0
	0xa7a9a5: je 0xa7a9b5
	0xa7a9b7: mov eax, ebp
	0xa7a9b9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a9be: add dword ptr [eax], 0x27628d33
	0xa7a9d4: mov eax, ebp
	0xa7a9dc: mov ecx, ebp
	0xa7a9e8: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7a9ef: mov eax, dword ptr [eax]
	0xa7a9f1: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7aa05: mov ecx, dword ptr [ecx]
	0xa7aa16: add ecx, 2
	0xa7aa1e: movzx ecx, word ptr [ecx]
	0xa7aa27: mov edx, ebp
	0xa7aa31: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa7aa39: sub ecx, dword ptr [edx]
	0xa7aa3d: xor ecx, 0x4ca6cd36
	0xa7aa51: mov edx, ebp
	0xa7aa61: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7aa6d: sub dword ptr [edx], ecx
	0xa7aa77: and ecx, 0xffff
	0xa7aa88: add eax, ecx
	0xa7aa8c: mov ecx, dword ptr [eax]
	0xa7aa96: mov edx, ebp
	0xa7aaa6: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617e7
	0xa7aaac: add dword ptr [edx], 4
	0xa7aab2: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa54922: mov edx, ebp
	0xa54924: mov ebx, ebp
	0xa54926: add edx, 0xef
	0xa5492e: add ebx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa54934: mov dl, byte ptr [ebx]
	0xa54938: mov edi, ebp
	0xa5493c: and edx, 0xffff
	0xa54942: add edi, 0x95
	0xa54948: mov eax, 0x200
	0xa5494d: add edx, esi
Load [EBP+0x95](STATIC)
	0xa5494f: mov edi, dword ptr [edi]
	0xa54957: and edx, eax
	0xa54959: add edi, 2
	0xa54961: and edx, 0x7fffffff
	0xa54969: movzx esi, word ptr [edi]
	0xa5496c: add esi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa54970: mov esp, dword ptr [esi]
	0xa5497c: cmp dl, 0
	0xa5497f: je 0xa5498f
	0xa5499b: mov eax, ebp
	0xa549a1: add eax, 0x95
	0xa549ac: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa549b0: mov eax, dword ptr [eax]
	0xa549b2: add edx, 0xb8
	0xa549ba: add eax, 0
	0xa549bf: movzx eax, word ptr [eax]
Load [EBP+0xb8](STATIC)
	0xa549c2: mov edx, dword ptr [edx]
	0xa549c8: mov ecx, ebp
	0xa549cc: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa549db: add eax, dword ptr [ecx]
	0xa549dd: sub eax, 0x72903550
	0xa549e6: mov ecx, ebp
	0xa549f2: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54a04: and dword ptr [ecx], eax
	0xa54a0c: and eax, 0xffff
	0xa54a13: add edx, eax
	0xa54a17: mov eax, dword ptr [edx]
	0xa54a21: mov ecx, ebp
	0xa54a25: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617eb
	0xa54a2b: add dword ptr [ecx], 4
	0xa54a31: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9c8: and eax, 0x31838a60
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617ef
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa505fa: mov edx, ebp
	0xa505fc: add edx, 0x49
	0xa50602: mov eax, edx
	0xa50610: mov esi, ebp
	0xa50612: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50618: or dword ptr [esi], 0x6b3164c9
	0xa5061e: mov esi, ebp
	0xa50620: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50626: mov ebx, dword ptr [esi]
	0xa50628: and ebx, 2
	0xa5062e: cmp ebx, 0
	0xa50634: je 0xa50656
	0xa50660: mov edi, ebp
	0xa50662: add edi, 0xef
Load [EBP+0xef](STATIC)
	0xa50668: mov ecx, dword ptr [edi]
	0xa5066a: cmp dl, 0
	0xa5066d: je 0xa5067e
	0xa50673: and ecx, 0x5b626a63
	0xa50680: sub esi, esi
	0xa50688: sub esi, 0x400
	0xa5068e: mov edi, 1
	0xa50693: sub edi, 4
	0xa50699: mov edx, ebp
	0xa5069b: xor edi, esi
	0xa5069d: add edx, 0x95
	0xa506a3: add edi, 1
	0xa506a9: sub ecx, edi
	0xa506ab: mov ebx, 0x400
	0xa506b0: sub ecx, ecx
	0xa506b2: and esi, 0x80
Load [EBP+0x95](STATIC)
	0xa506b8: mov edx, dword ptr [edx]
	0xa506ba: xor edi, eax
	0xa506bc: add edx, 2
	0xa506c2: movzx eax, byte ptr [edx]
	0xa506c5: and ebx, 0xffff
	0xa506cb: mov edx, ebp
	0xa506cd: add ecx, esi
	0xa506cf: sub edi, ebx
	0xa506d1: add edx, 0xa
	0xa506d7: and ebx, ecx
	0xa506d9: and ebx, edx
	0xa506db: xor ecx, esi
	0xa506dd: or ecx, 0xffff
	0xa506e3: add ecx, edi
Load [EBP+0xa](STATIC)
	0xa506e5: sub eax, dword ptr [edx]
	0xa506e7: mov edx, ebp
	0xa506e9: add edx, 0xe5
	0xa506ef: or edi, 0x28
	0xa506f5: xor ebx, ecx
	0xa506f7: add esi, 0x800
	0xa506fd: and ecx, edx
Load [EBP+0xe5](STATIC)
	0xa506ff: add eax, dword ptr [edx]
	0xa50701: sub ecx, 0x40
	0xa50707: add ecx, ecx
	0xa50709: add esi, ebx
	0xa5070b: sub esi, edi
	0xa5070d: xor edi, edi
	0xa5070f: mov edx, ebp
	0xa50711: sub ebx, 0xffff
	0xa50717: add esi, edi
	0xa50719: add esi, 0x28
	0xa5071f: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50729: sub dword ptr [edx], eax
	0xa5072b: or ebx, 0x800
	0xa50731: sub ecx, 0x1c
	0xa50737: sub ebx, ecx
	0xa5073b: mov edx, ebp
	0xa5073f: add edx, 0xe5
	0xa50747: mov edi, 0xa
	0xa5074c: and esi, edi
	0xa5074e: and esi, esi
	0xa50750: or ebx, 0x80
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50756: or dword ptr [edx], 0x4df44040
	0xa50761: mov ecx, ebp
	0xa50763: add ecx, 0x9e
	0xa50769: xor ebx, esi
Store [EBP+0x9e](STATIC)
	0xa5076d: mov byte ptr [ecx], al
	0xa50775: mov esi, ebp
	0xa50777: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50785: mov ecx, dword ptr [esi]
	0xa50787: mov esi, ebp
	0xa50789: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5078f: add dword ptr [esi], ecx
	0xa50795: sub ebx, 0x12d4875b
	0xa5079b: mov ecx, ebp
	0xa5079d: mov eax, ebp
	0xa5079f: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507a5: mov esi, dword ptr [ecx]
	0xa507a7: and esi, 2
	0xa507ad: cmp esi, 0
	0xa507b3: je 0xa507cf
	0xa507cf: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa507d4: xor ebx, dword ptr [eax]
	0xa507d6: xor ebx, eax
	0xa507ee: mov edx, ebp
	0xa507f2: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507fd: mov esi, dword ptr [edx]
	0xa50801: and esi, 2
	0xa50807: cmp esi, 0
	0xa5080d: je 0xa5082f
	0xa5082f: mov eax, ebp
	0xa5083b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50840: or dword ptr [eax], 0x250e5a43
	0xa50846: mov edx, ebp
	0xa50848: add edx, 0xef
	0xa50850: cmp dl, 0
	0xa50853: je 0xa50864
	0xa50870: cmp bl, 0
	0xa50873: je 0xa50883
	0xa5089c: mov ecx, ebp
	0xa508a7: mov edi, ebp
	0xa508a9: add ecx, 0xb8
	0xa508b3: add edi, 0x95
Load [EBP+0xb8](STATIC)
	0xa508b9: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa508bb: mov edi, dword ptr [edi]
	0xa508bf: add edi, 0
	0xa508c5: movzx edi, word ptr [edi]
	0xa508d1: mov esi, ebp
	0xa508d3: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa508d9: xor edi, dword ptr [esi]
	0xa508db: xor edi, 0x2bd5fdb7
	0xa508e5: mov esi, ebp
	0xa508f8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50905: and dword ptr [esi], edi
	0xa50917: and edi, 0xffff
	0xa5091d: add ecx, edi
	0xa5092a: mov edi, dword ptr [ecx]
	0xa5092c: mov esi, ebp
	0xa50935: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617f2
	0xa5093b: add dword ptr [esi], 3
	0xa50941: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7bb10: mov esi, ebp
	0xa7bb12: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb18: mov edi, dword ptr [esi]
	0xa7bb1a: mov ebx, ebp
	0xa7bb1c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb22: and dword ptr [ebx], edi
	0xa7bb2c: mov ebx, ebp
	0xa7bb30: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb36: and dword ptr [ebx], 0x2bdcf64a
	0xa7bb3c: mov edi, ebp
	0xa7bb4e: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bb56: mov edi, dword ptr [edi]
	0xa7bb58: add edi, 2
	0xa7bb5e: movzx ebx, word ptr [edi]
	0xa7bb61: mov eax, ebp
	0xa7bb63: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7bb68: sub ebx, dword ptr [eax]
	0xa7bb6a: mov ecx, ebp
	0xa7bb6c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb72: xor ebx, dword ptr [ecx]
	0xa7bb7c: mov ecx, ebp
	0xa7bb7e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7bb84: xor dword ptr [ecx], 0x5c1c708c
	0xa7bb8a: and ebx, 0xffff
	0xa7bb90: add ebx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa7bb92: mov ebx, dword ptr [ebx]
	0xa7bb94: xor ebx, 0x1348fdb8
	0xa7bb9a: mov eax, ebp
	0xa7bb9c: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa7bba1: mov dword ptr [eax], ebx
	0xa7bba3: mov eax, ebp
	0xa7bba5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bbb0: or dword ptr [eax], 0x217f8076
	0xa7bbca: mov ebx, ebp
	0xa7bbcc: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa7bbd2: mov eax, dword ptr [ebx]
	0xa7bbde: cmp al, 0
	0xa7bbe0: je 0xa7bbf1
	0xa7bbf3: mov esi, ebp
	0xa7bbf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bbfb: mov ecx, dword ptr [esi]
	0xa7bbfd: mov ebx, ebp
	0xa7bbff: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bc05: xor dword ptr [ebx], ecx
	0xa7bc07: mov edi, ebp
	0xa7bc09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bc0f: mov esi, dword ptr [edi]
	0xa7bc11: and esi, 2
	0xa7bc17: cmp esi, 0
	0xa7bc1d: je 0xa7bc39
	0xa7bc47: mov edx, ebp
	0xa7bc51: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7bc66: mov edx, dword ptr [edx]
	0xa7bc72: mov esi, ebp
	0xa7bc78: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bc8c: mov esi, dword ptr [esi]
	0xa7bc96: add esi, 0
	0xa7bca8: movzx esi, word ptr [esi]
	0xa7bcd1: sub esi, 0x1945a008
	0xa7bce9: mov ebx, ebp
	0xa7bcf9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bd09: add dword ptr [ebx], esi
	0xa7bd0b: and esi, 0xffff
	0xa7bd16: add edx, esi
	0xa7bd1c: mov esi, dword ptr [edx]
	0xa7bd20: mov edi, ebp
	0xa7bd24: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617f6
	0xa7bd2a: add dword ptr [edi], 4
	0xa7bd30: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa77e1a: cmp dl, 0
	0xa77e1d: je 0xa77e2e
	0xa77e38: mov ecx, ebp
	0xa77e40: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa77e48: mov esi, dword ptr [ecx]
	0xa77e4c: xor esi, 0x1348fdb8
	0xa77e54: mov edx, ebp
	0xa77e56: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa77e6a: mov eax, dword ptr [edx]
	0xa77e74: add esi, 0x68474312
	0xa77e84: xor eax, 0x9af695a
	0xa77e8f: mov edx, ebp
	0xa77e9e: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa77eaa: mov dword ptr [edx], eax
	0xa77eb6: mov edi, ebp
	0xa77ebe: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa77ec4: mov dword ptr [edi], esi
	0xa77ec6: mov ebx, ebp
	0xa77ec8: add ebx, 0x79
	0xa77ece: mov edi, ebp
	0xa77ed0: add edi, 0xa
Load [EBP+0x79](STATIC)
	0xa77ed6: mov eax, dword ptr [ebx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77ed8: and dword ptr [edi], 0x4bfbb510
	0xa77ede: add eax, 0x47273a2c
	0xa77ee3: mov edx, ebp
	0xa77ee5: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa77eeb: mov dword ptr [edx], eax
	0xa77eed: add edi, eax
	0xa77eef: pushfd
	0xa77ef0: mov ebx, ebp
	0xa77ef2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77ef8: mov eax, dword ptr [ebx]
	0xa77efa: mov edi, ebp
	0xa77efc: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77f02: xor dword ptr [edi], eax
	0xa77f0e: mov edx, ebp
	0xa77f10: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77f16: mov ebx, dword ptr [edx]
	0xa77f18: mov esi, ebp
	0xa77f1a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77f22: add dword ptr [esi], ebx
	0xa77f2c: pop ecx
	0xa77f2d: mov edx, ebp
	0xa77f2f: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa77f3b: mov edx, dword ptr [edx]
	0xa77f3f: add edx, 0
	0xa77f45: movzx edx, byte ptr [edx]
	0xa77f4d: cmp edx, 0
	0xa77f53: je 0xa77f75
	0xa77f90: mov edx, ebp
	0xa77f92: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa77fb0: mov ebx, dword ptr [edx]
	0xa77fc6: sub ebx, 0x47273a2c
	0xa77fdf: sub ebx, 0x2b28b3ec
	0xa7801e: mov edx, ebp
	0xa78032: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa78044: mov dword ptr [edx], ebx
	0xa78046: mov edi, ebp
	0xa78048: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7804e: and dword ptr [edi], 0x5aee36f6
	0xa7805a: mov esi, ebp
	0xa7805e: mov edi, ebp
	0xa78068: add esi, 0x95
	0xa7807f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa78089: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa78093: mov esi, dword ptr [esi]
	0xa7809f: add esi, 1
	0xa780ad: movzx esi, word ptr [esi]
	0xa780b6: mov edx, ebp
	0xa780b8: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa780be: sub esi, dword ptr [edx]
	0xa780cf: xor esi, 0x6620912e
	0xa780f4: and esi, 0xffff
	0xa780fc: add edi, esi
	0xa78103: mov eax, dword ptr [edi]
	0xa7810c: mov ecx, ebp
	0xa7811e: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617fb
	0xa78124: add dword ptr [ecx], 5
	0xa7812a: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa4ff6f: mov edi, ebp
	0xa4ff7b: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ff81: mov al, byte ptr [edi]
	0xa4ff83: cmp al, 0
	0xa4ff85: je 0xa4ff96
	0xa4ffa8: mov edx, ebp
	0xa4ffb8: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa4ffc2: mov ebx, dword ptr [edx]
	0xa4ffd2: add ebx, 0x2b28b3ec
	0xa4ffe0: mov esi, ebp
	0xa4ffe2: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4fff5: mov ecx, dword ptr [esi]
	0xa5000b: xor ecx, 0x2b28b3ec
	0xa5001c: mov esi, ebp
	0xa50020: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5002c: mov al, byte ptr [esi]
	0xa5002e: cmp al, 0x1f
	0xa50030: jne 0xa50041
	0xa50041: cmp al, 0x52
	0xa50043: jne 0xa50058
	0xa50058: cmp al, 0x81
	0xa5005a: jne 0xa50089
	0xa50068: mov dword ptr [ecx], ebx
	0xa50089: cmp al, 2
	0xa5008b: jne 0xa5009b
	0xa500c9: mov eax, ebp
	0xa500cb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa500d0: mov esi, dword ptr [eax]
	0xa500d4: and esi, 2
	0xa500da: cmp esi, 0
	0xa500e0: je 0xa500fa
	0xa500fa: mov esi, ebp
	0xa500fc: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5010c: mov edi, dword ptr [esi]
	0xa5010e: and edi, 2
	0xa50120: cmp edi, 0
	0xa50126: je 0xa50148
	0xa50159: mov esi, ebp
	0xa5015b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50161: mov eax, dword ptr [esi]
	0xa50163: mov ecx, ebp
	0xa5016d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50175: xor dword ptr [ecx], eax
	0xa50191: mov esi, ebp
	0xa50193: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50199: mov ecx, dword ptr [esi]
	0xa5019b: and ecx, 2
	0xa501a1: cmp ecx, 0
	0xa501a7: je 0xa501c9
	0xa501c9: mov ecx, ebp
	0xa501cb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa501d1: mov edx, dword ptr [ecx]
	0xa501d3: and edx, 2
	0xa501d9: cmp edx, 0
	0xa501df: je 0xa50201
	0xa50215: cmp al, 0
	0xa50217: je 0xa50228
	0xa5022a: mov edi, ebp
	0xa5022e: mov eax, ebp
	0xa50236: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5023b: mov eax, dword ptr [eax]
	0xa50246: add eax, 0
	0xa5024d: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5025d: mov edi, dword ptr [edi]
	0xa5026b: movzx eax, word ptr [eax]
	0xa5026e: mov ebx, ebp
	0xa5027d: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5028e: add eax, dword ptr [ebx]
	0xa50292: mov ebx, ebp
	0xa50294: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa502aa: or dword ptr [ebx], eax
	0xa502ac: and eax, 0xffff
	0xa502b9: add edi, eax
	0xa502c4: mov eax, dword ptr [edi]
	0xa502cc: mov esi, ebp
	0xa502d0: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb617fd
	0xa502d6: add dword ptr [esi], 2
	0xa502dc: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa62816: mov edi, ebp
	0xa6281a: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62828: mov ecx, dword ptr [edi]
	0xa6282a: mov edi, ebp
	0xa6282c: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62832: or dword ptr [edi], ecx
	0xa62834: mov esi, ebp
	0xa62836: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62844: mov edx, dword ptr [esi]
	0xa62848: and edx, 2
	0xa6284e: cmp edx, 0
	0xa62854: je 0xa62876
	0xa62876: mov edx, ebp
	0xa62878: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6287e: xor ebx, dword ptr [edx]
	0xa62884: mov edx, ebp
	0xa62886: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6288c: mov ecx, dword ptr [edx]
	0xa6288e: or ecx, 0x146446bf
	0xa62894: mov esi, ebp
	0xa62896: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628a1: and dword ptr [esi], ecx
	0xa628a5: cmp bl, 0
	0xa628a8: je 0xa628b9
	0xa628bb: mov ebx, ebp
	0xa628bd: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628c3: xor dword ptr [ebx], 0x3eb4bd5c
	0xa628c9: mov edx, ebp
	0xa628cb: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa628d1: xor dword ptr [edx], 0x1a44884
	0xa62923: mov esi, ebp
	0xa6292e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa62934: mov esi, dword ptr [esi]
	0xa6293c: add esi, 2
	0xa62948: movzx eax, word ptr [esi]
	0xa62955: mov esi, ebp
	0xa62959: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa62967: add eax, dword ptr [esi]
	0xa6296b: mov esi, ebp
	0xa62975: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62981: xor eax, dword ptr [esi]
	0xa62999: mov ebx, ebp
	0xa629a5: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa629b1: or dword ptr [ebx], eax
	0xa629b3: mov ebx, ebp
	0xa629b9: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa629c1: or dword ptr [ebx], 0x52d317e2
	0xa629c9: and eax, 0xffff
	0xa629d6: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa629e6: mov eax, dword ptr [eax]
	0xa629e8: xor eax, 0x1348fdb8
	0xa629fe: mov ebx, ebp
	0xa62a0a: add ebx, 0x49
Store [EBP+0x49](STATIC)
	0xa62a25: mov dword ptr [ebx], eax
	0xa62a75: mov ecx, ebp
	0xa62a77: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62a7d: mov edx, dword ptr [ecx]
	0xa62a7f: mov ecx, ebp
	0xa62a81: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62a87: and dword ptr [ecx], edx
	0xa62a89: mov edi, ebp
	0xa62a91: add edi, 0xb8
	0xa62a97: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa62aa5: mov edi, dword ptr [edi]
	0xa62aaf: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa62abd: mov edx, dword ptr [edx]
	0xa62ace: add edx, 0
	0xa62ae6: movzx edx, word ptr [edx]
	0xa62aeb: mov eax, ebp
	0xa62af1: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa62afa: add edx, dword ptr [eax]
	0xa62afc: sub edx, 0x478417c3
	0xa62b08: mov eax, ebp
	0xa62b0a: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62b0f: sub dword ptr [eax], edx
	0xa62b1a: and edx, 0xffff
	0xa62b30: add edi, edx
	0xa62b40: mov esi, dword ptr [edi]
	0xa62b44: mov edi, ebp
	0xa62b4b: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61801
	0xa62b51: add dword ptr [edi], 4
	0xa62b57: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa54082: mov eax, ebp
	0xa54084: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54089: and dword ptr [eax], 0x10b6d61f
	0xa5408f: mov esi, ebp
	0xa540a1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa540cb: mov esi, dword ptr [esi]
	0xa540dd: add esi, 0
	0xa540f1: movzx eax, byte ptr [esi]
	0xa540f4: mov esi, ebp
	0xa54112: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa54121: sub eax, dword ptr [esi]
	0xa5413b: mov edi, ebp
	0xa5413f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5415c: sub eax, dword ptr [edi]
	0xa5415e: mov edi, ebp
	0xa54172: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54183: and dword ptr [edi], eax
	0xa54195: mov edi, ebp
	0xa541a3: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa541ba: and dword ptr [edi], 0x3ad761a9
	0xa541d0: mov edi, ebp
	0xa541e5: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa541ef: mov byte ptr [edi], al
	0xa541f3: mov edi, ebp
	0xa541f5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa54201: mov ebx, dword ptr [edi]
	0xa54203: and ebx, 2
	0xa5420b: cmp ebx, 0
	0xa54211: je 0xa5422d
	0xa54279: mov eax, ebp
	0xa5427b: add eax, 0xef
	0xa54282: cmp al, 0
	0xa54284: je 0xa54295
	0xa54297: mov eax, ebp
	0xa54299: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5429e: add dword ptr [eax], 0x5842d7e1
	0xa542a4: mov esi, ebp
	0xa542ae: mov eax, ebp
	0xa542b8: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa542c0: mov esi, dword ptr [esi]
	0xa542d4: add esi, 1
	0xa542e0: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa542f5: mov eax, dword ptr [eax]
	0xa54305: movzx esi, word ptr [esi]
	0xa54310: mov edx, ebp
	0xa5431c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa54322: xor esi, dword ptr [edx]
	0xa54326: sub esi, 0x4b25c03c
	0xa5432c: mov edx, ebp
	0xa54348: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5434e: and dword ptr [edx], esi
	0xa54350: and esi, 0xffff
	0xa5435b: add eax, esi
	0xa54363: mov esi, dword ptr [eax]
	0xa54365: mov edx, ebp
	0xa54372: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61804
	0xa54378: add dword ptr [edx], 3
	0xa5437e: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7c633: mov ecx, ebp
	0xa7c635: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c63b: mov ebx, dword ptr [ecx]
	0xa7c646: and ebx, 2
	0xa7c654: cmp ebx, 0
	0xa7c65a: je 0xa7c67c
	0xa7c680: mov esi, ebp
	0xa7c682: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c688: mov edi, dword ptr [esi]
	0xa7c68a: or edi, 0x585dd1e3
	0xa7c690: mov ecx, ebp
	0xa7c692: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c698: add dword ptr [ecx], edi
	0xa7c6a8: mov edx, ebp
	0xa7c6ac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c6b8: mov eax, dword ptr [edx]
	0xa7c6ba: add eax, 0x6efcee4e
	0xa7c6bf: mov ecx, ebp
	0xa7c6c1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c6c9: sub dword ptr [ecx], eax
	0xa7c6d5: mov ebx, ebp
	0xa7c6e7: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c6fb: mov ebx, dword ptr [ebx]
	0xa7c6fd: add ebx, 0
	0xa7c709: movzx eax, word ptr [ebx]
	0xa7c729: mov edx, ebp
	0xa7c72f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c735: add eax, dword ptr [edx]
	0xa7c74c: mov ebx, ebp
	0xa7c754: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c766: add dword ptr [ebx], eax
	0xa7c792: and eax, 0xffff
	0xa7c7a0: add eax, ebp
	0xa7c7a4: xor eax, 0x2b28b3ec
	0xa7c7bb: mov edi, ebp
	0xa7c7cd: add edi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c7d3: mov dword ptr [edi], eax
	0xa7c7e7: mov esi, ebp
	0xa7c7e9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c7ef: mov edx, dword ptr [esi]
	0xa7c7f1: and edx, 2
	0xa7c7f7: cmp edx, 0
	0xa7c7fd: je 0xa7c81f
	0xa7c803: mov esi, ebp
	0xa7c805: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c80b: sub dword ptr [esi], 0x2ccb4ab9
	0xa7c811: mov esi, ebp
	0xa7c813: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c819: or dword ptr [esi], 0x7b50d24d
	0xa7c81f: mov edi, ebp
	0xa7c821: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c827: mov ecx, dword ptr [edi]
	0xa7c829: and ecx, 2
	0xa7c82f: cmp ecx, 0
	0xa7c835: je 0xa7c857
	0xa7c83b: mov edi, ebp
	0xa7c83d: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c843: or dword ptr [edi], 0x146c05c7
	0xa7c849: mov edi, ebp
	0xa7c84b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c851: add dword ptr [edi], 0x1ce889ec
	0xa7c857: mov edi, ebp
	0xa7c863: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c869: mov eax, dword ptr [edi]
	0xa7c86b: mov esi, ebp
	0xa7c86d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c873: add dword ptr [esi], eax
	0xa7c875: mov edi, ebp
	0xa7c877: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c87d: mov eax, dword ptr [edi]
	0xa7c87f: mov edx, ebp
	0xa7c881: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c887: or dword ptr [edx], 0x4c3e24ce
	0xa7c88d: and eax, 2
	0xa7c892: cmp eax, 0
	0xa7c897: je 0xa7c8b9
	0xa7c89d: mov edi, ebp
	0xa7c89f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8a5: sub dword ptr [edi], 0x7b88e838
	0xa7c8ab: mov edi, ebp
	0xa7c8ad: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8b3: or dword ptr [edi], 0x7c8307dc
	0xa7c8b9: mov esi, ebp
	0xa7c8bb: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8c1: sub dword ptr [esi], 0x472eb0b6
	0xa7c8c7: mov eax, ebp
	0xa7c8c9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c8ce: mov ecx, dword ptr [eax]
	0xa7c8d0: sub ecx, 0x322439ec
	0xa7c8d6: mov esi, ebp
	0xa7c8d8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8de: add dword ptr [esi], ecx
	0xa7c8eb: mov edi, ebp
	0xa7c8ed: mov ecx, ebp
	0xa7c8f6: add edi, 0xb8
	0xa7c908: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c910: mov ecx, dword ptr [ecx]
	0xa7c918: add ecx, 2
	0xa7c920: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa7c929: mov edi, dword ptr [edi]
	0xa7c92d: mov eax, ebp
	0xa7c92f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c936: xor ecx, dword ptr [eax]
	0xa7c95a: mov ebx, ebp
	0xa7c95c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c962: add dword ptr [ebx], ecx
	0xa7c977: and ecx, 0xffff
	0xa7c97f: add edi, ecx
	0xa7c985: mov ebx, dword ptr [edi]
	0xa7c987: mov edi, ebp
	0xa7c999: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61808
	0xa7c99f: add dword ptr [edi], 4
	0xa7c9a5: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa77719: cmp al, 0
	0xa7771b: je 0xa7772c
	0xa7776a: mov ebx, ebp
	0xa7776c: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77772: mov esi, dword ptr [ebx]
	0xa77774: mov edx, ebp
	0xa77776: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7777c: xor dword ptr [edx], esi
	0xa7777e: mov ecx, ebp
	0xa77780: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77786: mov edi, dword ptr [ecx]
	0xa77788: mov esi, ebp
	0xa7778a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77790: sub dword ptr [esi], edi
	0xa77792: mov eax, ebp
	0xa77794: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77799: mov ebx, dword ptr [eax]
	0xa777a3: and ebx, 2
	0xa777a9: cmp ebx, 0
	0xa777af: je 0xa777c3
	0xa777c3: mov esi, ebp
	0xa777cf: add esi, 0x49
	0xa777d5: mov ebx, esi
	0xa777e3: mov eax, ebp
	0xa777ed: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa777f4: mov eax, dword ptr [eax]
	0xa777f6: add eax, 2
	0xa777fb: mov ecx, dword ptr [eax]
	0xa777fd: cmp bl, 0
	0xa77800: je 0xa77811
	0xa77813: mov edx, ebp
	0xa77815: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa7781b: xor ecx, dword ptr [edx]
	0xa7781d: mov ebx, ebp
	0xa7781f: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77825: add ecx, dword ptr [ebx]
	0xa77827: mov edi, ebp
	0xa77829: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7782f: or dword ptr [edi], ecx
	0xa77831: mov edi, ebp
	0xa77833: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa77839: add dword ptr [edi], 0x53b00f4a
	0xa7783f: xor ecx, 0x9af695a
	0xa77845: mov esi, ebp
	0xa77847: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa7784d: mov dword ptr [esi], ecx
	0xa7784f: mov edi, ebp
	0xa77851: add edi, 0xb8
	0xa77859: mov ebx, ebp
Load [EBP+0xb8](STATIC)
	0xa7785b: mov edi, dword ptr [edi]
	0xa77869: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa77874: mov ebx, dword ptr [ebx]
	0xa7787b: add ebx, 0
	0xa7788b: movzx ebx, word ptr [ebx]
	0xa7788e: mov edx, ebp
	0xa77894: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa7789a: add ebx, dword ptr [edx]
	0xa778a5: xor ebx, 0xa355501
	0xa778b1: mov edx, ebp
	0xa778bb: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa778c1: add dword ptr [edx], ebx
	0xa778cb: and ebx, 0xffff
	0xa778e2: add edi, ebx
	0xa778ed: mov ebx, dword ptr [edi]
	0xa778ef: mov edx, ebp
	0xa77903: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6180e
	0xa77909: add dword ptr [edx], 6
	0xa7790f: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa80faf: mov esi, ebp
	0xa80fb1: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa80fbd: mov ebx, dword ptr [esi]
	0xa80fc3: add ebx, 0x27ea98b7
	0xa80fc9: mov eax, ebp
	0xa80fd3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80fd8: or dword ptr [eax], ebx
	0xa80fe4: mov eax, ebp
	0xa80fe6: add eax, 0x79
	0xa80feb: mov ebx, ebp
Load [EBP+0x79](STATIC)
	0xa80fed: mov edx, dword ptr [eax]
	0xa80fef: xor edx, 0x9af695a
	0xa80ff5: xor edx, 0x5e2b5da
	0xa80ffb: mov edi, ebp
	0xa80ffd: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa81003: mov dword ptr [edi], edx
	0xa81005: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa8100b: mov edx, dword ptr [ebx]
	0xa8100d: and edx, 2
	0xa81013: cmp edx, 0
	0xa81019: je 0xa81035
	0xa81035: mov ecx, ebp
	0xa81037: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa8103d: mov eax, dword ptr [ecx]
	0xa8103f: xor eax, 0x1348fdb8
	0xa81044: sub eax, 0x5e2b5da
	0xa81049: mov edi, ebp
	0xa8104b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa81051: mov dword ptr [edi], eax
	0xa8105d: mov ebx, ebp
	0xa8105f: cmp dl, 0
	0xa81062: je 0xa81072
	0xa81074: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa8107a: and dword ptr [ebx], 0x28702690
	0xa81080: mov edx, ebp
	0xa81082: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa81088: sub dword ptr [edx], 0x7e320ca4
	0xa810ac: mov edi, ebp
	0xa810b6: mov eax, ebp
	0xa810bc: add eax, 0x49
	0xa810cf: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa810de: add dword ptr [edi], 0x69239b3
Load [EBP+0x49](STATIC)
	0xa810ec: mov ebx, dword ptr [eax]
	0xa810f3: add ebx, 0x5e2b5da
	0xa81105: mov eax, ebp
	0xa8110b: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa81110: mov ecx, dword ptr [eax]
	0xa8111f: xor ecx, 0x5e2b5da
	0xa8112f: mov eax, ebp
	0xa8113f: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa81148: mov dl, byte ptr [eax]
	0xa8114a: cmp dl, 0x1f
	0xa8114d: jne 0xa8115c
	0xa8115c: cmp dl, 0x52
	0xa8115f: jne 0xa81171
	0xa81171: cmp dl, 0x81
	0xa81174: jne 0xa81181
	0xa8117a: add ebx, ecx
	0xa8117c: pushfd
	0xa81183: add ebx, 0x5741247a
	0xa81197: mov eax, ebp
	0xa8119d: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa811a4: mov dword ptr [eax], ebx
	0xa811a8: pop esi
	0xa811af: mov eax, ebp
	0xa811c3: add eax, 0x2d
	0xa811d4: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa811e4: mov ecx, dword ptr [eax]
	0xa811f2: sub ecx, 0x5741247a
	0xa811fe: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa81204: mov edi, dword ptr [edi]
	0xa81216: sub ecx, 0x2b28b3ec
	0xa8122a: mov eax, ebp
	0xa81232: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa8123b: mov dword ptr [eax], ecx
	0xa81245: add edi, 2
	0xa8124b: movzx edi, byte ptr [edi]
	0xa8124e: cmp edi, 0
	0xa81254: je 0xa812cd
	0xa812cf: mov esi, ebp
	0xa812d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa812df: mov ebx, dword ptr [esi]
	0xa812e1: mov eax, ebp
	0xa812e3: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa812e8: add dword ptr [eax], ebx
	0xa812f2: mov esi, ebp
	0xa812f4: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa812fc: mov ecx, dword ptr [esi]
	0xa812fe: and ecx, 2
	0xa81304: cmp al, 0
	0xa81306: je 0xa81317
	0xa81319: cmp ecx, 0
	0xa8131f: je 0xa81341
	0xa81355: mov edi, ebp
	0xa81357: add edi, 0x95
	0xa8136f: mov ecx, ebp
	0xa81377: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa8138a: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa81396: mov edi, dword ptr [edi]
	0xa813a4: add edi, 0
	0xa813bc: movzx edi, word ptr [edi]
	0xa813bf: mov ebx, ebp
	0xa813cc: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa813de: xor edi, dword ptr [ebx]
	0xa813e0: xor edi, 0x5f7bc2cc
	0xa813e8: mov ebx, ebp
	0xa813f0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa813fc: xor dword ptr [ebx], edi
	0xa8140b: and edi, 0xffff
	0xa81418: add ecx, edi
	0xa8141c: mov edi, dword ptr [ecx]
	0xa81426: mov ebx, ebp
	0xa81432: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61813
	0xa81438: add dword ptr [ebx], 5
	0xa8143e: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa6d295: mov ebx, ebp
	0xa6d297: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d29d: add dword ptr [ebx], 0x3acd011
	0xa6d2a3: mov esi, ebp
	0xa6d2a5: mov edi, ebp
	0xa6d2a7: add edi, 0xe5
	0xa6d2ad: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6d2b3: mov ebx, dword ptr [esi]
Load [EBP+0xe5](STATIC)
	0xa6d2b5: mov esi, dword ptr [edi]
	0xa6d2b7: mov edi, ebp
	0xa6d2b9: add ebx, 0x2b28b3ec
	0xa6d2bf: add edi, 0xa
	0xa6d2c5: mov ecx, ebp
	0xa6d2c7: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa6d2cd: mov eax, dword ptr [ecx]
	0xa6d2cf: xor eax, 0x2b28b3ec
	0xa6d2d4: mov edx, ebp
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d2d6: xor dword ptr [edi], esi
	0xa6d2d8: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6d2de: mov cl, byte ptr [edx]
	0xa6d2e0: cmp cl, 0x1f
	0xa6d2e3: jne 0xa6d2eb
	0xa6d2eb: cmp cl, 0x52
	0xa6d2ee: jne 0xa6d2f7
	0xa6d2f7: cmp cl, 0x81
	0xa6d2fa: jne 0xa6d302
	0xa6d300: mov dword ptr [eax], ebx
	0xa6d302: cmp cl, 2
	0xa6d305: jne 0xa6d30d
	0xa6d339: mov edi, ebp
	0xa6d33b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d341: sub dword ptr [edi], 0x2fa72170
	0xa6d359: mov esi, ebp
	0xa6d35b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d361: and dword ptr [esi], 0x4ec2171f
	0xa6d36f: mov edi, ebp
	0xa6d371: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6d377: mov eax, dword ptr [edi]
	0xa6d379: mov ecx, ebp
	0xa6d37d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d383: sub dword ptr [ecx], eax
	0xa6d38c: mov edi, ebp
	0xa6d395: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa6d39b: mov edi, dword ptr [edi]
	0xa6d3a8: add edi, 0
	0xa6d3c0: movzx edi, word ptr [edi]
	0xa6d3c3: mov eax, ebp
	0xa6d3c9: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa6d3e4: mov eax, dword ptr [eax]
	0xa6d3ee: mov ecx, ebp
	0xa6d3f0: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa6d3fe: xor edi, dword ptr [ecx]
	0xa6d408: sub edi, 0x1de9519
	0xa6d415: mov edx, ebp
	0xa6d41d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d42b: add dword ptr [edx], edi
	0xa6d43b: and edi, 0xffff
	0xa6d441: add eax, edi
	0xa6d457: mov edi, dword ptr [eax]
	0xa6d45f: mov esi, ebp
	0xa6d461: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61815
	0xa6d467: add dword ptr [esi], 2
	0xa6d46d: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa56574: mov esi, ebp
	0xa56576: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa56593: mov esi, dword ptr [esi]
	0xa5659f: add esi, 2
	0xa565c3: movzx ecx, byte ptr [esi]
	0xa565e9: mov eax, ebp
	0xa565ef: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa565fe: sub ecx, dword ptr [eax]
	0xa5660c: mov ebx, ebp
	0xa56615: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56624: add ecx, dword ptr [ebx]
	0xa5665f: mov ebx, ebp
	0xa5666b: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56675: or dword ptr [ebx], 0x7ec4eb23
	0xa5667d: mov ebx, ebp
	0xa5667f: add ebx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa56690: mov byte ptr [ebx], cl
	0xa56692: mov ebx, ebp
	0xa56694: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa566a0: mov edi, dword ptr [ebx]
	0xa566ad: mov esi, ebp
	0xa566af: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566b5: and dword ptr [esi], edi
	0xa566b7: mov eax, ebp
	0xa566b9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566be: xor dword ptr [eax], 0x73e12ce0
	0xa566ce: mov edx, ebp
	0xa566d0: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa566d6: mov eax, dword ptr [edx]
	0xa566d8: xor eax, 0x17a2fbf2
	0xa566dd: mov esi, ebp
	0xa566df: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566e5: xor dword ptr [esi], eax
	0xa566e7: mov edx, ebp
	0xa566e9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566ef: xor dword ptr [edx], 0x599a8aa5
	0xa566f5: mov eax, ebp
	0xa566f7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa566fc: mov ebx, dword ptr [eax]
	0xa566fe: mov edi, ebp
	0xa56700: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56706: and dword ptr [edi], ebx
	0xa56719: mov edi, ebp
	0xa5671b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56721: sub dword ptr [edi], 0x31011cc8
	0xa56739: mov eax, ebp
	0xa5673b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56740: xor dword ptr [eax], 0x554a5ab3
	0xa56746: mov ecx, ebp
	0xa56748: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5674e: mov eax, dword ptr [ecx]
	0xa56750: xor eax, 0x1fbc7a4b
	0xa56755: mov ecx, ebp
	0xa56757: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5675d: xor dword ptr [ecx], eax
	0xa5675f: mov ebx, ebp
	0xa56761: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56767: xor dword ptr [ebx], 0x25ab6016
	0xa5676f: mov ecx, ebp
	0xa56779: add ecx, 0xa
	0xa5677f: cmp cl, 0
	0xa56782: je 0xa56792
	0xa5679e: mov edi, ebp
	0xa567a0: add edi, 0xb8
	0xa567b8: mov ecx, ebp
	0xa567c4: add ecx, 0x95
Load [EBP+0xb8](STATIC)
	0xa567d5: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa567d7: mov ecx, dword ptr [ecx]
	0xa567e2: add ecx, 0
	0xa567fb: movzx ecx, word ptr [ecx]
	0xa5682a: mov ebx, ebp
	0xa5683b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5684d: sub dword ptr [ebx], ecx
	0xa5685c: and ecx, 0xffff
	0xa5686d: add edi, ecx
	0xa56871: mov ebx, dword ptr [edi]
	0xa56873: mov ecx, ebp
	0xa56880: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61818
	0xa56886: add dword ptr [ecx], 3
	0xa5688c: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa61e5e: cmp al, 0
	0xa61e60: je 0xa61e71
	0xa61e8f: cmp al, 0
	0xa61e91: je 0xa61ea2
	0xa61ead: mov ecx, ebp
	0xa61eaf: add ecx, 0xa
	0xa61ecc: cmp cl, 0
	0xa61ecf: je 0xa61ee0
	0xa61ee2: mov eax, ebp
	0xa61ee4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61ee9: and dword ptr [eax], 0x4dd027b3
	0xa61f02: mov edi, ebp
	0xa61f04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61f0a: sub dword ptr [edi], 0x47fe636e
	0xa61f23: mov edx, ebp
	0xa61f2b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa61f37: mov edx, dword ptr [edx]
	0xa61f3b: add edx, 2
	0xa61f43: movzx ebx, word ptr [edx]
	0xa61f4a: mov edx, ebp
	0xa61f57: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa61f5d: sub ebx, dword ptr [edx]
	0xa61f81: mov eax, ebp
	0xa61f97: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61fa4: xor dword ptr [eax], ebx
	0xa61fcb: and ebx, 0xffff
	0xa61fd3: add ebx, ebp
Load [EBP+0xb0](VM_REGISTER)
	0xa61fdb: mov ebx, dword ptr [ebx]
	0xa61ff4: xor ebx, 0x1348fdb8
	0xa6200e: mov ecx, ebp
	0xa62017: add ecx, 0x49
Store [EBP+0x49](STATIC)
	0xa62027: mov dword ptr [ecx], ebx
	0xa6203f: mov eax, ebp
	0xa62041: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62046: xor dword ptr [eax], 0x18e309a9
	0xa6204c: mov eax, ebp
	0xa6204e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62053: mov esi, dword ptr [eax]
	0xa62055: and esi, 2
	0xa6205b: cmp esi, 0
	0xa62061: je 0xa62081
	0xa62081: mov edi, ebp
	0xa62085: mov ecx, ebp
	0xa6208d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa62099: mov ecx, dword ptr [ecx]
	0xa6209f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa620ad: mov edi, dword ptr [edi]
	0xa620b3: add ecx, 0
	0xa620c1: movzx ecx, word ptr [ecx]
	0xa620cc: mov eax, ebp
	0xa620de: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa620e9: sub ecx, dword ptr [eax]
	0xa62104: mov eax, ebp
	0xa62106: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6211b: sub dword ptr [eax], ecx
	0xa6211d: and ecx, 0xffff
	0xa62129: add edi, ecx
	0xa62132: mov eax, dword ptr [edi]
	0xa62134: mov edi, ebp
	0xa6213a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6181c
	0xa62140: add dword ptr [edi], 4
	0xa62146: jmp eax
handlers outputs:



	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9c8: and eax, 0x31838a60
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61820
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa4ec96: mov edx, ebp
	0xa4ec98: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4eca0: mov cl, byte ptr [edx]
	0xa4ecdb: mov edi, ebp
	0xa4ecdd: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4ece3: sub ecx, dword ptr [edi]
	0xa4ecf9: cmp cl, 0
	0xa4ecfc: je 0xa4ed0c
	0xa4ed1c: mov ecx, ebp
	0xa4ed1e: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed24: and dword ptr [ecx], 0x7d68145e
	0xa4ed2c: mov ebx, ebp
	0xa4ed2e: add ebx, 0x9e
	0xa4ed3d: mov esi, ebp
	0xa4ed3f: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed45: mov esi, dword ptr [esi]
	0xa4ed49: add esi, 3
	0xa4ed4f: movzx eax, word ptr [esi]
	0xa4ed5a: mov ecx, ebp
	0xa4ed5c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4ed62: xor eax, dword ptr [ecx]
	0xa4ed64: mov ecx, ebp
	0xa4ed66: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed6c: sub dword ptr [ecx], eax
	0xa4ed6e: mov edi, ebp
	0xa4ed70: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ed76: add dword ptr [edi], 0x3394b0f2
	0xa4ed7c: and eax, 0xffff
	0xa4ed81: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4ed83: mov eax, dword ptr [eax]
	0xa4ed85: mov edx, ebp
	0xa4ed87: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed8d: mov edx, dword ptr [edx]
	0xa4ed8f: add edx, 2
	0xa4ed95: mov cl, byte ptr [edx]
	0xa4ed97: cmp cl, 0x1f
	0xa4ed9a: jne 0xa4eda2
	0xa4eda2: cmp cl, 0x52
	0xa4eda5: jne 0xa4edae
	0xa4edae: cmp cl, 0x81
	0xa4edb1: jne 0xa4edb9
Deref(t14,ds)
	0xa4edb7: mov eax, dword ptr [eax]
	0xa4edb9: xor eax, 0x9af695a
	0xa4edbe: mov edi, ebp
	0xa4edc0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa4edc6: mov dword ptr [edi], eax
	0xa4edd2: cmp bl, 0
	0xa4edd5: je 0xa4ede6
	0xa4ede8: mov eax, ebp
	0xa4edf2: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4edf7: mov ecx, dword ptr [eax]
	0xa4edf9: and ecx, 2
	0xa4edff: cmp ecx, 0
	0xa4ee05: je 0xa4ee25
	0xa4ee0b: mov eax, ebp
	0xa4ee0d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee12: xor dword ptr [eax], 0x3b40f517
	0xa4ee18: mov eax, ebp
	0xa4ee1a: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee1f: and dword ptr [eax], 0x6bfd7ac4
	0xa4ee33: mov esi, ebp
	0xa4ee35: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ee3b: mov cl, byte ptr [esi]
	0xa4ee47: cmp cl, 0
	0xa4ee4a: je 0xa4ee5a
	0xa4ee76: mov edx, ebp
	0xa4ee7e: add edx, 0xb8
	0xa4ee8c: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa4ee98: mov edx, dword ptr [edx]
	0xa4ee9c: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa4eeb1: mov eax, dword ptr [eax]
	0xa4eeb3: add eax, 0
	0xa4eec2: movzx eax, word ptr [eax]
	0xa4eecb: mov ebx, ebp
	0xa4eed1: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa4eed7: xor eax, dword ptr [ebx]
	0xa4eeeb: add eax, 0x68f36852
	0xa4ef02: mov ebx, ebp
	0xa4ef08: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ef0e: sub dword ptr [ebx], eax
	0xa4ef1c: and eax, 0xffff
	0xa4ef26: add edx, eax
	0xa4ef28: mov eax, dword ptr [edx]
	0xa4ef2c: mov edx, ebp
	0xa4ef38: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61825
	0xa4ef3e: add dword ptr [edx], 5
	0xa4ef44: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5e1d3: mov edi, ebp
	0xa5e1d5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e1db: mov eax, dword ptr [edi]
	0xa5e1dd: mov esi, ebp
	0xa5e1df: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1e5: sub dword ptr [esi], eax
	0xa5e1e7: mov ebx, ebp
	0xa5e1e9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1ef: and dword ptr [ebx], 0x2b76c7fb
	0xa5e21d: mov ecx, ebp
	0xa5e221: mov ebx, ebp
	0xa5e22e: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa5e238: mov edx, dword ptr [ecx]
	0xa5e245: xor edx, 0x1348fdb8
	0xa5e25f: add ebx, 0x79
	0xa5e270: xor edx, 0x772d9eaf
	0xa5e280: mov edi, ebp
Load [EBP+0x79](STATIC)
	0xa5e28b: mov ecx, dword ptr [ebx]
	0xa5e294: add edi, 0x49
	0xa5e2a6: xor ecx, 0x9af695a
	0xa5e2c1: sub ecx, 0x772d9eaf
Store [EBP+0x49](STATIC)
	0xa5e2d1: mov dword ptr [edi], edx
	0xa5e2de: mov edi, ebp
	0xa5e2e0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5e2ef: mov dword ptr [edi], ecx
	0xa5e2f1: mov edi, ebp
	0xa5e2f3: mov eax, ebp
	0xa5e2f5: add edi, 0x79
	0xa5e2fb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e300: mov ecx, dword ptr [eax]
	0xa5e302: mov eax, ebp
Load [EBP+0x79](STATIC)
	0xa5e304: mov esi, dword ptr [edi]
	0xa5e306: add esi, 0x772d9eaf
	0xa5e30c: sub esi, 0x4e577e5
	0xa5e312: mov edx, ebp
	0xa5e314: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e319: add dword ptr [eax], ecx
	0xa5e31b: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e321: mov dword ptr [edx], esi
	0xa5e323: add ebx, eax
	0xa5e325: pushfd
	0xa5e328: mov ebx, ebp
	0xa5e332: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e338: mov edx, dword ptr [ebx]
	0xa5e33a: and edx, 0x486a9870
	0xa5e340: mov ecx, ebp
	0xa5e342: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e348: or dword ptr [ecx], edx
	0xa5e34a: mov eax, ebp
	0xa5e34c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e351: sub dword ptr [eax], 0x4af92329
	0xa5e359: mov edx, ebp
	0xa5e35b: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e368: mov eax, dword ptr [edx]
	0xa5e36a: and eax, 2
	0xa5e36f: cmp eax, 0
	0xa5e374: je 0xa5e390
	0xa5e390: mov ecx, ebp
	0xa5e392: add ecx, 0x49
	0xa5e3b9: cmp cl, 0
	0xa5e3bc: je 0xa5e3cd
	0xa5e3cf: mov esi, ebp
	0xa5e3d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e3d7: mov edx, dword ptr [esi]
	0xa5e3d9: mov edi, ebp
	0xa5e3db: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e3e1: xor dword ptr [edi], edx
	0xa5e3f0: mov edi, ebp
	0xa5e400: add edi, 0x2d
	0xa5e41b: mov ebx, ebp
Load [EBP+0x2d](STATIC)
	0xa5e42c: mov eax, dword ptr [edi]
	0xa5e436: pop edi
	0xa5e437: add ebx, 0x95
	0xa5e445: add eax, 0x4e577e5
	0xa5e44a: sub eax, 0x2b28b3ec
	0xa5e455: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e457: mov ebx, dword ptr [ebx]
	0xa5e469: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e471: mov dword ptr [edx], eax
	0xa5e473: add ebx, 2
	0xa5e479: movzx ebx, byte ptr [ebx]
	0xa5e47c: cmp ebx, 0
	0xa5e482: je 0xa5e4fa
	0xa5e4fa: mov edi, ebp
	0xa5e4fc: add edi, 0x95
	0xa5e504: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e517: mov edi, dword ptr [edi]
	0xa5e523: add edi, 3
	0xa5e533: movzx edi, word ptr [edi]
	0xa5e538: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5e544: mov edx, dword ptr [edx]
	0xa5e551: mov eax, ebp
	0xa5e55b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5e562: add edi, dword ptr [eax]
	0xa5e564: mov ecx, ebp
	0xa5e571: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e579: and dword ptr [ecx], edi
	0xa5e587: and edi, 0xffff
	0xa5e58d: add edx, edi
	0xa5e59b: mov edi, dword ptr [edx]
	0xa5e5a8: mov esi, ebp
	0xa5e5aa: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6182a
	0xa5e5b0: add dword ptr [esi], 5
	0xa5e5b6: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa62baf: mov edx, ebp
	0xa62bc1: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa62bdb: mov ebx, dword ptr [edx]
	0xa62bdd: add ebx, 0x2b28b3ec
	0xa62be3: mov edx, ebp
	0xa62be7: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa62bf7: mov ecx, dword ptr [edx]
	0xa62bfd: xor ecx, 0x2b28b3ec
	0xa62c03: mov edx, ebp
	0xa62c11: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62c17: mov al, byte ptr [edx]
	0xa62c19: cmp al, 0x1f
	0xa62c1b: jne 0xa62c27
	0xa62c27: cmp al, 0x52
	0xa62c29: jne 0xa62c42
	0xa62c42: cmp al, 0x81
	0xa62c44: jne 0xa62c8a
	0xa62c57: mov dword ptr [ecx], ebx
	0xa62c8a: cmp al, 2
	0xa62c8c: jne 0xa62caa
	0xa62cb0: mov ecx, ebp
	0xa62cb9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62cbf: mov esi, dword ptr [ecx]
	0xa62cc1: and esi, 2
	0xa62ccb: cmp esi, 0
	0xa62cd1: je 0xa62cf3
	0xa62d24: mov esi, ebp
	0xa62d26: mov eax, ebp
	0xa62d28: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62d2d: mov ecx, dword ptr [eax]
	0xa62d2f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d35: and dword ptr [esi], 0x6f24ddf
	0xa62d3b: and ecx, 2
	0xa62d41: cmp ecx, 0
	0xa62d47: je 0xa62d67
	0xa62d67: mov esi, ebp
	0xa62d69: add esi, 0xa
	0xa62d6f: mov eax, ebp
	0xa62d71: add eax, 0xe5
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d76: and dword ptr [esi], 0x2486315
Load [EBP+0xe5](STATIC)
	0xa62d7c: mov ebx, dword ptr [eax]
	0xa62d7e: and ebx, 2
	0xa62d84: cmp ebx, 0
	0xa62d8a: je 0xa62daa
	0xa62daa: mov edx, ebp
	0xa62dac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62db9: mov edi, dword ptr [edx]
	0xa62dbd: and edi, 2
	0xa62dc3: cmp edi, 0
	0xa62dc9: je 0xa62deb
	0xa62e09: mov ebx, ebp
	0xa62e17: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa62e27: mov ebx, dword ptr [ebx]
	0xa62e35: add ebx, 0
	0xa62e48: mov eax, ebp
	0xa62e52: movzx ebx, word ptr [ebx]
	0xa62e5b: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa62e6a: mov eax, dword ptr [eax]
	0xa62e90: mov esi, ebp
	0xa62e9a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62ea4: or dword ptr [esi], ebx
	0xa62ea8: and ebx, 0xffff
	0xa62eb8: add eax, ebx
	0xa62ec9: mov esi, dword ptr [eax]
	0xa62ed1: mov edi, ebp
	0xa62ed8: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6182c
	0xa62ede: add dword ptr [edi], 2
	0xa62ee4: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa78dc3: mov ecx, ebp
	0xa78dc5: cmp bl, 0
	0xa78dc8: je 0xa78dd9
	0xa78ddb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78de1: mov ebx, dword ptr [ecx]
	0xa78de3: mov esi, ebp
	0xa78de5: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78deb: sub dword ptr [esi], ebx
	0xa78def: mov esi, ebp
	0xa78df1: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa78df7: mov bl, byte ptr [esi]
	0xa78e01: cmp bl, 0
	0xa78e04: je 0xa78e14
	0xa78e16: mov eax, ebp
	0xa78e18: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa78e1d: mov esi, dword ptr [eax]
	0xa78e1f: add esi, 0x10f8184d
	0xa78e25: mov ebx, ebp
	0xa78e27: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78e2d: add dword ptr [ebx], esi
	0xa78e2f: mov ecx, ebp
	0xa78e31: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78e37: xor dword ptr [ecx], 0x291c9974
	0xa78e51: mov edx, ebp
	0xa78e55: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa78e60: mov edx, dword ptr [edx]
	0xa78e64: add edx, 0
	0xa78e70: movzx ebx, word ptr [edx]
	0xa78e73: mov eax, ebp
	0xa78e77: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa78e7c: xor ebx, dword ptr [eax]
	0xa78e7e: mov edi, ebp
	0xa78e80: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78e86: add ebx, dword ptr [edi]
	0xa78e88: mov esi, ebp
	0xa78e8a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78e90: sub dword ptr [esi], ebx
	0xa78e92: mov esi, ebp
	0xa78e94: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78e9a: and dword ptr [esi], 0xe6b50ef
	0xa78ea0: and ebx, 0xffff
	0xa78ea6: add ebx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa78ea8: mov ebx, dword ptr [ebx]
	0xa78eaa: xor ebx, 0x9af695a
	0xa78eb0: mov ecx, ebp
	0xa78eb2: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa78eb8: mov dword ptr [ecx], ebx
	0xa78eba: mov esi, ebp
	0xa78ebe: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78ec4: mov edi, dword ptr [esi]
	0xa78ece: and edi, 2
	0xa78ed4: cmp edi, 0
	0xa78eda: je 0xa78efc
	0xa78f07: mov ebx, ebp
	0xa78f09: add ebx, 0x2d
	0xa78f1e: mov eax, ebp
	0xa78f20: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78f2d: or dword ptr [eax], 0x327ac1ea
	0xa78f35: cmp bl, 0
	0xa78f38: je 0xa78f49
	0xa78f4b: mov esi, ebp
	0xa78f4d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78f5b: sub dword ptr [esi], 0x700454a1
	0xa78f69: mov ebx, ebp
	0xa78f7b: mov eax, ebp
	0xa78f7d: add ebx, 0x95
	0xa78f83: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa78f8e: mov eax, dword ptr [eax]
Load [EBP+0x95](STATIC)
	0xa78f9f: mov ebx, dword ptr [ebx]
	0xa78fb0: add ebx, 2
	0xa78fcb: movzx ebx, word ptr [ebx]
	0xa78fce: mov edi, ebp
	0xa78fd0: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa78fed: xor ebx, dword ptr [edi]
	0xa78ff7: add ebx, 0x59fe1e4d
	0xa79015: and ebx, 0xffff
	0xa79024: add eax, ebx
	0xa79026: mov ecx, dword ptr [eax]
	0xa79032: mov esi, ebp
	0xa79042: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61830
	0xa79048: add dword ptr [esi], 4
	0xa7904e: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa73f2b: cmp cl, 0
	0xa73f2e: je 0xa73f3f
	0xa73f41: mov edx, ebp
	0xa73f43: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73f49: or dword ptr [edx], 0x466e33c6
	0xa73f4f: mov ecx, ebp
	0xa73f51: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73f57: mov eax, dword ptr [ecx]
	0xa73f5f: mov ecx, ebp
	0xa73f6d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73f73: sub dword ptr [ecx], eax
	0xa73f82: mov edx, ebp
	0xa73f8d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa73f93: mov edx, dword ptr [edx]
	0xa73f95: add edx, 0
	0xa73f9b: movzx edi, word ptr [edx]
	0xa73fa5: add edi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa73fab: mov esp, dword ptr [edi]
	0xa73fad: mov eax, ebp
	0xa73faf: add eax, 0xe5
	0xa73fb4: mov ebx, ebp
	0xa73fb6: add ebx, 0xef
	0xa73fbe: cmp bl, 0
	0xa73fc1: je 0xa73fd2
Load [EBP+0xe5](STATIC)
	0xa73fd4: mov ecx, dword ptr [eax]
	0xa73fd6: and ecx, 2
	0xa73fdc: cmp ecx, 0
	0xa73fe2: je 0xa74002
	0xa73fe8: mov eax, ebp
	0xa73fea: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73fef: add dword ptr [eax], 0x583b7db1
	0xa73ff5: mov eax, ebp
	0xa73ff7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73ffc: add dword ptr [eax], 0x18a971b2
	0xa7400e: mov ebx, ebp
	0xa74018: add ebx, 0xb8
	0xa74029: mov eax, ebp
	0xa74031: add eax, 0x95
Load [EBP+0xb8](STATIC)
	0xa7403d: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa7404b: mov eax, dword ptr [eax]
	0xa7404f: add eax, 2
	0xa7405b: movzx eax, word ptr [eax]
	0xa74068: mov edx, ebp
	0xa74070: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa74080: add eax, dword ptr [edx]
	0xa7408a: xor eax, 0x488bb361
	0xa74091: mov edx, ebp
	0xa740a0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa740b6: xor dword ptr [edx], eax
	0xa740c6: and eax, 0xffff
	0xa740d7: add ebx, eax
	0xa740e5: mov edx, dword ptr [ebx]
	0xa740fa: mov esi, ebp
	0xa74100: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61834
	0xa74106: add dword ptr [esi], 4
	0xa7410c: jmp edx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5530a: mov edx, ebp
	0xa5530c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55312: mov ecx, dword ptr [edx]
	0xa55314: and ecx, 2
	0xa5531a: cmp ecx, 0
	0xa55320: je 0xa55342
	0xa55326: mov edx, ebp
	0xa55328: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5532e: or dword ptr [edx], 0x155f78b8
	0xa55334: mov edx, ebp
	0xa55336: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5533c: add dword ptr [edx], 0x167f964e
	0xa55344: mov ecx, ebp
	0xa5534c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55354: mov eax, dword ptr [ecx]
	0xa55356: xor eax, 0x4d6df755
	0xa5535b: mov edi, ebp
	0xa5535d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55363: or dword ptr [edi], eax
	0xa55365: mov esi, ebp
	0xa55367: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5536d: add dword ptr [esi], 0x7120563f
	0xa5539f: mov ecx, ebp
	0xa553a1: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa553a7: and dword ptr [ecx], 0xc0ec81b
	0xa553ad: mov ecx, ebp
	0xa553af: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa553b5: mov ebx, dword ptr [ecx]
	0xa553b7: and ebx, 2
	0xa553bd: cmp ebx, 0
	0xa553c3: je 0xa553e5
	0xa553e5: mov edi, ebp
	0xa553e7: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa553ed: mov eax, dword ptr [edi]
	0xa553ef: or eax, 0x3f8aece1
	0xa553fa: mov edx, ebp
	0xa553fc: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55402: add dword ptr [edx], eax
	0xa5540d: mov edi, ebp
	0xa5540f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55415: and dword ptr [edi], 0x35c81480
	0xa55431: mov edx, ebp
	0xa55433: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa55439: mov ecx, dword ptr [edx]
	0xa5543b: sub ecx, 0x1fa836de
	0xa55441: mov esi, ebp
	0xa55443: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55449: add dword ptr [esi], ecx
	0xa5544b: mov ebx, ebp
	0xa5544d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55453: xor dword ptr [ebx], 0x2de3f63e
	0xa55459: mov edi, ebp
	0xa5545b: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa55461: mov edx, dword ptr [edi]
	0xa55463: mov eax, ebp
	0xa55465: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5546a: or dword ptr [eax], edx
	0xa5546c: mov esi, ebp
	0xa5546e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55474: and dword ptr [esi], 0x1493b453
	0xa5548c: mov edi, ebp
	0xa55497: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5549d: mov ecx, dword ptr [edi]
	0xa5549f: add ecx, 0xeaeb99a
	0xa554a5: mov esi, ebp
	0xa554a7: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa554ad: and dword ptr [esi], ecx
	0xa554bf: mov edx, ebp
	0xa554de: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa554e6: mov edx, dword ptr [edx]
	0xa5550a: add edx, 0
	0xa55522: movzx ebx, byte ptr [edx]
	0xa55533: mov edx, ebp
	0xa5553f: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5554b: add ebx, dword ptr [edx]
	0xa55551: mov edx, ebp
	0xa55559: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55563: add ebx, dword ptr [edx]
	0xa5556b: mov edx, ebp
	0xa55573: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5557d: or dword ptr [edx], ebx
	0xa55593: mov edx, ebp
	0xa5559d: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa555a5: sub dword ptr [edx], 0x2ce8a044
	0xa555bf: mov edi, ebp
	0xa555c1: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa555d3: mov byte ptr [edi], bl
	0xa555d5: mov esi, ebp
	0xa555d9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa555e5: mov eax, dword ptr [esi]
	0xa555e7: mov esi, ebp
	0xa555e9: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa555ef: xor dword ptr [esi], eax
	0xa5560a: mov eax, ebp
	0xa5560c: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5561a: mov eax, dword ptr [eax]
	0xa55628: mov edx, ebp
	0xa5562c: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa55632: mov edx, dword ptr [edx]
	0xa5563f: add edx, 1
	0xa55647: movzx edx, word ptr [edx]
	0xa5564a: mov ecx, ebp
	0xa5564c: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5565a: add edx, dword ptr [ecx]
	0xa55664: add edx, 0x104092c5
	0xa55670: mov esi, ebp
	0xa5567a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55685: and dword ptr [esi], edx
	0xa55699: and edx, 0xffff
	0xa5569f: add eax, edx
	0xa556b0: mov esi, dword ptr [eax]
	0xa556b2: mov edx, ebp
	0xa556c9: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61837
	0xa556cf: add dword ptr [edx], 3
	0xa556d5: jmp esi
handlers outputs:



	0xa7c633: mov ecx, ebp
	0xa7c635: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c63b: mov ebx, dword ptr [ecx]
	0xa7c646: and ebx, 2
	0xa7c654: cmp ebx, 0
	0xa7c65a: je 0xa7c67c
	0xa7c680: mov esi, ebp
	0xa7c682: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c688: mov edi, dword ptr [esi]
	0xa7c68a: or edi, 0x585dd1e3
	0xa7c690: mov ecx, ebp
	0xa7c692: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c698: add dword ptr [ecx], edi
	0xa7c6a8: mov edx, ebp
	0xa7c6ac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c6b8: mov eax, dword ptr [edx]
	0xa7c6ba: add eax, 0x6efcee4e
	0xa7c6bf: mov ecx, ebp
	0xa7c6c1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c6c9: sub dword ptr [ecx], eax
	0xa7c6d5: mov ebx, ebp
	0xa7c6e7: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c6fb: mov ebx, dword ptr [ebx]
	0xa7c6fd: add ebx, 0
	0xa7c709: movzx eax, word ptr [ebx]
	0xa7c729: mov edx, ebp
	0xa7c72f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c735: add eax, dword ptr [edx]
	0xa7c74c: mov ebx, ebp
	0xa7c754: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c766: add dword ptr [ebx], eax
	0xa7c792: and eax, 0xffff
	0xa7c7a0: add eax, ebp
	0xa7c7a4: xor eax, 0x2b28b3ec
	0xa7c7bb: mov edi, ebp
	0xa7c7cd: add edi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c7d3: mov dword ptr [edi], eax
	0xa7c7e7: mov esi, ebp
	0xa7c7e9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c7ef: mov edx, dword ptr [esi]
	0xa7c7f1: and edx, 2
	0xa7c7f7: cmp edx, 0
	0xa7c7fd: je 0xa7c81f
	0xa7c803: mov esi, ebp
	0xa7c805: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c80b: sub dword ptr [esi], 0x2ccb4ab9
	0xa7c811: mov esi, ebp
	0xa7c813: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c819: or dword ptr [esi], 0x7b50d24d
	0xa7c81f: mov edi, ebp
	0xa7c821: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c827: mov ecx, dword ptr [edi]
	0xa7c829: and ecx, 2
	0xa7c82f: cmp ecx, 0
	0xa7c835: je 0xa7c857
	0xa7c83b: mov edi, ebp
	0xa7c83d: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c843: or dword ptr [edi], 0x146c05c7
	0xa7c849: mov edi, ebp
	0xa7c84b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c851: add dword ptr [edi], 0x1ce889ec
	0xa7c857: mov edi, ebp
	0xa7c863: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c869: mov eax, dword ptr [edi]
	0xa7c86b: mov esi, ebp
	0xa7c86d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c873: add dword ptr [esi], eax
	0xa7c875: mov edi, ebp
	0xa7c877: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c87d: mov eax, dword ptr [edi]
	0xa7c87f: mov edx, ebp
	0xa7c881: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c887: or dword ptr [edx], 0x4c3e24ce
	0xa7c88d: and eax, 2
	0xa7c892: cmp eax, 0
	0xa7c897: je 0xa7c8b9
	0xa7c89d: mov edi, ebp
	0xa7c89f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8a5: sub dword ptr [edi], 0x7b88e838
	0xa7c8ab: mov edi, ebp
	0xa7c8ad: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8b3: or dword ptr [edi], 0x7c8307dc
	0xa7c8b9: mov esi, ebp
	0xa7c8bb: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8c1: sub dword ptr [esi], 0x472eb0b6
	0xa7c8c7: mov eax, ebp
	0xa7c8c9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c8ce: mov ecx, dword ptr [eax]
	0xa7c8d0: sub ecx, 0x322439ec
	0xa7c8d6: mov esi, ebp
	0xa7c8d8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8de: add dword ptr [esi], ecx
	0xa7c8eb: mov edi, ebp
	0xa7c8ed: mov ecx, ebp
	0xa7c8f6: add edi, 0xb8
	0xa7c908: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c910: mov ecx, dword ptr [ecx]
	0xa7c918: add ecx, 2
	0xa7c920: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa7c929: mov edi, dword ptr [edi]
	0xa7c92d: mov eax, ebp
	0xa7c92f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c936: xor ecx, dword ptr [eax]
	0xa7c95a: mov ebx, ebp
	0xa7c95c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c962: add dword ptr [ebx], ecx
	0xa7c977: and ecx, 0xffff
	0xa7c97f: add edi, ecx
	0xa7c985: mov ebx, dword ptr [edi]
	0xa7c987: mov edi, ebp
	0xa7c999: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6183b
	0xa7c99f: add dword ptr [edi], 4
	0xa7c9a5: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6183f
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa5e1d3: mov edi, ebp
	0xa5e1d5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e1db: mov eax, dword ptr [edi]
	0xa5e1dd: mov esi, ebp
	0xa5e1df: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1e5: sub dword ptr [esi], eax
	0xa5e1e7: mov ebx, ebp
	0xa5e1e9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1ef: and dword ptr [ebx], 0x2b76c7fb
	0xa5e21d: mov ecx, ebp
	0xa5e221: mov ebx, ebp
	0xa5e22e: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa5e238: mov edx, dword ptr [ecx]
	0xa5e245: xor edx, 0x1348fdb8
	0xa5e25f: add ebx, 0x79
	0xa5e270: xor edx, 0x772d9eaf
	0xa5e280: mov edi, ebp
Load [EBP+0x79](STATIC)
	0xa5e28b: mov ecx, dword ptr [ebx]
	0xa5e294: add edi, 0x49
	0xa5e2a6: xor ecx, 0x9af695a
	0xa5e2c1: sub ecx, 0x772d9eaf
Store [EBP+0x49](STATIC)
	0xa5e2d1: mov dword ptr [edi], edx
	0xa5e2de: mov edi, ebp
	0xa5e2e0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5e2ef: mov dword ptr [edi], ecx
	0xa5e2f1: mov edi, ebp
	0xa5e2f3: mov eax, ebp
	0xa5e2f5: add edi, 0x79
	0xa5e2fb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e300: mov ecx, dword ptr [eax]
	0xa5e302: mov eax, ebp
Load [EBP+0x79](STATIC)
	0xa5e304: mov esi, dword ptr [edi]
	0xa5e306: add esi, 0x772d9eaf
	0xa5e30c: sub esi, 0x4e577e5
	0xa5e312: mov edx, ebp
	0xa5e314: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e319: add dword ptr [eax], ecx
	0xa5e31b: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e321: mov dword ptr [edx], esi
	0xa5e323: add ebx, eax
	0xa5e325: pushfd
	0xa5e328: mov ebx, ebp
	0xa5e332: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e338: mov edx, dword ptr [ebx]
	0xa5e33a: and edx, 0x486a9870
	0xa5e340: mov ecx, ebp
	0xa5e342: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e348: or dword ptr [ecx], edx
	0xa5e34a: mov eax, ebp
	0xa5e34c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e351: sub dword ptr [eax], 0x4af92329
	0xa5e359: mov edx, ebp
	0xa5e35b: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e368: mov eax, dword ptr [edx]
	0xa5e36a: and eax, 2
	0xa5e36f: cmp eax, 0
	0xa5e374: je 0xa5e390
	0xa5e390: mov ecx, ebp
	0xa5e392: add ecx, 0x49
	0xa5e3b9: cmp cl, 0
	0xa5e3bc: je 0xa5e3cd
	0xa5e3cf: mov esi, ebp
	0xa5e3d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e3d7: mov edx, dword ptr [esi]
	0xa5e3d9: mov edi, ebp
	0xa5e3db: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e3e1: xor dword ptr [edi], edx
	0xa5e3f0: mov edi, ebp
	0xa5e400: add edi, 0x2d
	0xa5e41b: mov ebx, ebp
Load [EBP+0x2d](STATIC)
	0xa5e42c: mov eax, dword ptr [edi]
	0xa5e436: pop edi
	0xa5e437: add ebx, 0x95
	0xa5e445: add eax, 0x4e577e5
	0xa5e44a: sub eax, 0x2b28b3ec
	0xa5e455: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e457: mov ebx, dword ptr [ebx]
	0xa5e469: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e471: mov dword ptr [edx], eax
	0xa5e473: add ebx, 2
	0xa5e479: movzx ebx, byte ptr [ebx]
	0xa5e47c: cmp ebx, 0
	0xa5e482: je 0xa5e4fa
	0xa5e4fa: mov edi, ebp
	0xa5e4fc: add edi, 0x95
	0xa5e504: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e517: mov edi, dword ptr [edi]
	0xa5e523: add edi, 3
	0xa5e533: movzx edi, word ptr [edi]
	0xa5e538: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5e544: mov edx, dword ptr [edx]
	0xa5e551: mov eax, ebp
	0xa5e55b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5e562: add edi, dword ptr [eax]
	0xa5e564: mov ecx, ebp
	0xa5e571: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e579: and dword ptr [ecx], edi
	0xa5e587: and edi, 0xffff
	0xa5e58d: add edx, edi
	0xa5e59b: mov edi, dword ptr [edx]
	0xa5e5a8: mov esi, ebp
	0xa5e5aa: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61844
	0xa5e5b0: add dword ptr [esi], 5
	0xa5e5b6: jmp edi
handlers outputs:



	0xa6d295: mov ebx, ebp
	0xa6d297: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d29d: add dword ptr [ebx], 0x3acd011
	0xa6d2a3: mov esi, ebp
	0xa6d2a5: mov edi, ebp
	0xa6d2a7: add edi, 0xe5
	0xa6d2ad: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6d2b3: mov ebx, dword ptr [esi]
Load [EBP+0xe5](STATIC)
	0xa6d2b5: mov esi, dword ptr [edi]
	0xa6d2b7: mov edi, ebp
	0xa6d2b9: add ebx, 0x2b28b3ec
	0xa6d2bf: add edi, 0xa
	0xa6d2c5: mov ecx, ebp
	0xa6d2c7: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa6d2cd: mov eax, dword ptr [ecx]
	0xa6d2cf: xor eax, 0x2b28b3ec
	0xa6d2d4: mov edx, ebp
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d2d6: xor dword ptr [edi], esi
	0xa6d2d8: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6d2de: mov cl, byte ptr [edx]
	0xa6d2e0: cmp cl, 0x1f
	0xa6d2e3: jne 0xa6d2eb
	0xa6d2eb: cmp cl, 0x52
	0xa6d2ee: jne 0xa6d2f7
	0xa6d2f7: cmp cl, 0x81
	0xa6d2fa: jne 0xa6d302
	0xa6d300: mov dword ptr [eax], ebx
	0xa6d302: cmp cl, 2
	0xa6d305: jne 0xa6d30d
	0xa6d339: mov edi, ebp
	0xa6d33b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d341: sub dword ptr [edi], 0x2fa72170
	0xa6d359: mov esi, ebp
	0xa6d35b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d361: and dword ptr [esi], 0x4ec2171f
	0xa6d36f: mov edi, ebp
	0xa6d371: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6d377: mov eax, dword ptr [edi]
	0xa6d379: mov ecx, ebp
	0xa6d37d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d383: sub dword ptr [ecx], eax
	0xa6d38c: mov edi, ebp
	0xa6d395: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa6d39b: mov edi, dword ptr [edi]
	0xa6d3a8: add edi, 0
	0xa6d3c0: movzx edi, word ptr [edi]
	0xa6d3c3: mov eax, ebp
	0xa6d3c9: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa6d3e4: mov eax, dword ptr [eax]
	0xa6d3ee: mov ecx, ebp
	0xa6d3f0: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa6d3fe: xor edi, dword ptr [ecx]
	0xa6d408: sub edi, 0x1de9519
	0xa6d415: mov edx, ebp
	0xa6d41d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d42b: add dword ptr [edx], edi
	0xa6d43b: and edi, 0xffff
	0xa6d441: add eax, edi
	0xa6d457: mov edi, dword ptr [eax]
	0xa6d45f: mov esi, ebp
	0xa6d461: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61846
	0xa6d467: add dword ptr [esi], 2
	0xa6d46d: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa734c4: mov edi, ebp
	0xa734c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa734d4: mov eax, dword ptr [edi]
	0xa734d8: cmp dl, 0
	0xa734db: je 0xa734ec
	0xa734ee: mov edi, ebp
	0xa734f0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa734f6: xor dword ptr [edi], eax
	0xa734f8: mov esi, ebp
	0xa73501: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73507: mov ecx, dword ptr [esi]
	0xa73513: mov edi, ebp
	0xa73515: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7351b: mov edx, dword ptr [edi]
	0xa7351d: mov esi, ebp
	0xa7351f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73525: sub dword ptr [esi], edx
	0xa73527: mov eax, ebp
	0xa73529: mov edi, ebp
	0xa7352b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73531: mov edx, dword ptr [edi]
	0xa73533: and edx, 2
	0xa73539: add eax, 0xa
	0xa7353e: cmp edx, 0
	0xa73544: je 0xa73560
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73560: xor dword ptr [eax], 0x18a1acd7
	0xa73566: mov esi, ebp
	0xa73572: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73578: sub dword ptr [esi], 0x10275833
	0xa7357e: cmp cl, 0
	0xa73581: je 0xa73592
	0xa73594: mov eax, ebp
	0xa73596: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7359b: mov edi, dword ptr [eax]
	0xa7359d: and edi, 2
	0xa735a3: cmp edi, 0
	0xa735a9: je 0xa735c9
	0xa735d3: mov ecx, ebp
	0xa735dd: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa735fb: mov ecx, dword ptr [ecx]
	0xa73609: add ecx, 2
	0xa73611: mov ebx, dword ptr [ecx]
	0xa73633: mov esi, ebp
	0xa7363c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7364d: xor ebx, dword ptr [esi]
	0xa7365f: mov esi, ebp
	0xa73667: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73681: or dword ptr [esi], ebx
	0xa73683: mov esi, ebp
	0xa7368c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa736a6: xor dword ptr [esi], 0x22ec1e4
	0xa736b3: xor ebx, 0x9af695a
	0xa736c9: mov ecx, ebp
	0xa736d3: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa736e0: mov dword ptr [ecx], ebx
	0xa736e4: mov esi, ebp
	0xa736ec: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa736f2: mov edx, dword ptr [esi]
	0xa736f6: or edx, 0x5f94cca8
	0xa736fc: mov esi, ebp
	0xa736fe: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73704: or dword ptr [esi], edx
	0xa73706: mov eax, ebp
	0xa73708: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7370d: mov edi, dword ptr [eax]
	0xa7370f: mov eax, ebp
	0xa73711: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73716: xor dword ptr [eax], edi
	0xa73718: mov ebx, ebp
	0xa7371a: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73720: mov edx, dword ptr [ebx]
	0xa73722: mov ebx, ebp
	0xa73724: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7372a: xor dword ptr [ebx], edx
	0xa73743: mov ecx, ebp
	0xa73745: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7374b: mov eax, dword ptr [ecx]
	0xa7374d: and eax, 2
	0xa73752: cmp eax, 0
	0xa73757: je 0xa73779
	0xa73785: mov edi, ebp
	0xa7378d: add edi, 0xb8
	0xa73793: mov edx, ebp
	0xa73797: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa7379f: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa737ab: mov edx, dword ptr [edx]
	0xa737b5: add edx, 0
	0xa737c8: movzx edx, word ptr [edx]
	0xa737d0: mov ecx, ebp
	0xa737e5: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa737f2: add edx, dword ptr [ecx]
	0xa73800: xor edx, 0x3b345527
	0xa73806: mov ebx, ebp
	0xa7381b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73827: and dword ptr [ebx], edx
	0xa7382b: and edx, 0xffff
	0xa7383a: add edi, edx
	0xa7383c: mov ecx, dword ptr [edi]
	0xa7384f: mov esi, ebp
	0xa7385b: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6184c
	0xa73861: add dword ptr [esi], 6
	0xa73867: jmp ecx
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d975: mov ecx, ebp
	0xa5d977: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d97d: xor dword ptr [ecx], 0x76980d16
	0xa5d983: mov ecx, ebp
	0xa5d985: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d98b: add dword ptr [ecx], 0x1f0a33d1
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61850
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa5530a: mov edx, ebp
	0xa5530c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55312: mov ecx, dword ptr [edx]
	0xa55314: and ecx, 2
	0xa5531a: cmp ecx, 0
	0xa55320: je 0xa55342
	0xa55344: mov ecx, ebp
	0xa5534c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55354: mov eax, dword ptr [ecx]
	0xa55356: xor eax, 0x4d6df755
	0xa5535b: mov edi, ebp
	0xa5535d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55363: or dword ptr [edi], eax
	0xa55365: mov esi, ebp
	0xa55367: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5536d: add dword ptr [esi], 0x7120563f
	0xa5539f: mov ecx, ebp
	0xa553a1: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa553a7: and dword ptr [ecx], 0xc0ec81b
	0xa553ad: mov ecx, ebp
	0xa553af: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa553b5: mov ebx, dword ptr [ecx]
	0xa553b7: and ebx, 2
	0xa553bd: cmp ebx, 0
	0xa553c3: je 0xa553e5
	0xa553e5: mov edi, ebp
	0xa553e7: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa553ed: mov eax, dword ptr [edi]
	0xa553ef: or eax, 0x3f8aece1
	0xa553fa: mov edx, ebp
	0xa553fc: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55402: add dword ptr [edx], eax
	0xa5540d: mov edi, ebp
	0xa5540f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55415: and dword ptr [edi], 0x35c81480
	0xa55431: mov edx, ebp
	0xa55433: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa55439: mov ecx, dword ptr [edx]
	0xa5543b: sub ecx, 0x1fa836de
	0xa55441: mov esi, ebp
	0xa55443: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55449: add dword ptr [esi], ecx
	0xa5544b: mov ebx, ebp
	0xa5544d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55453: xor dword ptr [ebx], 0x2de3f63e
	0xa55459: mov edi, ebp
	0xa5545b: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa55461: mov edx, dword ptr [edi]
	0xa55463: mov eax, ebp
	0xa55465: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5546a: or dword ptr [eax], edx
	0xa5546c: mov esi, ebp
	0xa5546e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa55474: and dword ptr [esi], 0x1493b453
	0xa5548c: mov edi, ebp
	0xa55497: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5549d: mov ecx, dword ptr [edi]
	0xa5549f: add ecx, 0xeaeb99a
	0xa554a5: mov esi, ebp
	0xa554a7: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa554ad: and dword ptr [esi], ecx
	0xa554bf: mov edx, ebp
	0xa554de: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa554e6: mov edx, dword ptr [edx]
	0xa5550a: add edx, 0
	0xa55522: movzx ebx, byte ptr [edx]
	0xa55533: mov edx, ebp
	0xa5553f: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5554b: add ebx, dword ptr [edx]
	0xa55551: mov edx, ebp
	0xa55559: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa55563: add ebx, dword ptr [edx]
	0xa5556b: mov edx, ebp
	0xa55573: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5557d: or dword ptr [edx], ebx
	0xa55593: mov edx, ebp
	0xa5559d: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa555a5: sub dword ptr [edx], 0x2ce8a044
	0xa555bf: mov edi, ebp
	0xa555c1: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa555d3: mov byte ptr [edi], bl
	0xa555d5: mov esi, ebp
	0xa555d9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa555e5: mov eax, dword ptr [esi]
	0xa555e7: mov esi, ebp
	0xa555e9: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa555ef: xor dword ptr [esi], eax
	0xa5560a: mov eax, ebp
	0xa5560c: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5561a: mov eax, dword ptr [eax]
	0xa55628: mov edx, ebp
	0xa5562c: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa55632: mov edx, dword ptr [edx]
	0xa5563f: add edx, 1
	0xa55647: movzx edx, word ptr [edx]
	0xa5564a: mov ecx, ebp
	0xa5564c: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5565a: add edx, dword ptr [ecx]
	0xa55664: add edx, 0x104092c5
	0xa55670: mov esi, ebp
	0xa5567a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa55685: and dword ptr [esi], edx
	0xa55699: and edx, 0xffff
	0xa5569f: add eax, edx
	0xa556b0: mov esi, dword ptr [eax]
	0xa556b2: mov edx, ebp
	0xa556c9: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61853
	0xa556cf: add dword ptr [edx], 3
	0xa556d5: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5cd00: mov esi, ebp
	0xa5cd02: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd08: mov ecx, dword ptr [esi]
	0xa5cd0c: and ecx, 2
	0xa5cd12: cmp ecx, 0
	0xa5cd18: je 0xa5cd3a
	0xa5cd4d: mov edx, ebp
	0xa5cd4f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd55: mov esi, dword ptr [edx]
	0xa5cd57: mov edi, ebp
	0xa5cd59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd5f: sub dword ptr [edi], esi
	0xa5cd61: mov eax, ebp
	0xa5cd63: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd68: sub dword ptr [eax], 0x517af35
	0xa5cd6e: mov eax, ebp
	0xa5cd70: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd7f: sub dword ptr [eax], 0x32035459
	0xa5cd9f: mov edx, ebp
	0xa5cda1: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cda7: sub dword ptr [edx], 0x78199ead
	0xa5cdad: mov eax, ebp
	0xa5cdaf: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cdb4: or dword ptr [eax], 0x217c89c9
	0xa5cdba: mov ecx, ebp
	0xa5cdbc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cdc2: mov eax, dword ptr [ecx]
	0xa5cdc4: add eax, 0x531dddb0
	0xa5cdc9: mov edi, ebp
	0xa5cdcb: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cdd1: and dword ptr [edi], eax
	0xa5cdd3: mov edi, ebp
	0xa5cdd5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cddb: or dword ptr [edi], 0x49e1cbd1
	0xa5ce08: mov edi, ebp
	0xa5ce0a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5ce18: mov edi, dword ptr [edi]
	0xa5ce2b: add edi, 2
	0xa5ce3a: movzx ebx, word ptr [edi]
	0xa5ce57: mov edi, ebp
	0xa5ce63: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ce72: xor ebx, dword ptr [edi]
	0xa5ce82: mov edi, ebp
	0xa5ce86: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ce99: or dword ptr [edi], ebx
	0xa5cea3: mov edi, ebp
	0xa5ceaa: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cebb: sub dword ptr [edi], 0x503852d7
	0xa5cec5: and ebx, 0xffff
	0xa5ced3: add ebx, ebp
	0xa5ced5: xor ebx, 0x2b28b3ec
	0xa5ceeb: mov esi, ebp
	0xa5ceed: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa5cef3: mov dword ptr [esi], ebx
	0xa5cef5: mov ebx, ebp
	0xa5cef7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf04: mov edi, dword ptr [ebx]
	0xa5cf0c: and edi, 2
	0xa5cf12: cmp edi, 0
	0xa5cf18: je 0xa5cf3a
	0xa5cf1e: mov ebx, ebp
	0xa5cf20: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf26: sub dword ptr [ebx], 0x509d27db
	0xa5cf2c: mov ebx, ebp
	0xa5cf2e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf34: xor dword ptr [ebx], 0x6546bfdc
	0xa5cf3c: mov edi, ebp
	0xa5cf3e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf44: mov eax, dword ptr [edi]
	0xa5cf48: add eax, 0x7887eedb
	0xa5cf53: mov edi, ebp
	0xa5cf55: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf5b: xor dword ptr [edi], eax
	0xa5cf67: mov ecx, ebp
	0xa5cf69: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf71: mov edx, dword ptr [ecx]
	0xa5cf73: or edx, 0x5b106951
	0xa5cf7f: mov ecx, ebp
	0xa5cf83: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf89: or dword ptr [ecx], edx
	0xa5cf93: mov edi, ebp
	0xa5cf95: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf9b: mov ecx, dword ptr [edi]
	0xa5cf9d: mov esi, ebp
	0xa5cf9f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfa5: or dword ptr [esi], ecx
	0xa5cfa7: mov eax, ebp
	0xa5cfa9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfae: or dword ptr [eax], 0x52b12e12
	0xa5cfbe: mov esi, ebp
	0xa5cfc0: mov ebx, ebp
	0xa5cfcc: add esi, 0x95
	0xa5cfe8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5cff5: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa5d007: mov esi, dword ptr [esi]
	0xa5d00d: add esi, 0
	0xa5d020: movzx esi, word ptr [esi]
	0xa5d038: xor esi, 0x609915b4
	0xa5d03e: mov edi, ebp
	0xa5d04b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d056: xor dword ptr [edi], esi
	0xa5d05d: and esi, 0xffff
	0xa5d069: add ebx, esi
	0xa5d074: mov esi, dword ptr [ebx]
	0xa5d080: mov edi, ebp
	0xa5d08d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61857
	0xa5d093: add dword ptr [edi], 4
	0xa5d099: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa71313: mov eax, ebp
	0xa71315: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7131a: mov edx, dword ptr [eax]
	0xa7131c: and edx, 2
	0xa71322: cmp edx, 0
	0xa71328: je 0xa71348
	0xa7132e: mov eax, ebp
	0xa71330: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71335: or dword ptr [eax], 0x5ced6525
	0xa7133b: mov eax, ebp
	0xa7133d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71342: add dword ptr [eax], 0x1b7202ca
	0xa71371: mov ebx, ebp
	0xa71373: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71379: mov esi, dword ptr [ebx]
	0xa7137b: mov ecx, ebp
	0xa7137f: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71385: and dword ptr [ecx], esi
	0xa713a2: mov edx, ebp
	0xa713a4: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa713aa: mov eax, dword ptr [edx]
	0xa713b6: mov edi, ebp
	0xa713b8: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa713be: add dword ptr [edi], eax
	0xa713c0: mov eax, ebp
	0xa713c2: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa713c7: add dword ptr [eax], 0x405e0745
	0xa713ea: mov eax, ebp
	0xa713f4: add eax, 0x49
	0xa7140b: mov ebx, ebp
Load [EBP+0x49](STATIC)
	0xa7140d: mov edx, dword ptr [eax]
	0xa7141b: xor edx, 0x1348fdb8
	0xa7142a: add ebx, 0x79
Load [EBP+0x79](STATIC)
	0xa71437: mov ecx, dword ptr [ebx]
	0xa7144c: xor ecx, 0x9af695a
	0xa71458: xor ecx, 0x4000be36
	0xa71467: xor edx, 0x4000be36
	0xa71471: mov ebx, ebp
	0xa7147d: mov eax, ebp
	0xa7148e: add ebx, 0x49
	0xa71494: add eax, 0x79
Store [EBP+0x79](STATIC)
	0xa7149f: mov dword ptr [eax], ecx
Store [EBP+0x49](STATIC)
	0xa714aa: mov dword ptr [ebx], edx
	0xa714ac: mov esi, ebp
	0xa714ae: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa714b4: mov ebx, dword ptr [esi]
	0xa714b6: xor ebx, 0x4000be36
	0xa714bc: mov esi, ebp
	0xa714be: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa714c4: mov ecx, dword ptr [esi]
	0xa714c6: xor ecx, 0x4000be36
	0xa714cc: mov eax, ebp
	0xa714ce: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa714d3: mov dl, byte ptr [eax]
	0xa714d5: cmp dl, 0x1f
	0xa714d8: jne 0xa714e1
	0xa714e1: cmp dl, 0x52
	0xa714e4: jne 0xa714ee
	0xa714ee: cmp dl, 0x81
	0xa714f1: jne 0xa714fa
	0xa714f7: add ebx, ecx
	0xa714f9: pushfd
	0xa714fa: mov edx, ebp
	0xa714fc: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa71502: mov dword ptr [edx], ebx
	0xa71506: mov ebx, ebp
	0xa7151a: mov ecx, ebp
	0xa7151c: add ecx, 0x2d
	0xa71528: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7153a: mov edx, dword ptr [ebx]
Load [EBP+0x2d](STATIC)
	0xa71548: mov eax, dword ptr [ecx]
	0xa71558: and edx, 2
	0xa71564: sub eax, 0x2b28b3ec
	0xa71569: cmp edx, 0
	0xa7156f: je 0xa715cf
	0xa715d8: mov ebx, ebp
	0xa715da: add ebx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa715e4: mov dword ptr [ebx], eax
	0xa715f0: pop edx
	0xa715f1: mov ecx, ebp
	0xa715fb: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa71607: mov ecx, dword ptr [ecx]
	0xa71610: add ecx, 0
	0xa7162c: movzx ecx, byte ptr [ecx]
	0xa7162f: cmp ecx, 0
	0xa71635: je 0xa7167f
	0xa71681: mov ecx, ebp
	0xa7168a: mov edx, ebp
	0xa71695: add ecx, 0x95
	0xa7169d: add edx, 0xb8
Load [EBP+0x95](STATIC)
	0xa716a7: mov ecx, dword ptr [ecx]
	0xa716bd: add ecx, 1
Load [EBP+0xb8](STATIC)
	0xa716c5: mov edx, dword ptr [edx]
	0xa716d1: movzx ecx, word ptr [ecx]
	0xa716d4: mov ebx, ebp
	0xa716dc: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa716ea: sub ecx, dword ptr [ebx]
	0xa716fd: mov ebx, ebp
	0xa71705: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71712: and dword ptr [ebx], ecx
	0xa71723: and ecx, 0xffff
	0xa71729: add edx, ecx
	0xa71739: mov ecx, dword ptr [edx]
	0xa71742: mov eax, ebp
	0xa71757: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6185c
	0xa7175c: add dword ptr [eax], 5
	0xa71762: jmp ecx
handlers outputs:



	0xa62baf: mov edx, ebp
	0xa62bc1: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa62bdb: mov ebx, dword ptr [edx]
	0xa62bdd: add ebx, 0x2b28b3ec
	0xa62be3: mov edx, ebp
	0xa62be7: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa62bf7: mov ecx, dword ptr [edx]
	0xa62bfd: xor ecx, 0x2b28b3ec
	0xa62c03: mov edx, ebp
	0xa62c11: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62c17: mov al, byte ptr [edx]
	0xa62c19: cmp al, 0x1f
	0xa62c1b: jne 0xa62c27
	0xa62c27: cmp al, 0x52
	0xa62c29: jne 0xa62c42
	0xa62c42: cmp al, 0x81
	0xa62c44: jne 0xa62c8a
	0xa62c57: mov dword ptr [ecx], ebx
	0xa62c8a: cmp al, 2
	0xa62c8c: jne 0xa62caa
	0xa62cb0: mov ecx, ebp
	0xa62cb9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62cbf: mov esi, dword ptr [ecx]
	0xa62cc1: and esi, 2
	0xa62ccb: cmp esi, 0
	0xa62cd1: je 0xa62cf3
	0xa62d24: mov esi, ebp
	0xa62d26: mov eax, ebp
	0xa62d28: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62d2d: mov ecx, dword ptr [eax]
	0xa62d2f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d35: and dword ptr [esi], 0x6f24ddf
	0xa62d3b: and ecx, 2
	0xa62d41: cmp ecx, 0
	0xa62d47: je 0xa62d67
	0xa62d67: mov esi, ebp
	0xa62d69: add esi, 0xa
	0xa62d6f: mov eax, ebp
	0xa62d71: add eax, 0xe5
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d76: and dword ptr [esi], 0x2486315
Load [EBP+0xe5](STATIC)
	0xa62d7c: mov ebx, dword ptr [eax]
	0xa62d7e: and ebx, 2
	0xa62d84: cmp ebx, 0
	0xa62d8a: je 0xa62daa
	0xa62daa: mov edx, ebp
	0xa62dac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62db9: mov edi, dword ptr [edx]
	0xa62dbd: and edi, 2
	0xa62dc3: cmp edi, 0
	0xa62dc9: je 0xa62deb
	0xa62e09: mov ebx, ebp
	0xa62e17: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa62e27: mov ebx, dword ptr [ebx]
	0xa62e35: add ebx, 0
	0xa62e48: mov eax, ebp
	0xa62e52: movzx ebx, word ptr [ebx]
	0xa62e5b: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa62e6a: mov eax, dword ptr [eax]
	0xa62e90: mov esi, ebp
	0xa62e9a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62ea4: or dword ptr [esi], ebx
	0xa62ea8: and ebx, 0xffff
	0xa62eb8: add eax, ebx
	0xa62ec9: mov esi, dword ptr [eax]
	0xa62ed1: mov edi, ebp
	0xa62ed8: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6185e
	0xa62ede: add dword ptr [edi], 2
	0xa62ee4: jmp esi
handlers outputs:



	0xa5cd00: mov esi, ebp
	0xa5cd02: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd08: mov ecx, dword ptr [esi]
	0xa5cd0c: and ecx, 2
	0xa5cd12: cmp ecx, 0
	0xa5cd18: je 0xa5cd3a
	0xa5cd4d: mov edx, ebp
	0xa5cd4f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd55: mov esi, dword ptr [edx]
	0xa5cd57: mov edi, ebp
	0xa5cd59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd5f: sub dword ptr [edi], esi
	0xa5cd61: mov eax, ebp
	0xa5cd63: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd68: sub dword ptr [eax], 0x517af35
	0xa5cd6e: mov eax, ebp
	0xa5cd70: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd7f: sub dword ptr [eax], 0x32035459
	0xa5cd9f: mov edx, ebp
	0xa5cda1: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cda7: sub dword ptr [edx], 0x78199ead
	0xa5cdad: mov eax, ebp
	0xa5cdaf: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cdb4: or dword ptr [eax], 0x217c89c9
	0xa5cdba: mov ecx, ebp
	0xa5cdbc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cdc2: mov eax, dword ptr [ecx]
	0xa5cdc4: add eax, 0x531dddb0
	0xa5cdc9: mov edi, ebp
	0xa5cdcb: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cdd1: and dword ptr [edi], eax
	0xa5cdd3: mov edi, ebp
	0xa5cdd5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cddb: or dword ptr [edi], 0x49e1cbd1
	0xa5ce08: mov edi, ebp
	0xa5ce0a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5ce18: mov edi, dword ptr [edi]
	0xa5ce2b: add edi, 2
	0xa5ce3a: movzx ebx, word ptr [edi]
	0xa5ce57: mov edi, ebp
	0xa5ce63: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ce72: xor ebx, dword ptr [edi]
	0xa5ce82: mov edi, ebp
	0xa5ce86: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ce99: or dword ptr [edi], ebx
	0xa5cea3: mov edi, ebp
	0xa5ceaa: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cebb: sub dword ptr [edi], 0x503852d7
	0xa5cec5: and ebx, 0xffff
	0xa5ced3: add ebx, ebp
	0xa5ced5: xor ebx, 0x2b28b3ec
	0xa5ceeb: mov esi, ebp
	0xa5ceed: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa5cef3: mov dword ptr [esi], ebx
	0xa5cef5: mov ebx, ebp
	0xa5cef7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf04: mov edi, dword ptr [ebx]
	0xa5cf0c: and edi, 2
	0xa5cf12: cmp edi, 0
	0xa5cf18: je 0xa5cf3a
	0xa5cf1e: mov ebx, ebp
	0xa5cf20: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf26: sub dword ptr [ebx], 0x509d27db
	0xa5cf2c: mov ebx, ebp
	0xa5cf2e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf34: xor dword ptr [ebx], 0x6546bfdc
	0xa5cf3c: mov edi, ebp
	0xa5cf3e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf44: mov eax, dword ptr [edi]
	0xa5cf48: add eax, 0x7887eedb
	0xa5cf53: mov edi, ebp
	0xa5cf55: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf5b: xor dword ptr [edi], eax
	0xa5cf67: mov ecx, ebp
	0xa5cf69: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf71: mov edx, dword ptr [ecx]
	0xa5cf73: or edx, 0x5b106951
	0xa5cf7f: mov ecx, ebp
	0xa5cf83: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf89: or dword ptr [ecx], edx
	0xa5cf93: mov edi, ebp
	0xa5cf95: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf9b: mov ecx, dword ptr [edi]
	0xa5cf9d: mov esi, ebp
	0xa5cf9f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfa5: or dword ptr [esi], ecx
	0xa5cfa7: mov eax, ebp
	0xa5cfa9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfae: or dword ptr [eax], 0x52b12e12
	0xa5cfbe: mov esi, ebp
	0xa5cfc0: mov ebx, ebp
	0xa5cfcc: add esi, 0x95
	0xa5cfe8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5cff5: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa5d007: mov esi, dword ptr [esi]
	0xa5d00d: add esi, 0
	0xa5d020: movzx esi, word ptr [esi]
	0xa5d038: xor esi, 0x609915b4
	0xa5d03e: mov edi, ebp
	0xa5d04b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d056: xor dword ptr [edi], esi
	0xa5d05d: and esi, 0xffff
	0xa5d069: add ebx, esi
	0xa5d074: mov esi, dword ptr [ebx]
	0xa5d080: mov edi, ebp
	0xa5d08d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61862
	0xa5d093: add dword ptr [edi], 4
	0xa5d099: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7bd99: mov edi, ebp
	0xa7bda7: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bdb7: mov edi, dword ptr [edi]
	0xa7bdbb: add edi, 0
	0xa7bdc5: movzx eax, word ptr [edi]
	0xa7bde7: mov edx, ebp
	0xa7bded: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bdf9: add eax, dword ptr [edx]
	0xa7bdff: mov esi, ebp
	0xa7be11: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7be1d: xor dword ptr [esi], eax
	0xa7be29: mov esi, ebp
	0xa7be31: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7be46: or dword ptr [esi], 0x726912ca
	0xa7be4c: and eax, 0xffff
	0xa7be57: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa7be73: mov eax, dword ptr [eax]
	0xa7be83: mov esi, ebp
	0xa7be8d: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7be95: mov esi, dword ptr [esi]
	0xa7be97: add esi, 2
	0xa7bea1: mov bl, byte ptr [esi]
	0xa7bea3: cmp bl, 0x1f
	0xa7bea6: jne 0xa7beb6
	0xa7beb6: cmp bl, 0x52
	0xa7beb9: jne 0xa7bedb
	0xa7bedb: cmp bl, 0x81
	0xa7bede: jne 0xa7beea
Deref(t28,ds)
	0xa7bee6: mov eax, dword ptr [eax]
	0xa7befc: mov edx, 1
	0xa7bf05: xor eax, 0x9af695a
	0xa7bf18: mov esi, ebp
	0xa7bf20: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa7bf26: mov dword ptr [esi], eax
	0xa7bf32: cmp dl, 0
	0xa7bf35: je 0xa7bf45
	0xa7bf47: mov ebx, ebp
	0xa7bf49: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bf4f: mov eax, dword ptr [ebx]
	0xa7bf51: and eax, 2
	0xa7bf56: cmp eax, 0
	0xa7bf5b: je 0xa7bf7d
	0xa7bf61: mov ebx, ebp
	0xa7bf63: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7bf69: or dword ptr [ebx], 0x348fa12c
	0xa7bf6f: mov ebx, ebp
	0xa7bf71: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7bf77: and dword ptr [ebx], 0xe57002a
	0xa7bf9b: cmp bl, 0
	0xa7bf9e: je 0xa7bfaf
	0xa7bfbb: cmp al, 0
	0xa7bfbd: je 0xa7bfce
	0xa7bfd7: mov ebx, ebp
	0xa7bfe3: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bfe9: mov esi, dword ptr [ebx]
	0xa7bfeb: mov ecx, ebp
	0xa7bfed: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bff3: add dword ptr [ecx], esi
	0xa7bff5: mov esi, ebp
	0xa7bff7: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bffd: or dword ptr [esi], 0x7612505b
	0xa7c003: mov esi, ebp
	0xa7c005: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c00b: or dword ptr [esi], 0x30a63ad2
	0xa7c011: mov ecx, ebp
	0xa7c013: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c019: mov esi, dword ptr [ecx]
	0xa7c01b: mov eax, ebp
	0xa7c01d: add eax, 0xef
	0xa7c022: mov edx, ebp
	0xa7c024: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c02a: or dword ptr [edx], esi
	0xa7c02e: cmp al, 0
	0xa7c030: je 0xa7c041
	0xa7c043: mov esi, ebp
	0xa7c045: mov edi, ebp
	0xa7c055: add edi, 0xb8
	0xa7c065: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7c06d: mov esi, dword ptr [esi]
Load [EBP+0xb8](STATIC)
	0xa7c077: mov edi, dword ptr [edi]
	0xa7c083: add esi, 3
	0xa7c08b: movzx esi, word ptr [esi]
	0xa7c08e: mov ebx, ebp
	0xa7c097: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7c09f: sub esi, dword ptr [ebx]
	0xa7c0ad: add esi, 0x37034953
	0xa7c0c6: mov ebx, ebp
	0xa7c0d4: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c0ee: xor dword ptr [ebx], esi
	0xa7c0fe: and esi, 0xffff
	0xa7c115: add edi, esi
	0xa7c121: mov esi, dword ptr [edi]
	0xa7c12e: mov ecx, ebp
	0xa7c140: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61867
	0xa7c146: add dword ptr [ecx], 5
	0xa7c14c: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73211: mov ecx, ebp
	0xa73213: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73219: add dword ptr [ecx], 0xd852b6c
	0xa7321f: mov ecx, ebp
	0xa73221: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73227: and dword ptr [ecx], 0x4193680
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0xf8](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6186b
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa50986: mov eax, ebp
	0xa50988: add eax, 0xef
	0xa50991: cmp al, 0
	0xa50993: je 0xa509a4
	0xa509c6: mov edi, ebp
	0xa509c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa509ce: mov ebx, dword ptr [edi]
	0xa509d0: and ebx, 2
	0xa509d6: cmp ebx, 0
	0xa509dc: je 0xa509fe
	0xa509fe: mov esi, ebp
	0xa50a0e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50a25: mov esi, dword ptr [esi]
	0xa50a27: add esi, 0
	0xa50a33: movzx ebx, byte ptr [esi]
	0xa50a45: mov edx, ebp
	0xa50a53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa50a59: add ebx, dword ptr [edx]
	0xa50a5d: mov edx, ebp
	0xa50a67: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50a6f: add ebx, dword ptr [edx]
	0xa50a80: mov edx, ebp
	0xa50a84: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50a94: and dword ptr [edx], ebx
	0xa50a96: mov edx, ebp
	0xa50a9c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50aa6: xor dword ptr [edx], 0x39e2bf6
	0xa50ac1: mov ecx, ebp
	0xa50acd: add ecx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa50ae2: mov byte ptr [ecx], bl
	0xa50ae4: mov edx, ebp
	0xa50ae6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50af4: mov eax, dword ptr [edx]
	0xa50afc: sub eax, 0x1e3a4334
	0xa50b03: mov ebx, ebp
	0xa50b05: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50b0b: xor dword ptr [ebx], eax
	0xa50b1f: mov esi, ebp
	0xa50b2e: mov eax, ebp
	0xa50b3d: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50b4a: mov esi, dword ptr [esi]
	0xa50b5d: add esi, 1
	0xa50b6e: movzx esi, word ptr [esi]
	0xa50b79: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa50b8b: mov eax, dword ptr [eax]
	0xa50b95: mov edi, ebp
	0xa50b97: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa50bb2: xor esi, dword ptr [edi]
	0xa50bea: and esi, 0xffff
	0xa50bf0: add eax, esi
	0xa50bf2: mov esi, dword ptr [eax]
	0xa50bf4: mov edx, ebp
	0xa50c09: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6186e
	0xa50c0f: add dword ptr [edx], 3
	0xa50c15: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5ed87: mov edi, ebp
	0xa5ed9a: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa5edae: mov ebx, dword ptr [edi]
	0xa5edbc: xor ebx, 0x9af695a
	0xa5edca: mov edi, ebp
	0xa5ede8: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5edf0: mov dword ptr [edi], ebx
	0xa5ee31: mov esi, ebp
	0xa5ee33: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ee39: mov ebx, dword ptr [esi]
	0xa5ee3b: mov eax, ebp
	0xa5ee3d: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee42: and dword ptr [eax], ebx
	0xa5ee44: mov eax, ebp
	0xa5ee46: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee4b: add dword ptr [eax], 0x5d88a98c
	0xa5ee51: mov edx, ebp
	0xa5ee53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5ee59: mov esi, dword ptr [edx]
	0xa5ee5b: and esi, 0x2de1e57b
	0xa5ee61: mov eax, ebp
	0xa5ee63: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee68: and dword ptr [eax], esi
	0xa5ee6a: mov esi, ebp
	0xa5ee6c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee72: sub dword ptr [esi], 0x559e01c0
	0xa5ee78: mov edi, ebp
	0xa5ee7a: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee88: xor dword ptr [edi], 0x78b0f429
	0xa5eea2: mov ecx, ebp
	0xa5eea4: mov edx, ebp
	0xa5eea6: add ecx, 0xe5
	0xa5eeac: add edx, 0x9e
Load [EBP+0xe5](STATIC)
	0xa5eeb2: mov ebx, dword ptr [ecx]
	0xa5eeb4: and ebx, 2
	0xa5eeba: cmp ebx, 0
	0xa5eec0: je 0xa5eee2
	0xa5eec6: mov ecx, ebp
	0xa5eec8: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5eece: add dword ptr [ecx], 0x1cbf910f
	0xa5eed4: mov ecx, ebp
	0xa5eed6: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5eedc: sub dword ptr [ecx], 0x375edd4f
Load [EBP+0x9e](STATIC)
	0xa5eee2: mov bl, byte ptr [edx]
	0xa5eef6: cmp bl, 0
	0xa5eef9: je 0xa5ef09
	0xa5ef0b: mov edi, ebp
	0xa5ef0d: mov esi, 0x200
	0xa5ef12: or esi, 0x80
	0xa5ef18: xor esi, 0x28
	0xa5ef1e: add edi, 0x49
Load [EBP+0x49](STATIC)
	0xa5ef24: mov ebx, dword ptr [edi]
	0xa5ef2b: xor ebx, 0x1348fdb8
	0xa5ef4a: mov ecx, ebp
	0xa5ef4c: add ecx, 0x49
	0xa5ef52: add esi, 0x7fffffff
Store [EBP+0x49](STATIC)
	0xa5ef5c: mov dword ptr [ecx], ebx
	0xa5ef60: mov ecx, ebp
	0xa5ef62: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa5ef75: mov edx, dword ptr [ecx]
	0xa5ef7f: mov ecx, ebp
	0xa5ef89: add ecx, 0x2d
	0xa5ef96: mov edi, 0x200
Store [EBP+0x2d](STATIC)
	0xa5ef9b: mov dword ptr [ecx], edx
	0xa5ef9d: add esi, edi
	0xa5ef9f: pushfd
	0xa5efa7: mov eax, ebp
	0xa5efab: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa5efbc: mov ecx, dword ptr [eax]
	0xa5efc6: sub ecx, 0x2b28b3ec
	0xa5efcc: mov edi, ebp
	0xa5efd6: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5efe1: mov dword ptr [edi], ecx
	0xa5efe3: pop ebx
	0xa5efe4: mov eax, ebp
	0xa5efe6: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5efeb: mov eax, dword ptr [eax]
	0xa5efed: add eax, 2
	0xa5eff2: movzx eax, byte ptr [eax]
	0xa5eff5: cmp eax, 0
	0xa5effa: je 0xa5f01c
	0xa5f02a: mov edi, ebp
	0xa5f037: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5f03d: mov edi, dword ptr [edi]
	0xa5f050: mov edx, ebp
	0xa5f052: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa5f05c: mov edx, dword ptr [edx]
	0xa5f064: add edx, 3
	0xa5f06a: movzx edx, word ptr [edx]
	0xa5f083: mov eax, ebp
	0xa5f08a: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5f099: xor edx, dword ptr [eax]
	0xa5f0a3: sub edx, 0x4cc8b7f5
	0xa5f0af: mov eax, ebp
	0xa5f0b7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f0c4: xor dword ptr [eax], edx
	0xa5f0ce: and edx, 0xffff
	0xa5f0dc: add edi, edx
	0xa5f0e6: mov edx, dword ptr [edi]
	0xa5f0f2: mov esi, ebp
	0xa5f0f4: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61873
	0xa5f0fa: add dword ptr [esi], 5
	0xa5f100: jmp edx
handlers outputs:



	0xa4ff6f: mov edi, ebp
	0xa4ff7b: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ff81: mov al, byte ptr [edi]
	0xa4ff83: cmp al, 0
	0xa4ff85: je 0xa4ff96
	0xa4ffa8: mov edx, ebp
	0xa4ffb8: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa4ffc2: mov ebx, dword ptr [edx]
	0xa4ffd2: add ebx, 0x2b28b3ec
	0xa4ffe0: mov esi, ebp
	0xa4ffe2: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4fff5: mov ecx, dword ptr [esi]
	0xa5000b: xor ecx, 0x2b28b3ec
	0xa5001c: mov esi, ebp
	0xa50020: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5002c: mov al, byte ptr [esi]
	0xa5002e: cmp al, 0x1f
	0xa50030: jne 0xa50041
	0xa50041: cmp al, 0x52
	0xa50043: jne 0xa50058
	0xa50058: cmp al, 0x81
	0xa5005a: jne 0xa50089
	0xa50068: mov dword ptr [ecx], ebx
	0xa50089: cmp al, 2
	0xa5008b: jne 0xa5009b
	0xa500c9: mov eax, ebp
	0xa500cb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa500d0: mov esi, dword ptr [eax]
	0xa500d4: and esi, 2
	0xa500da: cmp esi, 0
	0xa500e0: je 0xa500fa
	0xa500e6: mov eax, ebp
	0xa500e8: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa500ed: sub dword ptr [eax], 0x28c59c26
	0xa500fa: mov esi, ebp
	0xa500fc: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5010c: mov edi, dword ptr [esi]
	0xa5010e: and edi, 2
	0xa50120: cmp edi, 0
	0xa50126: je 0xa50148
	0xa50159: mov esi, ebp
	0xa5015b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50161: mov eax, dword ptr [esi]
	0xa50163: mov ecx, ebp
	0xa5016d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50175: xor dword ptr [ecx], eax
	0xa50191: mov esi, ebp
	0xa50193: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50199: mov ecx, dword ptr [esi]
	0xa5019b: and ecx, 2
	0xa501a1: cmp ecx, 0
	0xa501a7: je 0xa501c9
	0xa501c9: mov ecx, ebp
	0xa501cb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa501d1: mov edx, dword ptr [ecx]
	0xa501d3: and edx, 2
	0xa501d9: cmp edx, 0
	0xa501df: je 0xa50201
	0xa50215: cmp al, 0
	0xa50217: je 0xa50228
	0xa5022a: mov edi, ebp
	0xa5022e: mov eax, ebp
	0xa50236: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5023b: mov eax, dword ptr [eax]
	0xa50246: add eax, 0
	0xa5024d: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5025d: mov edi, dword ptr [edi]
	0xa5026b: movzx eax, word ptr [eax]
	0xa5026e: mov ebx, ebp
	0xa5027d: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5028e: add eax, dword ptr [ebx]
	0xa50292: mov ebx, ebp
	0xa50294: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa502aa: or dword ptr [ebx], eax
	0xa502ac: and eax, 0xffff
	0xa502b9: add edi, eax
	0xa502c4: mov eax, dword ptr [edi]
	0xa502cc: mov esi, ebp
	0xa502d0: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61875
	0xa502d6: add dword ptr [esi], 2
	0xa502dc: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa76f21: cmp al, 0
	0xa76f23: je 0xa76f34
	0xa76f46: mov edx, ebp
	0xa76f48: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f4e: xor dword ptr [edx], 0x1f6e1d7b
	0xa76f69: mov ecx, ebp
	0xa76f6b: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f71: mov edi, dword ptr [ecx]
	0xa76f73: mov esi, ebp
	0xa76f75: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f7b: xor dword ptr [esi], edi
	0xa76f7d: mov edi, ebp
	0xa76f7f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f95: mov eax, dword ptr [edi]
	0xa76f97: mov edi, ebp
	0xa76f99: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f9f: add dword ptr [edi], eax
	0xa76fa1: mov ecx, ebp
	0xa76fa5: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76fab: mov edi, dword ptr [ecx]
	0xa76fb5: and edi, 2
	0xa76fbb: cmp edi, 0
	0xa76fc1: je 0xa76fdd
	0xa76fe9: mov edi, ebp
	0xa76feb: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76ff1: mov ebx, dword ptr [edi]
	0xa76ff3: mov eax, ebp
	0xa76ff5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76ffa: or dword ptr [eax], ebx
	0xa77010: mov esi, ebp
	0xa77012: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77018: xor dword ptr [esi], 0x9ff3707
	0xa7703d: mov esi, ebp
	0xa77050: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa77058: mov esi, dword ptr [esi]
	0xa7705a: add esi, 2
	0xa7706b: movzx ecx, word ptr [esi]
	0xa7707c: mov esi, ebp
	0xa7707e: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7708a: xor ecx, dword ptr [esi]
	0xa7708e: mov esi, ebp
	0xa7709a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa770a8: xor ecx, dword ptr [esi]
	0xa770aa: mov esi, ebp
	0xa770ac: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa770b2: sub dword ptr [esi], ecx
	0xa770bb: mov edi, ebp
	0xa770c5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa770da: and dword ptr [edi], 0x74d684ee
	0xa770ef: and ecx, 0xffff
	0xa770fd: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa770ff: mov ecx, dword ptr [ecx]
	0xa77107: xor ecx, 0x9af695a
	0xa77115: mov esi, ebp
	0xa77121: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa77132: mov dword ptr [esi], ecx
	0xa77134: mov edx, ebp
	0xa77136: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7713c: mov ecx, dword ptr [edx]
	0xa7713e: and ecx, 2
	0xa77144: cmp ecx, 0
	0xa7714a: je 0xa7716c
	0xa77178: mov eax, ebp
	0xa77182: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7718d: mov eax, dword ptr [eax]
	0xa77198: mov edx, ebp
	0xa771aa: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa771b8: mov edx, dword ptr [edx]
	0xa771be: add edx, 0
	0xa771ca: movzx edx, word ptr [edx]
	0xa771ea: add edx, 0x143f1315
	0xa771f0: mov ebx, ebp
	0xa771f2: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77200: add dword ptr [ebx], edx
	0xa77202: and edx, 0xffff
	0xa7720c: add eax, edx
	0xa7720e: mov edx, dword ptr [eax]
	0xa7721e: mov ecx, ebp
	0xa77228: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61879
	0xa7722e: add dword ptr [ecx], 4
	0xa77234: jmp edx
handlers outputs:



	0xa54922: mov edx, ebp
	0xa54924: mov ebx, ebp
	0xa54926: add edx, 0xef
	0xa5492e: add ebx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa54934: mov dl, byte ptr [ebx]
	0xa54938: mov edi, ebp
	0xa5493c: and edx, 0xffff
	0xa54942: add edi, 0x95
	0xa54948: mov eax, 0x200
	0xa5494d: add edx, esi
Load [EBP+0x95](STATIC)
	0xa5494f: mov edi, dword ptr [edi]
	0xa54957: and edx, eax
	0xa54959: add edi, 2
	0xa54961: and edx, 0x7fffffff
	0xa54969: movzx esi, word ptr [edi]
	0xa5496c: add esi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa54970: mov esp, dword ptr [esi]
	0xa5497c: cmp dl, 0
	0xa5497f: je 0xa5498f
	0xa5499b: mov eax, ebp
	0xa549a1: add eax, 0x95
	0xa549ac: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa549b0: mov eax, dword ptr [eax]
	0xa549b2: add edx, 0xb8
	0xa549ba: add eax, 0
	0xa549bf: movzx eax, word ptr [eax]
Load [EBP+0xb8](STATIC)
	0xa549c2: mov edx, dword ptr [edx]
	0xa549c8: mov ecx, ebp
	0xa549cc: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa549db: add eax, dword ptr [ecx]
	0xa549dd: sub eax, 0x72903550
	0xa549e6: mov ecx, ebp
	0xa549f2: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54a04: and dword ptr [ecx], eax
	0xa54a0c: and eax, 0xffff
	0xa54a13: add edx, eax
	0xa54a17: mov eax, dword ptr [edx]
	0xa54a21: mov ecx, ebp
	0xa54a25: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6187d
	0xa54a2b: add dword ptr [ecx], 4
	0xa54a31: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa72e93: add edx, 0x69776ea7
	0xa72e99: mov edi, ebp
	0xa72ea0: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa72ea6: xor edx, dword ptr [edi]
	0xa72ea8: sub edx, ebx
	0xa72ec7: mov ecx, ebp
	0xa72ec9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa72ecf: mov ebx, dword ptr [ecx]
	0xa72ed1: cmp dl, 0
	0xa72ed4: je 0xa72ee5
	0xa72ee7: and ebx, 2
	0xa72eed: cmp ebx, 0
	0xa72ef3: je 0xa72f15
	0xa72f15: mov edx, ebp
	0xa72f21: add edx, 0xa
	0xa72f27: cmp cl, 0
	0xa72f2a: je 0xa72f3b
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa72f3d: sub dword ptr [edx], 0x3126a2b6
	0xa72f47: mov edx, ebp
	0xa72f56: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa72f62: mov edx, dword ptr [edx]
	0xa72f64: add edx, 0
	0xa72f6a: movzx esi, word ptr [edx]
	0xa72f83: mov edx, ebp
	0xa72f85: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa72f8f: sub esi, dword ptr [edx]
	0xa72f93: mov edx, ebp
	0xa72f99: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa72f9f: xor dword ptr [edx], esi
	0xa72fad: and esi, 0xffff
	0xa72fbd: add esi, ebp
	0xa72fc8: xor esi, 0x2b28b3ec
	0xa72fd6: mov ecx, ebp
	0xa72fe6: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa72ff0: mov dword ptr [ecx], esi
	0xa72ff2: mov edi, ebp
	0xa72ffc: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73004: sub dword ptr [edi], 0x5c28206f
	0xa73012: mov eax, ebp
	0xa73016: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7301b: mov edx, dword ptr [eax]
	0xa7301d: or edx, 0x1c9649d8
	0xa73023: mov edi, ebp
	0xa73025: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7302b: sub dword ptr [edi], edx
	0xa73086: mov ecx, ebp
	0xa73090: add ecx, 0xb8
	0xa7309c: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa730a0: mov ecx, dword ptr [ecx]
	0xa730b0: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa730bb: mov eax, dword ptr [eax]
	0xa730cc: add eax, 2
	0xa730d1: movzx eax, word ptr [eax]
	0xa730e1: mov ebx, ebp
	0xa730ed: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa730f3: add eax, dword ptr [ebx]
	0xa73103: sub eax, 0x49f62728
	0xa73112: mov ebx, ebp
	0xa73116: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73124: and dword ptr [ebx], eax
	0xa73126: and eax, 0xffff
	0xa73135: add ecx, eax
	0xa73139: mov eax, dword ptr [ecx]
	0xa73143: mov esi, ebp
	0xa73145: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61881
	0xa7314b: add dword ptr [esi], 4
	0xa73151: jmp eax
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61885
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa54082: mov eax, ebp
	0xa54084: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54089: and dword ptr [eax], 0x10b6d61f
	0xa5408f: mov esi, ebp
	0xa540a1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa540cb: mov esi, dword ptr [esi]
	0xa540dd: add esi, 0
	0xa540f1: movzx eax, byte ptr [esi]
	0xa540f4: mov esi, ebp
	0xa54112: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa54121: sub eax, dword ptr [esi]
	0xa5413b: mov edi, ebp
	0xa5413f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5415c: sub eax, dword ptr [edi]
	0xa5415e: mov edi, ebp
	0xa54172: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54183: and dword ptr [edi], eax
	0xa54195: mov edi, ebp
	0xa541a3: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa541ba: and dword ptr [edi], 0x3ad761a9
	0xa541d0: mov edi, ebp
	0xa541e5: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa541ef: mov byte ptr [edi], al
	0xa541f3: mov edi, ebp
	0xa541f5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa54201: mov ebx, dword ptr [edi]
	0xa54203: and ebx, 2
	0xa5420b: cmp ebx, 0
	0xa54211: je 0xa5422d
	0xa54279: mov eax, ebp
	0xa5427b: add eax, 0xef
	0xa54282: cmp al, 0
	0xa54284: je 0xa54295
	0xa54297: mov eax, ebp
	0xa54299: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5429e: add dword ptr [eax], 0x5842d7e1
	0xa542a4: mov esi, ebp
	0xa542ae: mov eax, ebp
	0xa542b8: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa542c0: mov esi, dword ptr [esi]
	0xa542d4: add esi, 1
	0xa542e0: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa542f5: mov eax, dword ptr [eax]
	0xa54305: movzx esi, word ptr [esi]
	0xa54310: mov edx, ebp
	0xa5431c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa54322: xor esi, dword ptr [edx]
	0xa54326: sub esi, 0x4b25c03c
	0xa5432c: mov edx, ebp
	0xa54348: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5434e: and dword ptr [edx], esi
	0xa54350: and esi, 0xffff
	0xa5435b: add eax, esi
	0xa54363: mov esi, dword ptr [eax]
	0xa54365: mov edx, ebp
	0xa54372: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61888
	0xa54378: add dword ptr [edx], 3
	0xa5437e: jmp esi
handlers outputs:



	0xa5e1d3: mov edi, ebp
	0xa5e1d5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e1db: mov eax, dword ptr [edi]
	0xa5e1dd: mov esi, ebp
	0xa5e1df: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1e5: sub dword ptr [esi], eax
	0xa5e1e7: mov ebx, ebp
	0xa5e1e9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1ef: and dword ptr [ebx], 0x2b76c7fb
	0xa5e21d: mov ecx, ebp
	0xa5e221: mov ebx, ebp
	0xa5e22e: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa5e238: mov edx, dword ptr [ecx]
	0xa5e245: xor edx, 0x1348fdb8
	0xa5e25f: add ebx, 0x79
	0xa5e270: xor edx, 0x772d9eaf
	0xa5e280: mov edi, ebp
Load [EBP+0x79](STATIC)
	0xa5e28b: mov ecx, dword ptr [ebx]
	0xa5e294: add edi, 0x49
	0xa5e2a6: xor ecx, 0x9af695a
	0xa5e2c1: sub ecx, 0x772d9eaf
Store [EBP+0x49](STATIC)
	0xa5e2d1: mov dword ptr [edi], edx
	0xa5e2de: mov edi, ebp
	0xa5e2e0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5e2ef: mov dword ptr [edi], ecx
	0xa5e2f1: mov edi, ebp
	0xa5e2f3: mov eax, ebp
	0xa5e2f5: add edi, 0x79
	0xa5e2fb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e300: mov ecx, dword ptr [eax]
	0xa5e302: mov eax, ebp
Load [EBP+0x79](STATIC)
	0xa5e304: mov esi, dword ptr [edi]
	0xa5e306: add esi, 0x772d9eaf
	0xa5e30c: sub esi, 0x4e577e5
	0xa5e312: mov edx, ebp
	0xa5e314: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e319: add dword ptr [eax], ecx
	0xa5e31b: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e321: mov dword ptr [edx], esi
	0xa5e323: add ebx, eax
	0xa5e325: pushfd
	0xa5e328: mov ebx, ebp
	0xa5e332: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e338: mov edx, dword ptr [ebx]
	0xa5e33a: and edx, 0x486a9870
	0xa5e340: mov ecx, ebp
	0xa5e342: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e348: or dword ptr [ecx], edx
	0xa5e34a: mov eax, ebp
	0xa5e34c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e351: sub dword ptr [eax], 0x4af92329
	0xa5e359: mov edx, ebp
	0xa5e35b: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e368: mov eax, dword ptr [edx]
	0xa5e36a: and eax, 2
	0xa5e36f: cmp eax, 0
	0xa5e374: je 0xa5e390
	0xa5e390: mov ecx, ebp
	0xa5e392: add ecx, 0x49
	0xa5e3b9: cmp cl, 0
	0xa5e3bc: je 0xa5e3cd
	0xa5e3cf: mov esi, ebp
	0xa5e3d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e3d7: mov edx, dword ptr [esi]
	0xa5e3d9: mov edi, ebp
	0xa5e3db: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e3e1: xor dword ptr [edi], edx
	0xa5e3f0: mov edi, ebp
	0xa5e400: add edi, 0x2d
	0xa5e41b: mov ebx, ebp
Load [EBP+0x2d](STATIC)
	0xa5e42c: mov eax, dword ptr [edi]
	0xa5e436: pop edi
	0xa5e437: add ebx, 0x95
	0xa5e445: add eax, 0x4e577e5
	0xa5e44a: sub eax, 0x2b28b3ec
	0xa5e455: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e457: mov ebx, dword ptr [ebx]
	0xa5e469: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e471: mov dword ptr [edx], eax
	0xa5e473: add ebx, 2
	0xa5e479: movzx ebx, byte ptr [ebx]
	0xa5e47c: cmp ebx, 0
	0xa5e482: je 0xa5e4fa
	0xa5e4fa: mov edi, ebp
	0xa5e4fc: add edi, 0x95
	0xa5e504: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e517: mov edi, dword ptr [edi]
	0xa5e523: add edi, 3
	0xa5e533: movzx edi, word ptr [edi]
	0xa5e538: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5e544: mov edx, dword ptr [edx]
	0xa5e551: mov eax, ebp
	0xa5e55b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5e562: add edi, dword ptr [eax]
	0xa5e564: mov ecx, ebp
	0xa5e571: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e579: and dword ptr [ecx], edi
	0xa5e587: and edi, 0xffff
	0xa5e58d: add edx, edi
	0xa5e59b: mov edi, dword ptr [edx]
	0xa5e5a8: mov esi, ebp
	0xa5e5aa: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6188d
	0xa5e5b0: add dword ptr [esi], 5
	0xa5e5b6: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa75496: mov edi, ebp
	0xa75498: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7549e: mov esi, dword ptr [edi]
	0xa754a0: mov edi, ebp
	0xa754a2: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa754a8: sub dword ptr [edi], esi
	0xa754aa: mov ebx, ebp
	0xa754ac: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa754b4: mov edx, dword ptr [ebx]
	0xa754b6: and edx, 2
	0xa754c4: cmp edx, 0
	0xa754ca: je 0xa754ec
	0xa754ec: cmp cl, 0
	0xa754ef: je 0xa754ff
	0xa75503: mov ecx, ebp
	0xa7550c: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75512: and dword ptr [ecx], 0x1148d664
	0xa75518: mov edx, ebp
	0xa7551a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75520: mov esi, dword ptr [edx]
	0xa75522: mov ecx, ebp
	0xa75524: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7552a: add dword ptr [ecx], esi
	0xa7552c: mov edi, ebp
	0xa7552e: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75534: xor dword ptr [edi], 0x6e6b7179
	0xa7553c: mov eax, ebp
	0xa7553e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7554b: mov edx, dword ptr [eax]
	0xa7554d: and edx, 2
	0xa7555b: cmp edx, 0
	0xa75561: je 0xa75581
	0xa75585: mov esi, ebp
	0xa75587: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7558d: mov ebx, dword ptr [esi]
	0xa7558f: add ebx, 0x2b28b3ec
	0xa75595: mov edx, ebp
	0xa75597: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa7559d: mov edi, dword ptr [edx]
	0xa7559f: xor edi, 0x2b28b3ec
	0xa755a5: mov ecx, ebp
	0xa755a7: add ecx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa755b5: mov al, byte ptr [ecx]
	0xa755b7: cmp al, 0x1f
	0xa755b9: jne 0xa755c1
	0xa755c1: cmp al, 0x52
	0xa755c3: jne 0xa755cc
	0xa755cc: cmp al, 0x81
	0xa755ce: jne 0xa755d6
	0xa755d4: mov dword ptr [edi], ebx
	0xa755d6: cmp al, 2
	0xa755d8: jne 0xa755e0
	0xa755e0: mov ebx, ebp
	0xa755e2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa755e8: xor dword ptr [ebx], 0x3e43e64f
	0xa755ee: mov edi, ebp
	0xa755fa: add edi, 0x95
	0xa7560f: mov ecx, ebp
	0xa7561d: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa75627: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa7562d: mov edi, dword ptr [edi]
	0xa7562f: add edi, 0
	0xa75635: movzx edi, word ptr [edi]
	0xa75640: mov edx, ebp
	0xa75642: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa75656: add edi, dword ptr [edx]
	0xa75658: xor edi, 0x37a47f4b
	0xa75668: mov edx, ebp
	0xa75677: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7567d: and dword ptr [edx], edi
	0xa7568e: and edi, 0xffff
	0xa75699: add ecx, edi
	0xa7569b: mov edi, dword ptr [ecx]
	0xa756a3: mov esi, ebp
	0xa756a5: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6188f
	0xa756ab: add dword ptr [esi], 2
	0xa756b1: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa4f7e4: mov edi, ebp
	0xa4f7e6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f7ec: xor dword ptr [edi], 0x2c5a7426
	0xa4f83b: mov esi, ebp
	0xa4f84a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4f858: mov esi, dword ptr [esi]
	0xa4f860: add esi, 2
	0xa4f86d: movzx edx, word ptr [esi]
	0xa4f876: mov esi, ebp
	0xa4f884: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa4f88f: sub edx, dword ptr [esi]
	0xa4f89a: mov ecx, ebp
	0xa4f89e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4f8aa: xor edx, dword ptr [ecx]
	0xa4f8b2: mov ecx, ebp
	0xa4f8b6: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f8be: and dword ptr [ecx], edx
	0xa4f8c2: mov ecx, ebp
	0xa4f8c6: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4f8e0: add dword ptr [ecx], 0xb3878ad
	0xa4f8fb: and edx, 0xffff
	0xa4f909: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4f919: mov edx, dword ptr [edx]
	0xa4f91d: xor edx, 0x1348fdb8
	0xa4f934: mov esi, ebp
	0xa4f936: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa4f94e: mov dword ptr [esi], edx
	0xa4f960: mov edx, ebp
	0xa4f964: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f971: mov cl, byte ptr [edx]
	0xa4f973: mov esi, ebp
	0xa4f975: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4f983: mov ebx, dword ptr [esi]
	0xa4f985: cmp cl, 0
	0xa4f988: je 0xa4f999
	0xa4f98e: xor ebx, 0x6bd5b880
	0xa4f9a5: cmp bl, 0
	0xa4f9a8: je 0xa4f9b8
	0xa4f9bc: mov ebx, ebp
	0xa4f9be: add ebx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f9ca: mov al, byte ptr [ebx]
	0xa4f9ce: cmp al, 0
	0xa4f9d0: je 0xa4f9e1
	0xa4f9e5: mov ebx, ebp
	0xa4f9e9: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa4f9ef: mov ebx, dword ptr [ebx]
	0xa4f9f5: mov edx, ebp
	0xa4fa08: add ebx, 0
	0xa4fa23: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fa2b: mov edx, dword ptr [edx]
	0xa4fa33: movzx ebx, word ptr [ebx]
	0xa4fa38: mov edi, ebp
	0xa4fa40: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4fa4b: sub ebx, dword ptr [edi]
	0xa4fa7c: and ebx, 0xffff
	0xa4fa92: add edx, ebx
	0xa4fa9b: mov ebx, dword ptr [edx]
	0xa4faa7: mov esi, ebp
	0xa4faa9: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61893
	0xa4faaf: add dword ptr [esi], 4
	0xa4fab5: jmp ebx
handlers outputs:



	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9c8: and eax, 0x31838a60
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61897
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



	0xa505fa: mov edx, ebp
	0xa505fc: add edx, 0x49
	0xa50602: mov eax, edx
	0xa50610: mov esi, ebp
	0xa50612: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50618: or dword ptr [esi], 0x6b3164c9
	0xa5061e: mov esi, ebp
	0xa50620: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50626: mov ebx, dword ptr [esi]
	0xa50628: and ebx, 2
	0xa5062e: cmp ebx, 0
	0xa50634: je 0xa50656
	0xa50660: mov edi, ebp
	0xa50662: add edi, 0xef
Load [EBP+0xef](STATIC)
	0xa50668: mov ecx, dword ptr [edi]
	0xa5066a: cmp dl, 0
	0xa5066d: je 0xa5067e
	0xa50673: and ecx, 0x5b626a63
	0xa50680: sub esi, esi
	0xa50688: sub esi, 0x400
	0xa5068e: mov edi, 1
	0xa50693: sub edi, 4
	0xa50699: mov edx, ebp
	0xa5069b: xor edi, esi
	0xa5069d: add edx, 0x95
	0xa506a3: add edi, 1
	0xa506a9: sub ecx, edi
	0xa506ab: mov ebx, 0x400
	0xa506b0: sub ecx, ecx
	0xa506b2: and esi, 0x80
Load [EBP+0x95](STATIC)
	0xa506b8: mov edx, dword ptr [edx]
	0xa506ba: xor edi, eax
	0xa506bc: add edx, 2
	0xa506c2: movzx eax, byte ptr [edx]
	0xa506c5: and ebx, 0xffff
	0xa506cb: mov edx, ebp
	0xa506cd: add ecx, esi
	0xa506cf: sub edi, ebx
	0xa506d1: add edx, 0xa
	0xa506d7: and ebx, ecx
	0xa506d9: and ebx, edx
	0xa506db: xor ecx, esi
	0xa506dd: or ecx, 0xffff
	0xa506e3: add ecx, edi
Load [EBP+0xa](STATIC)
	0xa506e5: sub eax, dword ptr [edx]
	0xa506e7: mov edx, ebp
	0xa506e9: add edx, 0xe5
	0xa506ef: or edi, 0x28
	0xa506f5: xor ebx, ecx
	0xa506f7: add esi, 0x800
	0xa506fd: and ecx, edx
Load [EBP+0xe5](STATIC)
	0xa506ff: add eax, dword ptr [edx]
	0xa50701: sub ecx, 0x40
	0xa50707: add ecx, ecx
	0xa50709: add esi, ebx
	0xa5070b: sub esi, edi
	0xa5070d: xor edi, edi
	0xa5070f: mov edx, ebp
	0xa50711: sub ebx, 0xffff
	0xa50717: add esi, edi
	0xa50719: add esi, 0x28
	0xa5071f: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50729: sub dword ptr [edx], eax
	0xa5072b: or ebx, 0x800
	0xa50731: sub ecx, 0x1c
	0xa50737: sub ebx, ecx
	0xa5073b: mov edx, ebp
	0xa5073f: add edx, 0xe5
	0xa50747: mov edi, 0xa
	0xa5074c: and esi, edi
	0xa5074e: and esi, esi
	0xa50750: or ebx, 0x80
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50756: or dword ptr [edx], 0x4df44040
	0xa50761: mov ecx, ebp
	0xa50763: add ecx, 0x9e
	0xa50769: xor ebx, esi
Store [EBP+0x9e](STATIC)
	0xa5076d: mov byte ptr [ecx], al
	0xa50775: mov esi, ebp
	0xa50777: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50785: mov ecx, dword ptr [esi]
	0xa50787: mov esi, ebp
	0xa50789: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5078f: add dword ptr [esi], ecx
	0xa50795: sub ebx, 0x12d4875b
	0xa5079b: mov ecx, ebp
	0xa5079d: mov eax, ebp
	0xa5079f: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507a5: mov esi, dword ptr [ecx]
	0xa507a7: and esi, 2
	0xa507ad: cmp esi, 0
	0xa507b3: je 0xa507cf
	0xa507cf: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa507d4: xor ebx, dword ptr [eax]
	0xa507d6: xor ebx, eax
	0xa507ee: mov edx, ebp
	0xa507f2: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507fd: mov esi, dword ptr [edx]
	0xa50801: and esi, 2
	0xa50807: cmp esi, 0
	0xa5080d: je 0xa5082f
	0xa5082f: mov eax, ebp
	0xa5083b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50840: or dword ptr [eax], 0x250e5a43
	0xa50846: mov edx, ebp
	0xa50848: add edx, 0xef
	0xa50850: cmp dl, 0
	0xa50853: je 0xa50864
	0xa50870: cmp bl, 0
	0xa50873: je 0xa50883
	0xa5089c: mov ecx, ebp
	0xa508a7: mov edi, ebp
	0xa508a9: add ecx, 0xb8
	0xa508b3: add edi, 0x95
Load [EBP+0xb8](STATIC)
	0xa508b9: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa508bb: mov edi, dword ptr [edi]
	0xa508bf: add edi, 0
	0xa508c5: movzx edi, word ptr [edi]
	0xa508d1: mov esi, ebp
	0xa508d3: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa508d9: xor edi, dword ptr [esi]
	0xa508db: xor edi, 0x2bd5fdb7
	0xa508e5: mov esi, ebp
	0xa508f8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50905: and dword ptr [esi], edi
	0xa50917: and edi, 0xffff
	0xa5091d: add ecx, edi
	0xa5092a: mov edi, dword ptr [ecx]
	0xa5092c: mov esi, ebp
	0xa50935: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6189a
	0xa5093b: add dword ptr [esi], 3
	0xa50941: jmp edi
handlers outputs:



	0xa734c4: mov edi, ebp
	0xa734c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa734d4: mov eax, dword ptr [edi]
	0xa734d8: cmp dl, 0
	0xa734db: je 0xa734ec
	0xa734ee: mov edi, ebp
	0xa734f0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa734f6: xor dword ptr [edi], eax
	0xa734f8: mov esi, ebp
	0xa73501: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73507: mov ecx, dword ptr [esi]
	0xa73513: mov edi, ebp
	0xa73515: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7351b: mov edx, dword ptr [edi]
	0xa7351d: mov esi, ebp
	0xa7351f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73525: sub dword ptr [esi], edx
	0xa73527: mov eax, ebp
	0xa73529: mov edi, ebp
	0xa7352b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73531: mov edx, dword ptr [edi]
	0xa73533: and edx, 2
	0xa73539: add eax, 0xa
	0xa7353e: cmp edx, 0
	0xa73544: je 0xa73560
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73560: xor dword ptr [eax], 0x18a1acd7
	0xa73566: mov esi, ebp
	0xa73572: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73578: sub dword ptr [esi], 0x10275833
	0xa7357e: cmp cl, 0
	0xa73581: je 0xa73592
	0xa73594: mov eax, ebp
	0xa73596: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7359b: mov edi, dword ptr [eax]
	0xa7359d: and edi, 2
	0xa735a3: cmp edi, 0
	0xa735a9: je 0xa735c9
	0xa735d3: mov ecx, ebp
	0xa735dd: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa735fb: mov ecx, dword ptr [ecx]
	0xa73609: add ecx, 2
	0xa73611: mov ebx, dword ptr [ecx]
	0xa73633: mov esi, ebp
	0xa7363c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7364d: xor ebx, dword ptr [esi]
	0xa7365f: mov esi, ebp
	0xa73667: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73681: or dword ptr [esi], ebx
	0xa73683: mov esi, ebp
	0xa7368c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa736a6: xor dword ptr [esi], 0x22ec1e4
	0xa736b3: xor ebx, 0x9af695a
	0xa736c9: mov ecx, ebp
	0xa736d3: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa736e0: mov dword ptr [ecx], ebx
	0xa736e4: mov esi, ebp
	0xa736ec: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa736f2: mov edx, dword ptr [esi]
	0xa736f6: or edx, 0x5f94cca8
	0xa736fc: mov esi, ebp
	0xa736fe: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73704: or dword ptr [esi], edx
	0xa73706: mov eax, ebp
	0xa73708: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7370d: mov edi, dword ptr [eax]
	0xa7370f: mov eax, ebp
	0xa73711: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73716: xor dword ptr [eax], edi
	0xa73718: mov ebx, ebp
	0xa7371a: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73720: mov edx, dword ptr [ebx]
	0xa73722: mov ebx, ebp
	0xa73724: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7372a: xor dword ptr [ebx], edx
	0xa73743: mov ecx, ebp
	0xa73745: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7374b: mov eax, dword ptr [ecx]
	0xa7374d: and eax, 2
	0xa73752: cmp eax, 0
	0xa73757: je 0xa73779
	0xa73785: mov edi, ebp
	0xa7378d: add edi, 0xb8
	0xa73793: mov edx, ebp
	0xa73797: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa7379f: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa737ab: mov edx, dword ptr [edx]
	0xa737b5: add edx, 0
	0xa737c8: movzx edx, word ptr [edx]
	0xa737d0: mov ecx, ebp
	0xa737e5: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa737f2: add edx, dword ptr [ecx]
	0xa73800: xor edx, 0x3b345527
	0xa73806: mov ebx, ebp
	0xa7381b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73827: and dword ptr [ebx], edx
	0xa7382b: and edx, 0xffff
	0xa7383a: add edi, edx
	0xa7383c: mov ecx, dword ptr [edi]
	0xa7384f: mov esi, ebp
	0xa7385b: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618a0
	0xa73861: add dword ptr [esi], 6
	0xa73867: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa561d9: mov ebx, ebp
	0xa561ea: add ebx, 0x49
Load [EBP+0x49](STATIC)
	0xa56203: mov eax, dword ptr [ebx]
	0xa5620d: xor eax, 0x1348fdb8
	0xa56222: xor eax, 0x2a4e64e7
	0xa56239: mov ebx, ebp
	0xa5627f: add ebx, 0x49
Store [EBP+0x49](STATIC)
	0xa56285: mov dword ptr [ebx], eax
	0xa56287: mov esi, ebp
	0xa56289: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa5628f: mov ebx, dword ptr [esi]
	0xa56291: xor ebx, 0x9af695a
	0xa56297: xor ebx, 0x2a4e64e7
	0xa5629d: mov esi, ebp
	0xa5629f: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa562a5: mov dword ptr [esi], ebx
	0xa562ac: mov esi, ebp
	0xa562b3: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa562c3: mov ebx, dword ptr [esi]
	0xa562ca: xor ebx, 0x2a4e64e7
	0xa562d0: mov eax, ebp
	0xa562d4: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa562e1: mov ecx, dword ptr [eax]
	0xa562ec: xor ecx, 0x2a4e64e7
	0xa562fa: mov eax, ebp
	0xa5630c: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa56319: mov dl, byte ptr [eax]
	0xa5631b: cmp dl, 0x1f
	0xa5631e: jne 0xa56333
	0xa56333: cmp dl, 0x52
	0xa56336: jne 0xa5634b
	0xa5634b: cmp dl, 0x81
	0xa5634e: jne 0xa56357
	0xa56354: add ebx, ecx
	0xa56356: pushfd
	0xa56363: xor ebx, 0x42f27517
	0xa5636b: mov edx, ebp
	0xa56371: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa56377: mov dword ptr [edx], ebx
	0xa56394: mov eax, ebp
	0xa56396: add eax, 0xa
	0xa5639f: mov esi, ebp
	0xa563a1: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa563a7: mov edi, dword ptr [esi]
	0xa563a9: xor edi, 0x42f27517
	0xa563af: sub edi, 0x2b28b3ec
	0xa563b5: mov ecx, ebp
	0xa563b7: add ecx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa563bd: mov dword ptr [ecx], edi
	0xa563d9: cmp al, 0
	0xa563db: je 0xa563ec
	0xa563f6: mov esi, ebp
	0xa563f8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa563fe: and dword ptr [esi], 0x3f41a4bc
	0xa56404: mov edi, ebp
	0xa56406: pop eax
	0xa56407: mov ecx, ebp
	0xa56409: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5640f: or dword ptr [edi], 0x3a678074
	0xa56415: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa5641b: mov ecx, dword ptr [ecx]
	0xa5641d: add ecx, 4
	0xa56423: movzx ecx, byte ptr [ecx]
	0xa56426: cmp ecx, 0
	0xa5642c: je 0xa5644e
	0xa56462: mov edx, ebp
	0xa56468: add edx, 0x95
	0xa56470: mov esi, ebp
Load [EBP+0x95](STATIC)
	0xa56477: mov edx, dword ptr [edx]
	0xa5648a: add edx, 2
	0xa56492: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa564a4: mov esi, dword ptr [esi]
	0xa564a6: movzx edx, word ptr [edx]
	0xa564bf: mov eax, ebp
	0xa564c8: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa564d7: add edx, dword ptr [eax]
	0xa564f3: mov eax, ebp
	0xa564f5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa564fe: and dword ptr [eax], edx
	0xa56502: and edx, 0xffff
	0xa56511: add esi, edx
	0xa56523: mov edi, dword ptr [esi]
	0xa56525: mov edx, ebp
	0xa56529: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618a5
	0xa5652f: add dword ptr [edx], 5
	0xa56535: jmp edi
handlers outputs:



	0xa62baf: mov edx, ebp
	0xa62bc1: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa62bdb: mov ebx, dword ptr [edx]
	0xa62bdd: add ebx, 0x2b28b3ec
	0xa62be3: mov edx, ebp
	0xa62be7: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa62bf7: mov ecx, dword ptr [edx]
	0xa62bfd: xor ecx, 0x2b28b3ec
	0xa62c03: mov edx, ebp
	0xa62c11: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62c17: mov al, byte ptr [edx]
	0xa62c19: cmp al, 0x1f
	0xa62c1b: jne 0xa62c27
	0xa62c27: cmp al, 0x52
	0xa62c29: jne 0xa62c42
	0xa62c42: cmp al, 0x81
	0xa62c44: jne 0xa62c8a
	0xa62c57: mov dword ptr [ecx], ebx
	0xa62c8a: cmp al, 2
	0xa62c8c: jne 0xa62caa
	0xa62cb0: mov ecx, ebp
	0xa62cb9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62cbf: mov esi, dword ptr [ecx]
	0xa62cc1: and esi, 2
	0xa62ccb: cmp esi, 0
	0xa62cd1: je 0xa62cf3
	0xa62d24: mov esi, ebp
	0xa62d26: mov eax, ebp
	0xa62d28: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62d2d: mov ecx, dword ptr [eax]
	0xa62d2f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d35: and dword ptr [esi], 0x6f24ddf
	0xa62d3b: and ecx, 2
	0xa62d41: cmp ecx, 0
	0xa62d47: je 0xa62d67
	0xa62d67: mov esi, ebp
	0xa62d69: add esi, 0xa
	0xa62d6f: mov eax, ebp
	0xa62d71: add eax, 0xe5
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d76: and dword ptr [esi], 0x2486315
Load [EBP+0xe5](STATIC)
	0xa62d7c: mov ebx, dword ptr [eax]
	0xa62d7e: and ebx, 2
	0xa62d84: cmp ebx, 0
	0xa62d8a: je 0xa62daa
	0xa62daa: mov edx, ebp
	0xa62dac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62db9: mov edi, dword ptr [edx]
	0xa62dbd: and edi, 2
	0xa62dc3: cmp edi, 0
	0xa62dc9: je 0xa62deb
	0xa62e09: mov ebx, ebp
	0xa62e17: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa62e27: mov ebx, dword ptr [ebx]
	0xa62e35: add ebx, 0
	0xa62e48: mov eax, ebp
	0xa62e52: movzx ebx, word ptr [ebx]
	0xa62e5b: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa62e6a: mov eax, dword ptr [eax]
	0xa62e90: mov esi, ebp
	0xa62e9a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62ea4: or dword ptr [esi], ebx
	0xa62ea8: and ebx, 0xffff
	0xa62eb8: add eax, ebx
	0xa62ec9: mov esi, dword ptr [eax]
	0xa62ed1: mov edi, ebp
	0xa62ed8: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618a7
	0xa62ede: add dword ptr [edi], 2
	0xa62ee4: jmp esi
handlers outputs:



	0xa61e5e: cmp al, 0
	0xa61e60: je 0xa61e71
	0xa61e8f: cmp al, 0
	0xa61e91: je 0xa61ea2
	0xa61ead: mov ecx, ebp
	0xa61eaf: add ecx, 0xa
	0xa61ecc: cmp cl, 0
	0xa61ecf: je 0xa61ee0
	0xa61ee2: mov eax, ebp
	0xa61ee4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61ee9: and dword ptr [eax], 0x4dd027b3
	0xa61f02: mov edi, ebp
	0xa61f04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61f0a: sub dword ptr [edi], 0x47fe636e
	0xa61f23: mov edx, ebp
	0xa61f2b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa61f37: mov edx, dword ptr [edx]
	0xa61f3b: add edx, 2
	0xa61f43: movzx ebx, word ptr [edx]
	0xa61f4a: mov edx, ebp
	0xa61f57: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa61f5d: sub ebx, dword ptr [edx]
	0xa61f81: mov eax, ebp
	0xa61f97: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61fa4: xor dword ptr [eax], ebx
	0xa61fcb: and ebx, 0xffff
	0xa61fd3: add ebx, ebp
Load [EBP+0xb4](VM_REGISTER)
	0xa61fdb: mov ebx, dword ptr [ebx]
	0xa61ff4: xor ebx, 0x1348fdb8
	0xa6200e: mov ecx, ebp
	0xa62017: add ecx, 0x49
Store [EBP+0x49](STATIC)
	0xa62027: mov dword ptr [ecx], ebx
	0xa6203f: mov eax, ebp
	0xa62041: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62046: xor dword ptr [eax], 0x18e309a9
	0xa6204c: mov eax, ebp
	0xa6204e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62053: mov esi, dword ptr [eax]
	0xa62055: and esi, 2
	0xa6205b: cmp esi, 0
	0xa62061: je 0xa62081
	0xa62081: mov edi, ebp
	0xa62085: mov ecx, ebp
	0xa6208d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa62099: mov ecx, dword ptr [ecx]
	0xa6209f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa620ad: mov edi, dword ptr [edi]
	0xa620b3: add ecx, 0
	0xa620c1: movzx ecx, word ptr [ecx]
	0xa620cc: mov eax, ebp
	0xa620de: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa620e9: sub ecx, dword ptr [eax]
	0xa62104: mov eax, ebp
	0xa62106: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6211b: sub dword ptr [eax], ecx
	0xa6211d: and ecx, 0xffff
	0xa62129: add edi, ecx
	0xa62132: mov eax, dword ptr [edi]
	0xa62134: mov edi, ebp
	0xa6213a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618ab
	0xa62140: add dword ptr [edi], 4
	0xa62146: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7c3ab: cmp dl, 0
	0xa7c3ae: je 0xa7c3bf
	0xa7c3cc: mov esi, ebp
	0xa7c3ce: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c3d4: add dword ptr [esi], 0x5e888862
	0xa7c3e0: mov esi, ebp
	0xa7c3ea: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7c3f0: mov esi, dword ptr [esi]
	0xa7c3f2: add esi, 2
	0xa7c403: movzx edx, word ptr [esi]
	0xa7c408: mov esi, ebp
	0xa7c416: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c41e: sub edx, dword ptr [esi]
	0xa7c42e: mov esi, ebp
	0xa7c436: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c440: xor edx, dword ptr [esi]
	0xa7c44f: mov esi, ebp
	0xa7c457: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c46b: and dword ptr [esi], edx
	0xa7c46f: mov esi, ebp
	0xa7c481: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c496: and dword ptr [esi], 0x6c5c027
	0xa7c4a9: and edx, 0xffff
	0xa7c4bf: add edx, ebp
	0xa7c4c8: xor edx, 0x2b28b3ec
	0xa7c4d3: mov esi, ebp
	0xa7c4e2: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c4ef: mov dword ptr [esi], edx
	0xa7c526: mov ebx, ebp
	0xa7c528: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c52e: mov esi, dword ptr [ebx]
	0xa7c530: mov ebx, ebp
	0xa7c532: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c538: or dword ptr [ebx], esi
	0xa7c53a: mov eax, ebp
	0xa7c53c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c541: add dword ptr [eax], 0x69c6a8ff
	0xa7c54e: mov ecx, ebp
	0xa7c550: mov ebx, ebp
	0xa7c55d: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c563: mov ebx, dword ptr [ebx]
	0xa7c573: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7c57b: mov ecx, dword ptr [ecx]
	0xa7c589: add ebx, 0
	0xa7c599: movzx ebx, word ptr [ebx]
	0xa7c5a4: mov eax, ebp
	0xa7c5a8: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c5ad: xor ebx, dword ptr [eax]
	0xa7c5b7: sub ebx, 0x791c4b32
	0xa7c5bf: mov eax, ebp
	0xa7c5c1: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c5d9: xor dword ptr [eax], ebx
	0xa7c5db: and ebx, 0xffff
	0xa7c5e1: add ecx, ebx
	0xa7c5ed: mov eax, dword ptr [ecx]
	0xa7c5ef: mov ebx, ebp
	0xa7c5f9: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618af
	0xa7c5ff: add dword ptr [ebx], 4
	0xa7c605: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7a10b: mov eax, ebp
	0xa7a10d: add eax, 0xef
	0xa7a114: cmp al, 0
	0xa7a116: je 0xa7a127
	0xa7a145: mov ecx, ebp
	0xa7a147: add ecx, 0x49
	0xa7a165: mov eax, ebp
	0xa7a167: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a16c: mov edi, dword ptr [eax]
	0xa7a16e: mov edx, ebp
	0xa7a170: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a176: xor dword ptr [edx], edi
	0xa7a18a: cmp cl, 0
	0xa7a18d: je 0xa7a19d
	0xa7a19f: mov edx, ebp
	0xa7a1a1: add edx, 0xe5
	0xa7a1a7: mov eax, ebp
	0xa7a1a9: add eax, 0xa
Load [EBP+0xe5](STATIC)
	0xa7a1ae: mov ecx, dword ptr [edx]
	0xa7a1b0: and ecx, 2
	0xa7a1b6: cmp ecx, 0
	0xa7a1bc: je 0xa7a1de
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1de: xor dword ptr [eax], 0x46ff79b1
	0xa7a1e4: mov ebx, ebp
	0xa7a1e6: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1ec: xor dword ptr [ebx], 0x2678d220
	0xa7a222: mov edi, ebp
	0xa7a228: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7a238: mov edi, dword ptr [edi]
	0xa7a241: add edi, 0
	0xa7a253: movzx ecx, byte ptr [edi]
	0xa7a256: mov edi, ebp
	0xa7a258: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a262: add ecx, dword ptr [edi]
	0xa7a264: mov edi, ebp
	0xa7a266: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a271: add ecx, dword ptr [edi]
	0xa7a283: mov ebx, ebp
	0xa7a28f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a29a: xor dword ptr [ebx], ecx
	0xa7a2a5: mov eax, ebp
	0xa7a2b4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a2b9: and dword ptr [eax], 0x76f31181
	0xa7a2c1: mov eax, ebp
	0xa7a2d8: add eax, 0x9e
Store [EBP+0x9e](STATIC)
	0xa7a2df: mov byte ptr [eax], cl
	0xa7a2e1: mov eax, ebp
	0xa7a2e3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a2e8: mov edx, dword ptr [eax]
	0xa7a2ea: add edx, 0x6c2d4307
	0xa7a2f0: mov esi, ebp
	0xa7a2f2: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a2f8: xor dword ptr [esi], edx
	0xa7a2fa: mov esi, ebp
	0xa7a2fc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a302: and dword ptr [esi], 0x3ad95769
	0xa7a32c: mov edx, ebp
	0xa7a338: mov esi, ebp
	0xa7a344: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a34a: mov edx, dword ptr [edx]
	0xa7a354: add edx, 1
	0xa7a35c: add esi, 0xb8
	0xa7a364: movzx edx, word ptr [edx]
Load [EBP+0xb8](STATIC)
	0xa7a367: mov esi, dword ptr [esi]
	0xa7a373: mov eax, ebp
	0xa7a387: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7a38e: xor edx, dword ptr [eax]
	0xa7a399: xor edx, 0x768e7e12
	0xa7a3a1: mov eax, ebp
	0xa7a3b4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a3bd: sub dword ptr [eax], edx
	0xa7a3d4: and edx, 0xffff
	0xa7a3e4: add esi, edx
	0xa7a3f6: mov ecx, dword ptr [esi]
	0xa7a404: mov edi, ebp
	0xa7a40d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618b2
	0xa7a413: add dword ptr [edi], 3
	0xa7a419: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa74a31: mov edx, ebp
	0xa74a33: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74a39: mov ecx, dword ptr [edx]
	0xa74a3b: and ecx, 2
	0xa74a41: cmp ecx, 0
	0xa74a47: je 0xa74a63
	0xa74a63: mov eax, ebp
	0xa74a65: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74a6a: mov edx, dword ptr [eax]
	0xa74a6c: mov ebx, ebp
	0xa74a6e: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74a74: and dword ptr [ebx], edx
	0xa74a9e: mov esi, ebp
	0xa74aa0: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74aa6: mov ebx, dword ptr [esi]
	0xa74aa8: and ebx, 2
	0xa74aae: cmp ebx, 0
	0xa74ab4: je 0xa74ad6
	0xa74ad6: mov ecx, ebp
	0xa74ad8: add ecx, 0xef
	0xa74ae0: cmp cl, 0
	0xa74ae3: je 0xa74af4
	0xa74af6: mov edx, ebp
	0xa74af8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74afe: mov ebx, dword ptr [edx]
	0xa74b00: mov ecx, ebp
	0xa74b02: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74b08: or dword ptr [ecx], ebx
	0xa74b12: mov ebx, ebp
	0xa74b16: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74b1c: mov edi, dword ptr [ebx]
	0xa74b1e: and edi, 2
	0xa74b24: cmp edi, 0
	0xa74b2a: je 0xa74b46
	0xa74b52: mov eax, ebp
	0xa74b54: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa74b59: mov eax, dword ptr [eax]
	0xa74b5d: add eax, 3
	0xa74b68: movzx ebx, word ptr [eax]
	0xa74b8d: mov edx, ebp
	0xa74b97: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74ba7: add ebx, dword ptr [edx]
	0xa74bb0: mov edx, ebp
	0xa74bc0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74bc8: and dword ptr [edx], ebx
	0xa74bca: mov edx, ebp
	0xa74bcc: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa74be1: sub dword ptr [edx], 0x216c565
	0xa74be9: and ebx, 0xffff
	0xa74bff: add ebx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa74c07: mov ebx, dword ptr [ebx]
	0xa74c0b: mov edx, ebp
	0xa74c0d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa74c25: mov edx, dword ptr [edx]
	0xa74c2f: add edx, 0
	0xa74c44: mov al, byte ptr [edx]
	0xa74c46: cmp al, 0x1f
	0xa74c48: jne 0xa74c73
	0xa74c73: cmp al, 0x52
	0xa74c75: jne 0xa74c91
	0xa74c91: cmp al, 0x81
	0xa74c93: jne 0xa74ca7
Deref(t48,ds)
	0xa74c99: mov ebx, dword ptr [ebx]
	0xa74cb0: xor ebx, 0x9af695a
	0xa74cb6: mov edi, ebp
	0xa74cba: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa74cc0: mov dword ptr [edi], ebx
	0xa74ccc: mov ebx, ebp
	0xa74cd0: add ebx, 0xb8
	0xa74cd6: mov edi, ebp
Load [EBP+0xb8](STATIC)
	0xa74ce0: mov ebx, dword ptr [ebx]
	0xa74cf5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa74d05: mov edi, dword ptr [edi]
	0xa74d0b: add edi, 1
	0xa74d23: movzx edi, word ptr [edi]
	0xa74d39: mov ecx, ebp
	0xa74d47: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa74d4f: xor edi, dword ptr [ecx]
	0xa74d51: add edi, 0x644a0210
	0xa74d6c: and edi, 0xffff
	0xa74d84: add ebx, edi
	0xa74d86: mov edi, dword ptr [ebx]
	0xa74d8e: mov esi, ebp
	0xa74da3: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618b7
	0xa74da9: add dword ptr [esi], 5
	0xa74daf: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa682e5: mov edx, ebp
	0xa682e7: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa682ed: mov ebx, dword ptr [edx]
	0xa682ef: xor ebx, 0x9af695a
	0xa682f5: add ebx, 0x6f672d0
	0xa682fd: mov eax, ebp
	0xa682ff: add eax, 0x79
Store [EBP+0x79](STATIC)
	0xa68304: mov dword ptr [eax], ebx
	0xa6831c: mov edx, ebp
	0xa68333: mov ebx, ebp
	0xa6833f: add ebx, 0x49
Load [EBP+0x49](STATIC)
	0xa68345: mov esi, dword ptr [ebx]
	0xa68347: xor esi, 0x1348fdb8
	0xa6835a: add edx, 0xe5
	0xa6836a: sub esi, 0x6f672d0
	0xa6837a: mov ebx, ebp
Load [EBP+0xe5](STATIC)
	0xa68386: mov edi, dword ptr [edx]
	0xa6838d: add ebx, 0x49
	0xa68393: mov eax, ebp
Store [EBP+0x49](STATIC)
	0xa68395: mov dword ptr [ebx], esi
	0xa683a3: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa683aa: add dword ptr [eax], edi
	0xa683c6: mov esi, ebp
	0xa683c8: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa683ce: mov al, byte ptr [esi]
	0xa683da: cmp bl, 0
	0xa683dd: je 0xa683ee
	0xa683f6: mov edi, ebp
	0xa683ff: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa6840b: mov esi, dword ptr [edi]
	0xa68414: sub esi, 0x6f672d0
	0xa68422: xor esi, 0x31b93672
	0xa68434: mov edi, ebp
	0xa68442: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa68453: mov dword ptr [edi], esi
	0xa68455: add eax, ebx
	0xa68457: pushfd
	0xa68460: mov ecx, ebp
	0xa68473: add ecx, 0x2d
	0xa6847f: mov esi, ebp
Load [EBP+0x2d](STATIC)
	0xa68481: mov ebx, dword ptr [ecx]
	0xa68489: xor ebx, 0x31b93672
	0xa68495: sub ebx, 0x2b28b3ec
	0xa684ab: pop edx
	0xa684ae: mov ecx, ebp
	0xa684b4: add esi, 0x95
	0xa684c2: add ecx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa684c8: mov dword ptr [ecx], ebx
Load [EBP+0x95](STATIC)
	0xa684d4: mov esi, dword ptr [esi]
	0xa684da: add esi, 2
	0xa684ea: movzx esi, byte ptr [esi]
	0xa684ed: cmp esi, 0
	0xa684f3: je 0xa6855d
	0xa6855d: mov edx, ebp
	0xa6855f: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa68565: add dword ptr [edx], 0x3ac54c18
	0xa68593: mov edi, ebp
	0xa68595: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6859b: or dword ptr [edi], 0x69f60b84
	0xa685ab: mov edi, ebp
	0xa685b9: add edi, 0xb8
	0xa685c6: mov ebx, ebp
Load [EBP+0xb8](STATIC)
	0xa685d5: mov edi, dword ptr [edi]
	0xa685e6: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa68601: mov ebx, dword ptr [ebx]
	0xa68603: add ebx, 0
	0xa6861b: movzx ebx, word ptr [ebx]
	0xa68620: mov ecx, ebp
	0xa68624: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa68631: add ebx, dword ptr [ecx]
	0xa6863e: xor ebx, 0xee62aa
	0xa68644: mov ecx, ebp
	0xa6864a: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6865b: sub dword ptr [ecx], ebx
	0xa68661: and ebx, 0xffff
	0xa68669: add edi, ebx
	0xa68673: mov ecx, dword ptr [edi]
	0xa68677: mov esi, ebp
	0xa68679: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618bc
	0xa6867f: add dword ptr [esi], 5
	0xa68685: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa67784: mov edi, ebp
	0xa67786: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6778c: or dword ptr [edi], 0x61606c72
	0xa677b7: mov eax, ebp
	0xa677b9: mov ebx, ebp
	0xa677bb: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa677c1: xor dword ptr [ebx], 0x526b4fe2
	0xa677c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa677cc: mov ecx, dword ptr [eax]
	0xa677ce: and ecx, 2
	0xa677d4: cmp ecx, 0
	0xa677da: je 0xa677fa
	0xa677e0: mov eax, ebp
	0xa677e2: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa677e7: and dword ptr [eax], 0x6fbcb368
	0xa677ed: mov eax, ebp
	0xa677ef: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa677f4: xor dword ptr [eax], 0xfb8333f
	0xa67804: mov ecx, ebp
	0xa67806: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6780c: xor dword ptr [ecx], 0x6e01bc0e
	0xa67812: mov esi, ebp
	0xa67814: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6781a: mov ebx, dword ptr [esi]
	0xa6781c: add ebx, 0x2b28b3ec
	0xa67822: mov esi, ebp
	0xa67824: mov edi, ebp
	0xa67826: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa6782c: mov ecx, dword ptr [esi]
	0xa6782e: add edi, 0xa
	0xa67834: xor ecx, 0x2b28b3ec
Load [EBP+0xa](STATIC)
	0xa6783a: mov esi, dword ptr [edi]
	0xa6783c: xor esi, 0x4ef8318c
	0xa67842: mov edi, ebp
	0xa67844: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6784a: mov dl, byte ptr [edi]
	0xa6784c: cmp dl, 0x1f
	0xa6784f: jne 0xa67857
	0xa67857: cmp dl, 0x52
	0xa6785a: jne 0xa67863
	0xa67863: cmp dl, 0x81
	0xa67866: jne 0xa6786e
	0xa6786c: mov dword ptr [ecx], ebx
	0xa6786e: cmp dl, 2
	0xa67871: jne 0xa67879
	0xa67879: mov edi, ebp
	0xa6787b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67881: or dword ptr [edi], esi
	0xa67883: mov ecx, ebp
	0xa67885: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6788b: and dword ptr [ecx], 0x2e6dd552
	0xa67891: mov ecx, ebp
	0xa67893: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67899: mov edx, dword ptr [ecx]
	0xa6789b: and edx, 2
	0xa678a1: cmp edx, 0
	0xa678a7: je 0xa678c9
	0xa678ad: mov ecx, ebp
	0xa678af: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa678b5: and dword ptr [ecx], 0x7f23be37
	0xa678bb: mov ecx, ebp
	0xa678bd: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa678c3: and dword ptr [ecx], 0x265e9406
	0xa678cf: mov eax, ebp
	0xa678d5: mov edx, ebp
	0xa678dd: add eax, 0xb8
	0xa678e8: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa678f0: mov eax, dword ptr [eax]
Load [EBP+0x95](STATIC)
	0xa678fb: mov edx, dword ptr [edx]
	0xa6790e: add edx, 0
	0xa6791e: movzx edx, word ptr [edx]
	0xa6794e: mov ecx, ebp
	0xa67958: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6795e: add dword ptr [ecx], edx
	0xa67968: and edx, 0xffff
	0xa67974: add eax, edx
	0xa6798a: mov ecx, dword ptr [eax]
	0xa6798c: mov edx, ebp
	0xa679a1: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618be
	0xa679a7: add dword ptr [edx], 2
	0xa679ad: jmp ecx
handlers outputs:



	0xa54082: mov eax, ebp
	0xa54084: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54089: and dword ptr [eax], 0x10b6d61f
	0xa5408f: mov esi, ebp
	0xa540a1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa540cb: mov esi, dword ptr [esi]
	0xa540dd: add esi, 0
	0xa540f1: movzx eax, byte ptr [esi]
	0xa540f4: mov esi, ebp
	0xa54112: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa54121: sub eax, dword ptr [esi]
	0xa5413b: mov edi, ebp
	0xa5413f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5415c: sub eax, dword ptr [edi]
	0xa5415e: mov edi, ebp
	0xa54172: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54183: and dword ptr [edi], eax
	0xa54195: mov edi, ebp
	0xa541a3: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa541ba: and dword ptr [edi], 0x3ad761a9
	0xa541d0: mov edi, ebp
	0xa541e5: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa541ef: mov byte ptr [edi], al
	0xa541f3: mov edi, ebp
	0xa541f5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa54201: mov ebx, dword ptr [edi]
	0xa54203: and ebx, 2
	0xa5420b: cmp ebx, 0
	0xa54211: je 0xa5422d
	0xa54279: mov eax, ebp
	0xa5427b: add eax, 0xef
	0xa54282: cmp al, 0
	0xa54284: je 0xa54295
	0xa54297: mov eax, ebp
	0xa54299: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5429e: add dword ptr [eax], 0x5842d7e1
	0xa542a4: mov esi, ebp
	0xa542ae: mov eax, ebp
	0xa542b8: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa542c0: mov esi, dword ptr [esi]
	0xa542d4: add esi, 1
	0xa542e0: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa542f5: mov eax, dword ptr [eax]
	0xa54305: movzx esi, word ptr [esi]
	0xa54310: mov edx, ebp
	0xa5431c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa54322: xor esi, dword ptr [edx]
	0xa54326: sub esi, 0x4b25c03c
	0xa5432c: mov edx, ebp
	0xa54348: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5434e: and dword ptr [edx], esi
	0xa54350: and esi, 0xffff
	0xa5435b: add eax, esi
	0xa54363: mov esi, dword ptr [eax]
	0xa54365: mov edx, ebp
	0xa54372: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618c1
	0xa54378: add dword ptr [edx], 3
	0xa5437e: jmp esi
handlers outputs:



	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9d2: sub eax, edi
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618c5
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618c9
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa76f21: cmp al, 0
	0xa76f23: je 0xa76f34
	0xa76f46: mov edx, ebp
	0xa76f48: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f4e: xor dword ptr [edx], 0x1f6e1d7b
	0xa76f69: mov ecx, ebp
	0xa76f6b: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f71: mov edi, dword ptr [ecx]
	0xa76f73: mov esi, ebp
	0xa76f75: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f7b: xor dword ptr [esi], edi
	0xa76f7d: mov edi, ebp
	0xa76f7f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f95: mov eax, dword ptr [edi]
	0xa76f97: mov edi, ebp
	0xa76f99: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f9f: add dword ptr [edi], eax
	0xa76fa1: mov ecx, ebp
	0xa76fa5: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76fab: mov edi, dword ptr [ecx]
	0xa76fb5: and edi, 2
	0xa76fbb: cmp edi, 0
	0xa76fc1: je 0xa76fdd
	0xa76fe9: mov edi, ebp
	0xa76feb: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76ff1: mov ebx, dword ptr [edi]
	0xa76ff3: mov eax, ebp
	0xa76ff5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76ffa: or dword ptr [eax], ebx
	0xa77010: mov esi, ebp
	0xa77012: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77018: xor dword ptr [esi], 0x9ff3707
	0xa7703d: mov esi, ebp
	0xa77050: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa77058: mov esi, dword ptr [esi]
	0xa7705a: add esi, 2
	0xa7706b: movzx ecx, word ptr [esi]
	0xa7707c: mov esi, ebp
	0xa7707e: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7708a: xor ecx, dword ptr [esi]
	0xa7708e: mov esi, ebp
	0xa7709a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa770a8: xor ecx, dword ptr [esi]
	0xa770aa: mov esi, ebp
	0xa770ac: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa770b2: sub dword ptr [esi], ecx
	0xa770bb: mov edi, ebp
	0xa770c5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa770da: and dword ptr [edi], 0x74d684ee
	0xa770ef: and ecx, 0xffff
	0xa770fd: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa770ff: mov ecx, dword ptr [ecx]
	0xa77107: xor ecx, 0x9af695a
	0xa77115: mov esi, ebp
	0xa77121: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa77132: mov dword ptr [esi], ecx
	0xa77134: mov edx, ebp
	0xa77136: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7713c: mov ecx, dword ptr [edx]
	0xa7713e: and ecx, 2
	0xa77144: cmp ecx, 0
	0xa7714a: je 0xa7716c
	0xa77178: mov eax, ebp
	0xa77182: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7718d: mov eax, dword ptr [eax]
	0xa77198: mov edx, ebp
	0xa771aa: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa771b8: mov edx, dword ptr [edx]
	0xa771be: add edx, 0
	0xa771ca: movzx edx, word ptr [edx]
	0xa771ea: add edx, 0x143f1315
	0xa771f0: mov ebx, ebp
	0xa771f2: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77200: add dword ptr [ebx], edx
	0xa77202: and edx, 0xffff
	0xa7720c: add eax, edx
	0xa7720e: mov edx, dword ptr [eax]
	0xa7721e: mov ecx, ebp
	0xa77228: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618cd
	0xa7722e: add dword ptr [ecx], 4
	0xa77234: jmp edx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa4fab9: mov eax, ebp
	0xa4fac3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4fac8: mov edi, dword ptr [eax]
	0xa4faca: cmp dl, 0
	0xa4facd: je 0xa4fade
	0xa4fae0: and edi, 2
	0xa4fae6: cmp edi, 0
	0xa4faec: je 0xa4fb0c
	0xa4fb16: mov edi, ebp
	0xa4fb1a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb2d: mov edi, dword ptr [edi]
	0xa4fb37: add edi, 2
	0xa4fb44: movzx ecx, word ptr [edi]
	0xa4fb51: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa4fb5a: mov esp, dword ptr [ecx]
	0xa4fb78: mov esi, ebp
	0xa4fb82: mov edx, ebp
	0xa4fb8a: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb94: mov edx, dword ptr [edx]
	0xa4fba5: add edx, 0
	0xa4fbab: movzx edx, word ptr [edx]
	0xa4fbb4: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fbc0: mov esi, dword ptr [esi]
	0xa4fbe0: sub edx, 0x1db2fc37
	0xa4fbe6: mov eax, ebp
	0xa4fbea: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4fbf1: and dword ptr [eax], edx
	0xa4fbff: and edx, 0xffff
	0xa4fc09: add esi, edx
	0xa4fc15: mov edi, dword ptr [esi]
	0xa4fc20: mov esi, ebp
	0xa4fc28: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618d1
	0xa4fc2e: add dword ptr [esi], 4
	0xa4fc34: jmp edi
handlers outputs:



	0xa5ed87: mov edi, ebp
	0xa5ed9a: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa5edae: mov ebx, dword ptr [edi]
	0xa5edbc: xor ebx, 0x9af695a
	0xa5edca: mov edi, ebp
	0xa5ede8: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5edf0: mov dword ptr [edi], ebx
	0xa5ee31: mov esi, ebp
	0xa5ee33: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ee39: mov ebx, dword ptr [esi]
	0xa5ee3b: mov eax, ebp
	0xa5ee3d: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee42: and dword ptr [eax], ebx
	0xa5ee44: mov eax, ebp
	0xa5ee46: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee4b: add dword ptr [eax], 0x5d88a98c
	0xa5ee51: mov edx, ebp
	0xa5ee53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5ee59: mov esi, dword ptr [edx]
	0xa5ee5b: and esi, 0x2de1e57b
	0xa5ee61: mov eax, ebp
	0xa5ee63: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee68: and dword ptr [eax], esi
	0xa5ee6a: mov esi, ebp
	0xa5ee6c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee72: sub dword ptr [esi], 0x559e01c0
	0xa5ee78: mov edi, ebp
	0xa5ee7a: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee88: xor dword ptr [edi], 0x78b0f429
	0xa5eea2: mov ecx, ebp
	0xa5eea4: mov edx, ebp
	0xa5eea6: add ecx, 0xe5
	0xa5eeac: add edx, 0x9e
Load [EBP+0xe5](STATIC)
	0xa5eeb2: mov ebx, dword ptr [ecx]
	0xa5eeb4: and ebx, 2
	0xa5eeba: cmp ebx, 0
	0xa5eec0: je 0xa5eee2
Load [EBP+0x9e](STATIC)
	0xa5eee2: mov bl, byte ptr [edx]
	0xa5eef6: cmp bl, 0
	0xa5eef9: je 0xa5ef09
	0xa5ef0b: mov edi, ebp
	0xa5ef0d: mov esi, 0x200
	0xa5ef12: or esi, 0x80
	0xa5ef18: xor esi, 0x28
	0xa5ef1e: add edi, 0x49
Load [EBP+0x49](STATIC)
	0xa5ef24: mov ebx, dword ptr [edi]
	0xa5ef2b: xor ebx, 0x1348fdb8
	0xa5ef4a: mov ecx, ebp
	0xa5ef4c: add ecx, 0x49
	0xa5ef52: add esi, 0x7fffffff
Store [EBP+0x49](STATIC)
	0xa5ef5c: mov dword ptr [ecx], ebx
	0xa5ef60: mov ecx, ebp
	0xa5ef62: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa5ef75: mov edx, dword ptr [ecx]
	0xa5ef7f: mov ecx, ebp
	0xa5ef89: add ecx, 0x2d
	0xa5ef96: mov edi, 0x200
Store [EBP+0x2d](STATIC)
	0xa5ef9b: mov dword ptr [ecx], edx
	0xa5ef9d: add esi, edi
	0xa5ef9f: pushfd
	0xa5efa7: mov eax, ebp
	0xa5efab: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa5efbc: mov ecx, dword ptr [eax]
	0xa5efc6: sub ecx, 0x2b28b3ec
	0xa5efcc: mov edi, ebp
	0xa5efd6: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5efe1: mov dword ptr [edi], ecx
	0xa5efe3: pop ebx
	0xa5efe4: mov eax, ebp
	0xa5efe6: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5efeb: mov eax, dword ptr [eax]
	0xa5efed: add eax, 2
	0xa5eff2: movzx eax, byte ptr [eax]
	0xa5eff5: cmp eax, 0
	0xa5effa: je 0xa5f01c
	0xa5f02a: mov edi, ebp
	0xa5f037: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5f03d: mov edi, dword ptr [edi]
	0xa5f050: mov edx, ebp
	0xa5f052: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa5f05c: mov edx, dword ptr [edx]
	0xa5f064: add edx, 3
	0xa5f06a: movzx edx, word ptr [edx]
	0xa5f083: mov eax, ebp
	0xa5f08a: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5f099: xor edx, dword ptr [eax]
	0xa5f0a3: sub edx, 0x4cc8b7f5
	0xa5f0af: mov eax, ebp
	0xa5f0b7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f0c4: xor dword ptr [eax], edx
	0xa5f0ce: and edx, 0xffff
	0xa5f0dc: add edi, edx
	0xa5f0e6: mov edx, dword ptr [edi]
	0xa5f0f2: mov esi, ebp
	0xa5f0f4: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618d6
	0xa5f0fa: add dword ptr [esi], 5
	0xa5f100: jmp edx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa67495: cmp cl, 0
	0xa67498: je 0xa674a9
	0xa674ab: mov edi, ebp
	0xa674ad: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa674b3: sub dword ptr [edi], 0x48c32b48
	0xa674e1: mov esi, ebp
	0xa674e5: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa674fd: mov edx, dword ptr [esi]
	0xa6750b: add edx, 0x2b28b3ec
	0xa6751c: mov esi, ebp
	0xa67520: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa67530: mov ebx, dword ptr [esi]
	0xa6753c: xor ebx, 0x2b28b3ec
	0xa67542: mov edi, ebp
	0xa67554: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6755c: mov al, byte ptr [edi]
	0xa6755e: cmp al, 0x1f
	0xa67560: jne 0xa67577
	0xa67577: cmp al, 0x52
	0xa67579: jne 0xa67599
	0xa67599: cmp al, 0x81
	0xa6759b: jne 0xa675e9
	0xa675a5: mov dword ptr [ebx], edx
	0xa675e9: cmp al, 2
	0xa675eb: jne 0xa675fc
	0xa67605: mov ebx, ebp
	0xa67607: add ebx, 0xef
	0xa6760f: cmp bl, 0
	0xa67612: je 0xa67623
	0xa67634: mov eax, ebp
	0xa67636: mov edx, ebp
	0xa67638: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa67641: mov eax, dword ptr [eax]
	0xa67643: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa67657: mov edx, dword ptr [edx]
	0xa6765b: add edx, 0
	0xa6766b: movzx edx, word ptr [edx]
	0xa6767b: mov esi, ebp
	0xa6768c: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa67694: sub edx, dword ptr [esi]
	0xa676b2: mov esi, ebp
	0xa676b6: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa676ca: xor dword ptr [esi], edx
	0xa676d0: and edx, 0xffff
	0xa676e2: add eax, edx
	0xa676f5: mov esi, dword ptr [eax]
	0xa676f7: mov eax, ebp
	0xa67700: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618d8
	0xa67705: add dword ptr [eax], 2
	0xa6770b: jmp esi
handlers outputs:



	0xa7c633: mov ecx, ebp
	0xa7c635: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c63b: mov ebx, dword ptr [ecx]
	0xa7c646: and ebx, 2
	0xa7c654: cmp ebx, 0
	0xa7c65a: je 0xa7c67c
	0xa7c680: mov esi, ebp
	0xa7c682: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c688: mov edi, dword ptr [esi]
	0xa7c68a: or edi, 0x585dd1e3
	0xa7c690: mov ecx, ebp
	0xa7c692: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c698: add dword ptr [ecx], edi
	0xa7c6a8: mov edx, ebp
	0xa7c6ac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c6b8: mov eax, dword ptr [edx]
	0xa7c6ba: add eax, 0x6efcee4e
	0xa7c6bf: mov ecx, ebp
	0xa7c6c1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c6c9: sub dword ptr [ecx], eax
	0xa7c6d5: mov ebx, ebp
	0xa7c6e7: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c6fb: mov ebx, dword ptr [ebx]
	0xa7c6fd: add ebx, 0
	0xa7c709: movzx eax, word ptr [ebx]
	0xa7c729: mov edx, ebp
	0xa7c72f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c735: add eax, dword ptr [edx]
	0xa7c74c: mov ebx, ebp
	0xa7c754: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c766: add dword ptr [ebx], eax
	0xa7c792: and eax, 0xffff
	0xa7c7a0: add eax, ebp
	0xa7c7a4: xor eax, 0x2b28b3ec
	0xa7c7bb: mov edi, ebp
	0xa7c7cd: add edi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c7d3: mov dword ptr [edi], eax
	0xa7c7e7: mov esi, ebp
	0xa7c7e9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c7ef: mov edx, dword ptr [esi]
	0xa7c7f1: and edx, 2
	0xa7c7f7: cmp edx, 0
	0xa7c7fd: je 0xa7c81f
	0xa7c803: mov esi, ebp
	0xa7c805: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c80b: sub dword ptr [esi], 0x2ccb4ab9
	0xa7c811: mov esi, ebp
	0xa7c813: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c819: or dword ptr [esi], 0x7b50d24d
	0xa7c81f: mov edi, ebp
	0xa7c821: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c827: mov ecx, dword ptr [edi]
	0xa7c829: and ecx, 2
	0xa7c82f: cmp ecx, 0
	0xa7c835: je 0xa7c857
	0xa7c83b: mov edi, ebp
	0xa7c83d: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c843: or dword ptr [edi], 0x146c05c7
	0xa7c849: mov edi, ebp
	0xa7c84b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c851: add dword ptr [edi], 0x1ce889ec
	0xa7c857: mov edi, ebp
	0xa7c863: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c869: mov eax, dword ptr [edi]
	0xa7c86b: mov esi, ebp
	0xa7c86d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c873: add dword ptr [esi], eax
	0xa7c875: mov edi, ebp
	0xa7c877: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c87d: mov eax, dword ptr [edi]
	0xa7c87f: mov edx, ebp
	0xa7c881: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c887: or dword ptr [edx], 0x4c3e24ce
	0xa7c88d: and eax, 2
	0xa7c892: cmp eax, 0
	0xa7c897: je 0xa7c8b9
	0xa7c89d: mov edi, ebp
	0xa7c89f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8a5: sub dword ptr [edi], 0x7b88e838
	0xa7c8ab: mov edi, ebp
	0xa7c8ad: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8b3: or dword ptr [edi], 0x7c8307dc
	0xa7c8b9: mov esi, ebp
	0xa7c8bb: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8c1: sub dword ptr [esi], 0x472eb0b6
	0xa7c8c7: mov eax, ebp
	0xa7c8c9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c8ce: mov ecx, dword ptr [eax]
	0xa7c8d0: sub ecx, 0x322439ec
	0xa7c8d6: mov esi, ebp
	0xa7c8d8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8de: add dword ptr [esi], ecx
	0xa7c8eb: mov edi, ebp
	0xa7c8ed: mov ecx, ebp
	0xa7c8f6: add edi, 0xb8
	0xa7c908: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c910: mov ecx, dword ptr [ecx]
	0xa7c918: add ecx, 2
	0xa7c920: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa7c929: mov edi, dword ptr [edi]
	0xa7c92d: mov eax, ebp
	0xa7c92f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c936: xor ecx, dword ptr [eax]
	0xa7c95a: mov ebx, ebp
	0xa7c95c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c962: add dword ptr [ebx], ecx
	0xa7c977: and ecx, 0xffff
	0xa7c97f: add edi, ecx
	0xa7c985: mov ebx, dword ptr [edi]
	0xa7c987: mov edi, ebp
	0xa7c999: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618dc
	0xa7c99f: add dword ptr [edi], 4
	0xa7c9a5: jmp ebx
handlers outputs:



	0xa62816: mov edi, ebp
	0xa6281a: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62828: mov ecx, dword ptr [edi]
	0xa6282a: mov edi, ebp
	0xa6282c: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62832: or dword ptr [edi], ecx
	0xa62834: mov esi, ebp
	0xa62836: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62844: mov edx, dword ptr [esi]
	0xa62848: and edx, 2
	0xa6284e: cmp edx, 0
	0xa62854: je 0xa62876
	0xa6285a: mov esi, ebp
	0xa6285c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa62862: xor dword ptr [esi], 0x24759f21
	0xa62868: mov esi, ebp
	0xa6286a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa62870: and dword ptr [esi], 0x499a9d71
	0xa62876: mov edx, ebp
	0xa62878: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6287e: xor ebx, dword ptr [edx]
	0xa62884: mov edx, ebp
	0xa62886: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6288c: mov ecx, dword ptr [edx]
	0xa6288e: or ecx, 0x146446bf
	0xa62894: mov esi, ebp
	0xa62896: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628a1: and dword ptr [esi], ecx
	0xa628a5: cmp bl, 0
	0xa628a8: je 0xa628b9
	0xa628bb: mov ebx, ebp
	0xa628bd: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628c3: xor dword ptr [ebx], 0x3eb4bd5c
	0xa628c9: mov edx, ebp
	0xa628cb: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa628d1: xor dword ptr [edx], 0x1a44884
	0xa62923: mov esi, ebp
	0xa6292e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa62934: mov esi, dword ptr [esi]
	0xa6293c: add esi, 2
	0xa62948: movzx eax, word ptr [esi]
	0xa62955: mov esi, ebp
	0xa62959: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa62967: add eax, dword ptr [esi]
	0xa6296b: mov esi, ebp
	0xa62975: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62981: xor eax, dword ptr [esi]
	0xa62999: mov ebx, ebp
	0xa629a5: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa629b1: or dword ptr [ebx], eax
	0xa629b3: mov ebx, ebp
	0xa629b9: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa629c1: or dword ptr [ebx], 0x52d317e2
	0xa629c9: and eax, 0xffff
	0xa629d6: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa629e6: mov eax, dword ptr [eax]
	0xa629e8: xor eax, 0x1348fdb8
	0xa629fe: mov ebx, ebp
	0xa62a0a: add ebx, 0x49
Store [EBP+0x49](STATIC)
	0xa62a25: mov dword ptr [ebx], eax
	0xa62a75: mov ecx, ebp
	0xa62a77: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62a7d: mov edx, dword ptr [ecx]
	0xa62a7f: mov ecx, ebp
	0xa62a81: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62a87: and dword ptr [ecx], edx
	0xa62a89: mov edi, ebp
	0xa62a91: add edi, 0xb8
	0xa62a97: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa62aa5: mov edi, dword ptr [edi]
	0xa62aaf: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa62abd: mov edx, dword ptr [edx]
	0xa62ace: add edx, 0
	0xa62ae6: movzx edx, word ptr [edx]
	0xa62aeb: mov eax, ebp
	0xa62af1: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa62afa: add edx, dword ptr [eax]
	0xa62afc: sub edx, 0x478417c3
	0xa62b08: mov eax, ebp
	0xa62b0a: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62b0f: sub dword ptr [eax], edx
	0xa62b1a: and edx, 0xffff
	0xa62b30: add edi, edx
	0xa62b40: mov esi, dword ptr [edi]
	0xa62b44: mov edi, ebp
	0xa62b4b: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618e0
	0xa62b51: add dword ptr [edi], 4
	0xa62b57: jmp esi
handlers outputs:



	0xa734c4: mov edi, ebp
	0xa734c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa734d4: mov eax, dword ptr [edi]
	0xa734d8: cmp dl, 0
	0xa734db: je 0xa734ec
	0xa734ee: mov edi, ebp
	0xa734f0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa734f6: xor dword ptr [edi], eax
	0xa734f8: mov esi, ebp
	0xa73501: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73507: mov ecx, dword ptr [esi]
	0xa73513: mov edi, ebp
	0xa73515: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7351b: mov edx, dword ptr [edi]
	0xa7351d: mov esi, ebp
	0xa7351f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73525: sub dword ptr [esi], edx
	0xa73527: mov eax, ebp
	0xa73529: mov edi, ebp
	0xa7352b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73531: mov edx, dword ptr [edi]
	0xa73533: and edx, 2
	0xa73539: add eax, 0xa
	0xa7353e: cmp edx, 0
	0xa73544: je 0xa73560
	0xa73552: mov edi, ebp
	0xa73554: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7355a: xor dword ptr [edi], 0x51bfbb53
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73560: xor dword ptr [eax], 0x18a1acd7
	0xa73566: mov esi, ebp
	0xa73572: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73578: sub dword ptr [esi], 0x10275833
	0xa7357e: cmp cl, 0
	0xa73581: je 0xa73592
	0xa73594: mov eax, ebp
	0xa73596: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7359b: mov edi, dword ptr [eax]
	0xa7359d: and edi, 2
	0xa735a3: cmp edi, 0
	0xa735a9: je 0xa735c9
	0xa735d3: mov ecx, ebp
	0xa735dd: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa735fb: mov ecx, dword ptr [ecx]
	0xa73609: add ecx, 2
	0xa73611: mov ebx, dword ptr [ecx]
	0xa73633: mov esi, ebp
	0xa7363c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7364d: xor ebx, dword ptr [esi]
	0xa7365f: mov esi, ebp
	0xa73667: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73681: or dword ptr [esi], ebx
	0xa73683: mov esi, ebp
	0xa7368c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa736a6: xor dword ptr [esi], 0x22ec1e4
	0xa736b3: xor ebx, 0x9af695a
	0xa736c9: mov ecx, ebp
	0xa736d3: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa736e0: mov dword ptr [ecx], ebx
	0xa736e4: mov esi, ebp
	0xa736ec: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa736f2: mov edx, dword ptr [esi]
	0xa736f6: or edx, 0x5f94cca8
	0xa736fc: mov esi, ebp
	0xa736fe: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73704: or dword ptr [esi], edx
	0xa73706: mov eax, ebp
	0xa73708: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7370d: mov edi, dword ptr [eax]
	0xa7370f: mov eax, ebp
	0xa73711: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73716: xor dword ptr [eax], edi
	0xa73718: mov ebx, ebp
	0xa7371a: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73720: mov edx, dword ptr [ebx]
	0xa73722: mov ebx, ebp
	0xa73724: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7372a: xor dword ptr [ebx], edx
	0xa73743: mov ecx, ebp
	0xa73745: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7374b: mov eax, dword ptr [ecx]
	0xa7374d: and eax, 2
	0xa73752: cmp eax, 0
	0xa73757: je 0xa73779
	0xa73785: mov edi, ebp
	0xa7378d: add edi, 0xb8
	0xa73793: mov edx, ebp
	0xa73797: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa7379f: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa737ab: mov edx, dword ptr [edx]
	0xa737b5: add edx, 0
	0xa737c8: movzx edx, word ptr [edx]
	0xa737d0: mov ecx, ebp
	0xa737e5: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa737f2: add edx, dword ptr [ecx]
	0xa73800: xor edx, 0x3b345527
	0xa73806: mov ebx, ebp
	0xa7381b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73827: and dword ptr [ebx], edx
	0xa7382b: and edx, 0xffff
	0xa7383a: add edi, edx
	0xa7383c: mov ecx, dword ptr [edi]
	0xa7384f: mov esi, ebp
	0xa7385b: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618e6
	0xa73861: add dword ptr [esi], 6
	0xa73867: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa60c07: mov edi, ebp
	0xa60c09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c0f: mov esi, dword ptr [edi]
	0xa60c11: and esi, 2
	0xa60c17: cmp esi, 0
	0xa60c1d: je 0xa60c3f
	0xa60c3f: mov esi, ebp
	0xa60c43: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c49: mov ecx, dword ptr [esi]
	0xa60c4b: and ecx, 2
	0xa60c51: cmp ecx, 0
	0xa60c57: je 0xa60c73
	0xa60c7d: mov esi, ebp
	0xa60c7f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60c8d: mov ecx, dword ptr [esi]
	0xa60c8f: sub ecx, 0x2e531dd6
	0xa60c95: mov edx, ebp
	0xa60c97: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c9d: or dword ptr [edx], ecx
	0xa60c9f: mov edi, ebp
	0xa60ca1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ca7: and dword ptr [edi], 0x2fc6b817
	0xa60cad: mov edi, ebp
	0xa60caf: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cb5: mov edx, dword ptr [edi]
	0xa60cb7: mov esi, ebp
	0xa60cb9: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60cbf: sub dword ptr [esi], edx
	0xa60cc1: mov edx, ebp
	0xa60cc3: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa60cc9: mov edi, dword ptr [edx]
	0xa60ccb: and edi, 0x7024bcb4
	0xa60cd1: mov ebx, ebp
	0xa60cd3: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60cd9: sub dword ptr [ebx], edi
	0xa60cdb: mov edx, ebp
	0xa60cdd: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ce3: or dword ptr [edx], 0x5703a393
	0xa60ce9: mov esi, ebp
	0xa60cf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cfb: mov edi, dword ptr [esi]
	0xa60d07: and edi, 2
	0xa60d0d: cmp edi, 0
	0xa60d13: je 0xa60d2f
	0xa60d19: mov esi, ebp
	0xa60d1b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60d21: and dword ptr [esi], 0x33152bc5
	0xa60d31: mov esi, ebp
	0xa60d35: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa60d3d: mov esi, dword ptr [esi]
	0xa60d52: add esi, 0
	0xa60d74: movzx ecx, byte ptr [esi]
	0xa60d7d: mov esi, ebp
	0xa60d8d: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60da0: sub ecx, dword ptr [esi]
	0xa60db2: mov esi, ebp
	0xa60dba: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60dc5: xor ecx, dword ptr [esi]
	0xa60dc9: mov esi, ebp
	0xa60dd1: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60dd9: or dword ptr [esi], ecx
	0xa60de3: mov esi, ebp
	0xa60def: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60e05: xor dword ptr [esi], 0x4c9a2b11
	0xa60e0b: mov esi, ebp
	0xa60e1b: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa60e2b: mov byte ptr [esi], cl
	0xa60e35: mov edi, ebp
	0xa60e37: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e3f: mov edx, dword ptr [edi]
	0xa60e41: cmp dl, 0
	0xa60e44: je 0xa60e55
	0xa60e70: mov edi, ebp
	0xa60e72: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e78: mov ebx, dword ptr [edi]
	0xa60e7a: and ebx, 2
	0xa60e80: cmp ebx, 0
	0xa60e86: je 0xa60ea8
	0xa60ea8: mov ecx, ebp
	0xa60ebb: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa60ec1: mov ebx, dword ptr [ecx]
	0xa60ec3: sub ebx, 0x2c7c5d51
	0xa60ec9: mov edx, ebp
	0xa60ecb: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ed1: and dword ptr [edx], ebx
	0xa60ed3: mov ebx, ebp
	0xa60ed5: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60edb: or dword ptr [ebx], 0x75104d02
	0xa60eeb: mov edi, ebp
	0xa60eed: mov esi, ebp
	0xa60ef9: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa60f01: mov edi, dword ptr [edi]
	0xa60f0d: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa60f17: mov esi, dword ptr [esi]
	0xa60f21: add edi, 1
	0xa60f2d: movzx edi, word ptr [edi]
	0xa60f35: mov ebx, ebp
	0xa60f3b: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa60f4d: sub edi, dword ptr [ebx]
	0xa60f59: add edi, 0x6f9bcb8e
	0xa60f67: mov edx, ebp
	0xa60f81: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60f8f: add dword ptr [edx], edi
	0xa60fa3: and edi, 0xffff
	0xa60fb7: add esi, edi
	0xa60fc7: mov ecx, dword ptr [esi]
	0xa60fcb: mov edx, ebp
	0xa60fcf: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618e9
	0xa60fd5: add dword ptr [edx], 3
	0xa60fdb: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa52722: cmp bl, 0
	0xa52725: je 0xa52736
	0xa5275a: mov ecx, ebp
	0xa5275c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa52762: mov esi, dword ptr [ecx]
	0xa5276c: mov eax, ebp
	0xa52770: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52775: or dword ptr [eax], esi
	0xa52777: mov eax, ebp
	0xa52779: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5277e: mov esi, dword ptr [eax]
	0xa52780: mov edx, ebp
	0xa52782: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52788: or dword ptr [edx], esi
	0xa52794: mov ecx, ebp
	0xa52796: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5279c: mov ebx, dword ptr [ecx]
	0xa5279e: and ebx, 2
	0xa527a4: cmp ebx, 0
	0xa527aa: je 0xa527cc
	0xa527b0: mov ecx, ebp
	0xa527b2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa527b8: add dword ptr [ecx], 0x3fd715e8
	0xa527be: mov ecx, ebp
	0xa527c0: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa527c6: or dword ptr [ecx], 0x57aa8379
	0xa527cc: mov esi, ebp
	0xa527ce: mov edx, ebp
	0xa527d0: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa527d6: mov edi, dword ptr [esi]
	0xa527d8: add edx, 0xef
	0xa527de: and edi, 2
	0xa527e6: cmp dl, 0
	0xa527e9: je 0xa527f9
	0xa527fb: cmp edi, 0
	0xa52801: je 0xa52823
	0xa52807: mov esi, ebp
	0xa52809: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5280f: sub dword ptr [esi], 0x2518588f
	0xa52815: mov esi, ebp
	0xa52817: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5281d: or dword ptr [esi], 0x7b3859fa
	0xa5282a: mov ecx, ebp
	0xa52836: mov eax, ebp
	0xa52838: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa52849: mov edx, dword ptr [ecx]
	0xa52853: xor edx, 0x9af695a
	0xa52861: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa5286e: mov esi, dword ptr [eax]
	0xa52877: mov ecx, ebp
	0xa5287f: xor esi, 0x1348fdb8
	0xa52897: mov edi, ebp
	0xa528a5: add ecx, 0x79
	0xa528b6: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa528be: mov dword ptr [edi], esi
Store [EBP+0x79](STATIC)
	0xa528c2: mov dword ptr [ecx], edx
	0xa528cc: mov eax, ebp
	0xa528d6: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa528e2: mov ecx, dword ptr [eax]
	0xa528e4: mov edx, ebp
	0xa528e8: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa528fa: mov eax, dword ptr [edx]
	0xa5291c: mov edx, ebp
	0xa52922: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa52930: mov bl, byte ptr [edx]
	0xa52932: cmp bl, 0x1f
	0xa52935: jne 0xa5294a
	0xa5294a: cmp bl, 0x52
	0xa5294d: jne 0xa52959
	0xa52959: cmp bl, 0x81
	0xa5295c: jne 0xa52967
	0xa52962: add ecx, eax
	0xa52964: pushfd
	0xa52977: add ecx, 0x457d7e27
	0xa52985: mov edi, ebp
	0xa5298b: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa52997: mov dword ptr [edi], ecx
	0xa5299b: mov esi, ebp
	0xa529a7: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa529bb: mov ecx, dword ptr [esi]
	0xa529c1: sub ecx, 0x457d7e27
	0xa529c9: sub ecx, 0x2b28b3ec
	0xa529e8: mov edi, ebp
	0xa529ea: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa529f2: mov dword ptr [edi], ecx
	0xa529f6: mov edx, ebp
	0xa529f8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa52a06: mov esi, dword ptr [edx]
	0xa52a08: and esi, 2
	0xa52a16: cmp esi, 0
	0xa52a1c: je 0xa52a3e
	0xa52a22: mov edx, ebp
	0xa52a24: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa52a2a: add dword ptr [edx], 0x67480520
	0xa52a30: mov edx, ebp
	0xa52a32: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa52a38: xor dword ptr [edx], 0x69c73088
	0xa52a42: mov ecx, ebp
	0xa52a44: pop eax
	0xa52a45: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52a4b: or dword ptr [ecx], 0x480b1f92
	0xa52a51: mov edx, ebp
	0xa52a53: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa52a59: mov edx, dword ptr [edx]
	0xa52a5b: add edx, 2
	0xa52a61: movzx edx, byte ptr [edx]
	0xa52a64: cmp edx, 0
	0xa52a6a: je 0xa52a8c
	0xa52a9a: mov ebx, ebp
	0xa52aac: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa52ac1: mov ebx, dword ptr [ebx]
	0xa52ac8: mov edi, ebp
	0xa52aca: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa52ad6: mov edi, dword ptr [edi]
	0xa52ae0: add edi, 3
	0xa52afa: movzx edi, word ptr [edi]
	0xa52afd: mov edx, ebp
	0xa52b0c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa52b19: sub edi, dword ptr [edx]
	0xa52b22: sub edi, 0x2941b6d
	0xa52b45: and edi, 0xffff
	0xa52b53: add ebx, edi
	0xa52b55: mov esi, dword ptr [ebx]
	0xa52b6a: mov edi, ebp
	0xa52b6e: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618ee
	0xa52b74: add dword ptr [edi], 5
	0xa52b7a: jmp esi
handlers outputs:



	0xa75496: mov edi, ebp
	0xa75498: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7549e: mov esi, dword ptr [edi]
	0xa754a0: mov edi, ebp
	0xa754a2: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa754a8: sub dword ptr [edi], esi
	0xa754aa: mov ebx, ebp
	0xa754ac: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa754b4: mov edx, dword ptr [ebx]
	0xa754b6: and edx, 2
	0xa754c4: cmp edx, 0
	0xa754ca: je 0xa754ec
	0xa754d0: mov ebx, ebp
	0xa754d2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa754d8: and dword ptr [ebx], 0x2091bfb7
	0xa754de: mov ebx, ebp
	0xa754e0: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa754e6: or dword ptr [ebx], 0x5ef7f4c2
	0xa754ec: cmp cl, 0
	0xa754ef: je 0xa754ff
	0xa75503: mov ecx, ebp
	0xa7550c: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75512: and dword ptr [ecx], 0x1148d664
	0xa75518: mov edx, ebp
	0xa7551a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75520: mov esi, dword ptr [edx]
	0xa75522: mov ecx, ebp
	0xa75524: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7552a: add dword ptr [ecx], esi
	0xa7552c: mov edi, ebp
	0xa7552e: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75534: xor dword ptr [edi], 0x6e6b7179
	0xa7553c: mov eax, ebp
	0xa7553e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7554b: mov edx, dword ptr [eax]
	0xa7554d: and edx, 2
	0xa7555b: cmp edx, 0
	0xa75561: je 0xa75581
	0xa75567: mov eax, ebp
	0xa75569: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7556e: xor dword ptr [eax], 0xe3b5dd9
	0xa75574: mov eax, ebp
	0xa75576: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7557b: or dword ptr [eax], 0x4a389c85
	0xa75585: mov esi, ebp
	0xa75587: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7558d: mov ebx, dword ptr [esi]
	0xa7558f: add ebx, 0x2b28b3ec
	0xa75595: mov edx, ebp
	0xa75597: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa7559d: mov edi, dword ptr [edx]
	0xa7559f: xor edi, 0x2b28b3ec
	0xa755a5: mov ecx, ebp
	0xa755a7: add ecx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa755b5: mov al, byte ptr [ecx]
	0xa755b7: cmp al, 0x1f
	0xa755b9: jne 0xa755c1
	0xa755c1: cmp al, 0x52
	0xa755c3: jne 0xa755cc
	0xa755cc: cmp al, 0x81
	0xa755ce: jne 0xa755d6
	0xa755d4: mov dword ptr [edi], ebx
	0xa755d6: cmp al, 2
	0xa755d8: jne 0xa755e0
	0xa755e0: mov ebx, ebp
	0xa755e2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa755e8: xor dword ptr [ebx], 0x3e43e64f
	0xa755ee: mov edi, ebp
	0xa755fa: add edi, 0x95
	0xa7560f: mov ecx, ebp
	0xa7561d: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa75627: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa7562d: mov edi, dword ptr [edi]
	0xa7562f: add edi, 0
	0xa75635: movzx edi, word ptr [edi]
	0xa75640: mov edx, ebp
	0xa75642: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa75656: add edi, dword ptr [edx]
	0xa75658: xor edi, 0x37a47f4b
	0xa75668: mov edx, ebp
	0xa75677: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7567d: and dword ptr [edx], edi
	0xa7568e: and edi, 0xffff
	0xa75699: add ecx, edi
	0xa7569b: mov edi, dword ptr [ecx]
	0xa756a3: mov esi, ebp
	0xa756a5: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618f0
	0xa756ab: add dword ptr [esi], 2
	0xa756b1: jmp edi
handlers outputs:



	0xa5cd00: mov esi, ebp
	0xa5cd02: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd08: mov ecx, dword ptr [esi]
	0xa5cd0c: and ecx, 2
	0xa5cd12: cmp ecx, 0
	0xa5cd18: je 0xa5cd3a
	0xa5cd4d: mov edx, ebp
	0xa5cd4f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd55: mov esi, dword ptr [edx]
	0xa5cd57: mov edi, ebp
	0xa5cd59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd5f: sub dword ptr [edi], esi
	0xa5cd61: mov eax, ebp
	0xa5cd63: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd68: sub dword ptr [eax], 0x517af35
	0xa5cd6e: mov eax, ebp
	0xa5cd70: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd7f: sub dword ptr [eax], 0x32035459
	0xa5cd9f: mov edx, ebp
	0xa5cda1: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cda7: sub dword ptr [edx], 0x78199ead
	0xa5cdad: mov eax, ebp
	0xa5cdaf: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cdb4: or dword ptr [eax], 0x217c89c9
	0xa5cdba: mov ecx, ebp
	0xa5cdbc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cdc2: mov eax, dword ptr [ecx]
	0xa5cdc4: add eax, 0x531dddb0
	0xa5cdc9: mov edi, ebp
	0xa5cdcb: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cdd1: and dword ptr [edi], eax
	0xa5cdd3: mov edi, ebp
	0xa5cdd5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cddb: or dword ptr [edi], 0x49e1cbd1
	0xa5ce08: mov edi, ebp
	0xa5ce0a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5ce18: mov edi, dword ptr [edi]
	0xa5ce2b: add edi, 2
	0xa5ce3a: movzx ebx, word ptr [edi]
	0xa5ce57: mov edi, ebp
	0xa5ce63: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ce72: xor ebx, dword ptr [edi]
	0xa5ce82: mov edi, ebp
	0xa5ce86: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ce99: or dword ptr [edi], ebx
	0xa5cea3: mov edi, ebp
	0xa5ceaa: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cebb: sub dword ptr [edi], 0x503852d7
	0xa5cec5: and ebx, 0xffff
	0xa5ced3: add ebx, ebp
	0xa5ced5: xor ebx, 0x2b28b3ec
	0xa5ceeb: mov esi, ebp
	0xa5ceed: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa5cef3: mov dword ptr [esi], ebx
	0xa5cef5: mov ebx, ebp
	0xa5cef7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf04: mov edi, dword ptr [ebx]
	0xa5cf0c: and edi, 2
	0xa5cf12: cmp edi, 0
	0xa5cf18: je 0xa5cf3a
	0xa5cf1e: mov ebx, ebp
	0xa5cf20: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf26: sub dword ptr [ebx], 0x509d27db
	0xa5cf2c: mov ebx, ebp
	0xa5cf2e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf34: xor dword ptr [ebx], 0x6546bfdc
	0xa5cf3c: mov edi, ebp
	0xa5cf3e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf44: mov eax, dword ptr [edi]
	0xa5cf48: add eax, 0x7887eedb
	0xa5cf53: mov edi, ebp
	0xa5cf55: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf5b: xor dword ptr [edi], eax
	0xa5cf67: mov ecx, ebp
	0xa5cf69: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf71: mov edx, dword ptr [ecx]
	0xa5cf73: or edx, 0x5b106951
	0xa5cf7f: mov ecx, ebp
	0xa5cf83: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf89: or dword ptr [ecx], edx
	0xa5cf93: mov edi, ebp
	0xa5cf95: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf9b: mov ecx, dword ptr [edi]
	0xa5cf9d: mov esi, ebp
	0xa5cf9f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfa5: or dword ptr [esi], ecx
	0xa5cfa7: mov eax, ebp
	0xa5cfa9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfae: or dword ptr [eax], 0x52b12e12
	0xa5cfbe: mov esi, ebp
	0xa5cfc0: mov ebx, ebp
	0xa5cfcc: add esi, 0x95
	0xa5cfe8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5cff5: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa5d007: mov esi, dword ptr [esi]
	0xa5d00d: add esi, 0
	0xa5d020: movzx esi, word ptr [esi]
	0xa5d038: xor esi, 0x609915b4
	0xa5d03e: mov edi, ebp
	0xa5d04b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d056: xor dword ptr [edi], esi
	0xa5d05d: and esi, 0xffff
	0xa5d069: add ebx, esi
	0xa5d074: mov esi, dword ptr [ebx]
	0xa5d080: mov edi, ebp
	0xa5d08d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618f4
	0xa5d093: add dword ptr [edi], 4
	0xa5d099: jmp esi
handlers outputs:



	0xa50986: mov eax, ebp
	0xa50988: add eax, 0xef
	0xa50991: cmp al, 0
	0xa50993: je 0xa509a4
	0xa509c6: mov edi, ebp
	0xa509c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa509ce: mov ebx, dword ptr [edi]
	0xa509d0: and ebx, 2
	0xa509d6: cmp ebx, 0
	0xa509dc: je 0xa509fe
	0xa509e2: mov edi, ebp
	0xa509e4: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa509ea: xor dword ptr [edi], 0x60a38985
	0xa509f0: mov edi, ebp
	0xa509f2: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa509f8: xor dword ptr [edi], 0x5742ec20
	0xa509fe: mov esi, ebp
	0xa50a0e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50a25: mov esi, dword ptr [esi]
	0xa50a27: add esi, 0
	0xa50a33: movzx ebx, byte ptr [esi]
	0xa50a45: mov edx, ebp
	0xa50a53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa50a59: add ebx, dword ptr [edx]
	0xa50a5d: mov edx, ebp
	0xa50a67: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50a6f: add ebx, dword ptr [edx]
	0xa50a80: mov edx, ebp
	0xa50a84: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50a94: and dword ptr [edx], ebx
	0xa50a96: mov edx, ebp
	0xa50a9c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50aa6: xor dword ptr [edx], 0x39e2bf6
	0xa50ac1: mov ecx, ebp
	0xa50acd: add ecx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa50ae2: mov byte ptr [ecx], bl
	0xa50ae4: mov edx, ebp
	0xa50ae6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50af4: mov eax, dword ptr [edx]
	0xa50afc: sub eax, 0x1e3a4334
	0xa50b03: mov ebx, ebp
	0xa50b05: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50b0b: xor dword ptr [ebx], eax
	0xa50b1f: mov esi, ebp
	0xa50b2e: mov eax, ebp
	0xa50b3d: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50b4a: mov esi, dword ptr [esi]
	0xa50b5d: add esi, 1
	0xa50b6e: movzx esi, word ptr [esi]
	0xa50b79: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa50b8b: mov eax, dword ptr [eax]
	0xa50b95: mov edi, ebp
	0xa50b97: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa50bb2: xor esi, dword ptr [edi]
	0xa50bea: and esi, 0xffff
	0xa50bf0: add eax, esi
	0xa50bf2: mov esi, dword ptr [eax]
	0xa50bf4: mov edx, ebp
	0xa50c09: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618f7
	0xa50c0f: add dword ptr [edx], 3
	0xa50c15: jmp esi
handlers outputs:



	0xa74a31: mov edx, ebp
	0xa74a33: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74a39: mov ecx, dword ptr [edx]
	0xa74a3b: and ecx, 2
	0xa74a41: cmp ecx, 0
	0xa74a47: je 0xa74a63
	0xa74a63: mov eax, ebp
	0xa74a65: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74a6a: mov edx, dword ptr [eax]
	0xa74a6c: mov ebx, ebp
	0xa74a6e: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74a74: and dword ptr [ebx], edx
	0xa74a9e: mov esi, ebp
	0xa74aa0: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74aa6: mov ebx, dword ptr [esi]
	0xa74aa8: and ebx, 2
	0xa74aae: cmp ebx, 0
	0xa74ab4: je 0xa74ad6
	0xa74ad6: mov ecx, ebp
	0xa74ad8: add ecx, 0xef
	0xa74ae0: cmp cl, 0
	0xa74ae3: je 0xa74af4
	0xa74af6: mov edx, ebp
	0xa74af8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74afe: mov ebx, dword ptr [edx]
	0xa74b00: mov ecx, ebp
	0xa74b02: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74b08: or dword ptr [ecx], ebx
	0xa74b12: mov ebx, ebp
	0xa74b16: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74b1c: mov edi, dword ptr [ebx]
	0xa74b1e: and edi, 2
	0xa74b24: cmp edi, 0
	0xa74b2a: je 0xa74b46
	0xa74b52: mov eax, ebp
	0xa74b54: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa74b59: mov eax, dword ptr [eax]
	0xa74b5d: add eax, 3
	0xa74b68: movzx ebx, word ptr [eax]
	0xa74b8d: mov edx, ebp
	0xa74b97: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa74ba7: add ebx, dword ptr [edx]
	0xa74bb0: mov edx, ebp
	0xa74bc0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa74bc8: and dword ptr [edx], ebx
	0xa74bca: mov edx, ebp
	0xa74bcc: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa74be1: sub dword ptr [edx], 0x216c565
	0xa74be9: and ebx, 0xffff
	0xa74bff: add ebx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa74c07: mov ebx, dword ptr [ebx]
	0xa74c0b: mov edx, ebp
	0xa74c0d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa74c25: mov edx, dword ptr [edx]
	0xa74c2f: add edx, 0
	0xa74c44: mov al, byte ptr [edx]
	0xa74c46: cmp al, 0x1f
	0xa74c48: jne 0xa74c73
	0xa74c73: cmp al, 0x52
	0xa74c75: jne 0xa74c91
	0xa74c91: cmp al, 0x81
	0xa74c93: jne 0xa74ca7
Deref(t62,ds)
	0xa74c99: mov ebx, dword ptr [ebx]
	0xa74cb0: xor ebx, 0x9af695a
	0xa74cb6: mov edi, ebp
	0xa74cba: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa74cc0: mov dword ptr [edi], ebx
	0xa74ccc: mov ebx, ebp
	0xa74cd0: add ebx, 0xb8
	0xa74cd6: mov edi, ebp
Load [EBP+0xb8](STATIC)
	0xa74ce0: mov ebx, dword ptr [ebx]
	0xa74cf5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa74d05: mov edi, dword ptr [edi]
	0xa74d0b: add edi, 1
	0xa74d23: movzx edi, word ptr [edi]
	0xa74d39: mov ecx, ebp
	0xa74d47: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa74d4f: xor edi, dword ptr [ecx]
	0xa74d51: add edi, 0x644a0210
	0xa74d6c: and edi, 0xffff
	0xa74d84: add ebx, edi
	0xa74d86: mov edi, dword ptr [ebx]
	0xa74d8e: mov esi, ebp
	0xa74da3: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb618fc
	0xa74da9: add dword ptr [esi], 5
	0xa74daf: jmp edi
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73211: mov ecx, ebp
	0xa73213: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73219: add dword ptr [ecx], 0xd852b6c
	0xa7321f: mov ecx, ebp
	0xa73221: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73227: and dword ptr [ecx], 0x4193680
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0x13](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61900
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa56b2b: mov ebx, ebp
	0xa56b2d: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56b33: and dword ptr [ebx], 0x296e5e56
	0xa56b39: mov edi, ebp
	0xa56b3b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56b41: sub dword ptr [edi], 0x3c00f955
	0xa56b47: mov edx, ebp
	0xa56b49: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56b4f: mov ebx, dword ptr [edx]
	0xa56b51: xor ebx, 0x7ee8400e
	0xa56b57: mov edi, ebp
	0xa56b59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56b5f: or dword ptr [edi], ebx
	0xa56b61: mov edx, ebp
	0xa56b63: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa56b69: mov esi, dword ptr [edx]
	0xa56b6b: xor esi, 0x9af695a
	0xa56b71: xor esi, 0x1bca629a
	0xa56b79: mov edi, ebp
	0xa56b7b: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa56b81: mov dword ptr [edi], esi
	0xa56b93: mov ebx, ebp
	0xa56b95: add ebx, 0x49
Load [EBP+0x49](STATIC)
	0xa56bac: mov edx, dword ptr [ebx]
	0xa56bb2: xor edx, 0x1348fdb8
	0xa56bbc: sub edx, 0x1bca629a
	0xa56bc4: mov ebx, ebp
	0xa56bd5: add ebx, 0x49
Store [EBP+0x49](STATIC)
	0xa56be8: mov dword ptr [ebx], edx
	0xa56c2c: mov eax, ebp
	0xa56c2e: mov ebx, ebp
	0xa56c30: add eax, 0x79
	0xa56c35: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56c3b: mov esi, dword ptr [ebx]
	0xa56c3d: xor esi, 0x22fa6a93
Load [EBP+0x79](STATIC)
	0xa56c43: mov ecx, dword ptr [eax]
	0xa56c45: xor ecx, 0x1bca629a
	0xa56c4b: mov edi, ebp
	0xa56c4d: mov edx, ebp
	0xa56c4f: add edx, 0xa
	0xa56c55: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa56c5b: mov dword ptr [edi], ecx
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56c5d: and dword ptr [edx], esi
	0xa56c5f: add edx, esi
	0xa56c61: pushfd
	0xa56c6c: mov edx, ebp
	0xa56c70: add edx, 0x2d
	0xa56c76: mov ecx, ebp
Load [EBP+0x2d](STATIC)
	0xa56c78: mov ebx, dword ptr [edx]
	0xa56c7a: pop esi
	0xa56c86: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa56c8c: mov ecx, dword ptr [ecx]
	0xa56c8e: add ecx, 2
	0xa56c98: movzx ecx, byte ptr [ecx]
	0xa56cb7: sub ebx, 0x2b28b3ec
	0xa56cbd: cmp ecx, 0
	0xa56cc3: je 0xa56d20
	0xa56d2d: mov edi, ebp
	0xa56d35: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa56d3b: mov dword ptr [edi], ebx
	0xa56d4d: mov edi, ebp
	0xa56d4f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56d55: sub dword ptr [edi], 0x491a54e2
	0xa56d63: mov edx, ebp
	0xa56d67: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa56d79: mov edx, dword ptr [edx]
	0xa56d82: mov eax, ebp
	0xa56d88: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa56d8d: mov eax, dword ptr [eax]
	0xa56d9a: add eax, 3
	0xa56d9f: movzx eax, word ptr [eax]
	0xa56daa: mov esi, ebp
	0xa56dac: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa56dbe: sub eax, dword ptr [esi]
	0xa56dc8: xor eax, 0x28ae1956
	0xa56ddc: mov esi, ebp
	0xa56de8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56df2: sub dword ptr [esi], eax
	0xa56df4: and eax, 0xffff
	0xa56e0a: add edx, eax
	0xa56e0c: mov edi, dword ptr [edx]
	0xa56e0e: mov esi, ebp
	0xa56e10: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61905
	0xa56e16: add dword ptr [esi], 5
	0xa56e1c: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa75126: mov edx, ebp
	0xa75128: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75136: mov esi, dword ptr [edx]
	0xa75138: and esi, 2
	0xa7513e: cmp esi, 0
	0xa75144: je 0xa75166
	0xa7514a: mov edx, ebp
	0xa7514c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa75152: add dword ptr [edx], 0x49538c48
	0xa75158: mov edx, ebp
	0xa7515a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa75160: or dword ptr [edx], 0x5f19f5a7
	0xa75166: mov edi, ebp
	0xa75168: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7516e: mov edx, dword ptr [edi]
	0xa75170: mov esi, ebp
	0xa75172: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75178: sub dword ptr [esi], edx
	0xa75193: mov eax, ebp
	0xa75195: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7519a: xor dword ptr [eax], 0x3a78198c
	0xa751a0: mov ecx, ebp
	0xa751a2: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa751a8: add dword ptr [ecx], 0x4d83d8f2
	0xa751ae: mov edx, ebp
	0xa751b0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa751b6: mov esi, dword ptr [edx]
	0xa751b8: mov edx, ebp
	0xa751ba: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa751c0: sub dword ptr [edx], esi
	0xa751d8: mov edx, ebp
	0xa751da: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa751e0: mov ebx, dword ptr [edx]
	0xa751e2: or ebx, 0x2fef814
	0xa751e8: mov edx, ebp
	0xa751ea: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa751f0: and dword ptr [edx], ebx
	0xa751f2: mov edi, ebp
	0xa751f4: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa751fa: sub dword ptr [edi], 0x66fe6e1a
	0xa75200: mov ebx, ebp
	0xa75202: add ebx, 0xef
	0xa75208: mov ecx, ebp
	0xa7520a: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa75210: mov edi, dword ptr [ecx]
Load [EBP+0xef](STATIC)
	0xa75212: mov edx, dword ptr [ebx]
	0xa75214: and edi, 0x595eb9
	0xa7521a: cmp bl, 0
	0xa7521d: je 0xa7522e
	0xa75223: add edx, 0x2dcb67e4
	0xa75230: mov ebx, ebp
	0xa75232: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa75238: add dword ptr [ebx], edi
	0xa7523a: mov ebx, ebp
	0xa7523c: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75242: mov eax, dword ptr [ebx]
	0xa75244: and eax, 2
	0xa75249: cmp eax, 0
	0xa7524e: je 0xa75270
	0xa75289: cmp dl, 0
	0xa7528c: je 0xa7529d
	0xa752af: mov esi, ebp
	0xa752b1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa752b7: mov eax, dword ptr [esi]
	0xa752b9: and eax, 2
	0xa752be: cmp eax, 0
	0xa752c3: je 0xa752df
	0xa752e9: mov ecx, ebp
	0xa752eb: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa752f1: mov ebx, dword ptr [ecx]
	0xa752f3: or ebx, 0x97b6062
	0xa752f9: mov edi, ebp
	0xa752fb: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa75301: or dword ptr [edi], ebx
	0xa75303: mov ecx, ebp
	0xa75305: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7530b: mov edi, dword ptr [ecx]
	0xa7530d: mov ebx, ebp
	0xa7530f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75315: xor dword ptr [ebx], edi
	0xa75317: mov ebx, ebp
	0xa75319: mov esi, ebp
	0xa7531b: add ebx, 0x2d
	0xa75321: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75327: xor dword ptr [esi], 0x7ff464ab
Load [EBP+0x2d](STATIC)
	0xa7532d: mov ecx, dword ptr [ebx]
	0xa7532f: add ecx, 0x2b28b3ec
	0xa75335: mov esi, ebp
	0xa75337: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa7533d: mov ebx, dword ptr [esi]
	0xa7533f: xor ebx, 0x2b28b3ec
	0xa75345: mov esi, ebp
	0xa75347: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa7534d: mov al, byte ptr [esi]
	0xa7534f: cmp al, 0x1f
	0xa75351: jne 0xa75359
	0xa75359: cmp al, 0x52
	0xa7535b: jne 0xa75364
	0xa75364: cmp al, 0x81
	0xa75366: jne 0xa7536e
	0xa7536c: mov dword ptr [ebx], ecx
	0xa7536e: cmp al, 2
	0xa75370: jne 0xa75378
	0xa75382: cmp cl, 0
	0xa75385: je 0xa75396
	0xa753a6: mov ebx, ebp
	0xa753a8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa753b4: mov ebx, dword ptr [ebx]
	0xa753b6: mov eax, ebp
	0xa753bc: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa753c9: mov eax, dword ptr [eax]
	0xa753d1: add eax, 0
	0xa753d8: movzx eax, word ptr [eax]
	0xa753e1: mov ecx, ebp
	0xa753e9: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa753ef: add eax, dword ptr [ecx]
	0xa753f9: sub eax, 0x7a2c85b6
	0xa7540c: mov ecx, ebp
	0xa75412: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75418: or dword ptr [ecx], eax
	0xa75422: and eax, 0xffff
	0xa75427: add ebx, eax
	0xa7542b: mov edi, dword ptr [ebx]
	0xa75433: mov ecx, ebp
	0xa75437: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61907
	0xa7543d: add dword ptr [ecx], 2
	0xa75443: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58906: mov esi, ebp
	0xa58908: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5890e: xor dword ptr [esi], 0x4237f59a
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6190a
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



	0xa7a755: mov ecx, ebp
	0xa7a763: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a769: mov ecx, dword ptr [ecx]
	0xa7a76d: add ecx, 0
	0xa7a778: movzx ebx, word ptr [ecx]
	0xa7a79d: mov eax, ebp
	0xa7a7b0: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a7be: sub ebx, dword ptr [eax]
	0xa7a7c2: mov eax, ebp
	0xa7a7cf: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a7d4: or dword ptr [eax], ebx
	0xa7a801: and ebx, 0xffff
	0xa7a807: add ebx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa7a81b: mov ebx, dword ptr [ebx]
	0xa7a823: xor ebx, 0x9af695a
	0xa7a832: mov edx, ebp
	0xa7a839: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa7a84f: mov dword ptr [edx], ebx
	0xa7a851: mov ebx, ebp
	0xa7a853: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a859: mov edi, dword ptr [ebx]
	0xa7a865: mov edx, ebp
	0xa7a867: add edx, 0xa
	0xa7a86d: and edi, 2
	0xa7a873: cmp edi, 0
	0xa7a879: je 0xa7a895
	0xa7a899: mov edi, ebp
	0xa7a8a0: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8a6: mov ebx, dword ptr [edi]
	0xa7a8a8: and ebx, 2
	0xa7a8ae: cmp ebx, 0
	0xa7a8b4: je 0xa7a8d6
	0xa7a8d8: cmp dl, 0
	0xa7a8db: je 0xa7a8ec
	0xa7a8f7: mov edx, ebp
	0xa7a8f9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8ff: mov ecx, dword ptr [edx]
	0xa7a901: and ecx, 2
	0xa7a907: cmp ecx, 0
	0xa7a90d: je 0xa7a92f
	0xa7a92f: mov esi, ebp
	0xa7a931: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a937: mov ecx, dword ptr [esi]
	0xa7a939: and ecx, 0x5db1956c
	0xa7a93f: mov eax, ebp
	0xa7a941: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a946: xor dword ptr [eax], ecx
	0xa7a948: mov esi, ebp
	0xa7a95a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a960: mov eax, dword ptr [esi]
	0xa7a962: and eax, 2
	0xa7a967: cmp eax, 0
	0xa7a96c: je 0xa7a98e
	0xa7a98e: mov ecx, ebp
	0xa7a998: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa7a99e: mov edx, dword ptr [ecx]
	0xa7a9a2: cmp dl, 0
	0xa7a9a5: je 0xa7a9b5
	0xa7a9b7: mov eax, ebp
	0xa7a9b9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a9be: add dword ptr [eax], 0x27628d33
	0xa7a9d4: mov eax, ebp
	0xa7a9dc: mov ecx, ebp
	0xa7a9e8: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7a9ef: mov eax, dword ptr [eax]
	0xa7a9f1: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7aa05: mov ecx, dword ptr [ecx]
	0xa7aa16: add ecx, 2
	0xa7aa1e: movzx ecx, word ptr [ecx]
	0xa7aa27: mov edx, ebp
	0xa7aa31: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa7aa39: sub ecx, dword ptr [edx]
	0xa7aa3d: xor ecx, 0x4ca6cd36
	0xa7aa51: mov edx, ebp
	0xa7aa61: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7aa6d: sub dword ptr [edx], ecx
	0xa7aa77: and ecx, 0xffff
	0xa7aa88: add eax, ecx
	0xa7aa8c: mov ecx, dword ptr [eax]
	0xa7aa96: mov edx, ebp
	0xa7aaa6: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6190e
	0xa7aaac: add dword ptr [edx], 4
	0xa7aab2: jmp ecx
handlers outputs:



	0xa73f2b: cmp cl, 0
	0xa73f2e: je 0xa73f3f
	0xa73f41: mov edx, ebp
	0xa73f43: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73f49: or dword ptr [edx], 0x466e33c6
	0xa73f4f: mov ecx, ebp
	0xa73f51: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73f57: mov eax, dword ptr [ecx]
	0xa73f5f: mov ecx, ebp
	0xa73f6d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73f73: sub dword ptr [ecx], eax
	0xa73f82: mov edx, ebp
	0xa73f8d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa73f93: mov edx, dword ptr [edx]
	0xa73f95: add edx, 0
	0xa73f9b: movzx edi, word ptr [edx]
	0xa73fa5: add edi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa73fab: mov esp, dword ptr [edi]
	0xa73fad: mov eax, ebp
	0xa73faf: add eax, 0xe5
	0xa73fb4: mov ebx, ebp
	0xa73fb6: add ebx, 0xef
	0xa73fbe: cmp bl, 0
	0xa73fc1: je 0xa73fd2
Load [EBP+0xe5](STATIC)
	0xa73fd4: mov ecx, dword ptr [eax]
	0xa73fd6: and ecx, 2
	0xa73fdc: cmp ecx, 0
	0xa73fe2: je 0xa74002
	0xa73fe8: mov eax, ebp
	0xa73fea: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73fef: add dword ptr [eax], 0x583b7db1
	0xa73ff5: mov eax, ebp
	0xa73ff7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73ffc: add dword ptr [eax], 0x18a971b2
	0xa7400e: mov ebx, ebp
	0xa74018: add ebx, 0xb8
	0xa74029: mov eax, ebp
	0xa74031: add eax, 0x95
Load [EBP+0xb8](STATIC)
	0xa7403d: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa7404b: mov eax, dword ptr [eax]
	0xa7404f: add eax, 2
	0xa7405b: movzx eax, word ptr [eax]
	0xa74068: mov edx, ebp
	0xa74070: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa74080: add eax, dword ptr [edx]
	0xa7408a: xor eax, 0x488bb361
	0xa74091: mov edx, ebp
	0xa740a0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa740b6: xor dword ptr [edx], eax
	0xa740c6: and eax, 0xffff
	0xa740d7: add ebx, eax
	0xa740e5: mov edx, dword ptr [ebx]
	0xa740fa: mov esi, ebp
	0xa74100: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61912
	0xa74106: add dword ptr [esi], 4
	0xa7410c: jmp edx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa57e8a: cmp dl, 0
	0xa57e8d: je 0xa57e9e
	0xa57ea0: mov edi, ebp
	0xa57ea2: mov eax, ebp
	0xa57ea4: add eax, 0xef
	0xa57eab: cmp al, 0
	0xa57ead: je 0xa57ebe
	0xa57ec0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ec6: and dword ptr [edi], 0x3559bbe0
	0xa57ecc: mov esi, ebp
	0xa57ece: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ed4: xor dword ptr [esi], 0x7ea468e7
	0xa57eda: mov ecx, ebp
	0xa57edc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57ee2: mov ebx, dword ptr [ecx]
	0xa57ee4: mov edi, ebp
	0xa57ee6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57eec: xor dword ptr [edi], ebx
	0xa57eee: mov esi, ebp
	0xa57ef0: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa57ef6: mov ebx, dword ptr [esi]
	0xa57ef8: mov edx, ebp
	0xa57efa: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f00: add dword ptr [edx], ebx
	0xa57f02: mov edx, ebp
	0xa57f04: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f0a: and dword ptr [edx], 0x5a367804
	0xa57f10: mov esi, ebp
	0xa57f12: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57f18: sub dword ptr [esi], 0x43f36859
	0xa57f29: mov edx, ebp
	0xa57f35: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa57f44: mov edx, dword ptr [edx]
	0xa57f48: add edx, 2
	0xa57f62: movzx ecx, word ptr [edx]
	0xa57f65: mov edx, ebp
	0xa57f7c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa57f8d: xor ecx, dword ptr [edx]
	0xa57f98: mov eax, ebp
	0xa57fac: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57fb3: xor ecx, dword ptr [eax]
	0xa57fb5: mov eax, ebp
	0xa57fb7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57fbc: xor dword ptr [eax], ecx
	0xa57fc8: mov eax, ebp
	0xa57fce: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57fdd: sub dword ptr [eax], 0x50096f31
	0xa57ff7: and ecx, 0xffff
	0xa58003: add ecx, ebp
	0xa5800e: xor ecx, 0x2b28b3ec
	0xa58016: mov ebx, ebp
	0xa58022: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa58030: mov dword ptr [ebx], ecx
	0xa5803b: mov ecx, ebp
	0xa5803d: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58043: mov ebx, dword ptr [ecx]
	0xa58045: or ebx, 0x62a21e52
	0xa5804b: mov esi, ebp
	0xa5804d: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58053: sub dword ptr [esi], ebx
	0xa58055: mov ecx, ebp
	0xa58057: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5805d: or dword ptr [ecx], 0x37afd558
	0xa58070: mov edx, ebp
	0xa58074: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5807c: mov eax, dword ptr [edx]
	0xa5807e: or eax, 0x61ddb8d8
	0xa58083: mov ecx, ebp
	0xa58085: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5808b: sub dword ptr [ecx], eax
	0xa5808d: mov esi, ebp
	0xa5808f: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58095: xor dword ptr [esi], 0x6c8e45f3
	0xa580af: mov ecx, ebp
	0xa580b1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa580b7: and dword ptr [ecx], 0x23762a96
	0xa580cf: mov ecx, ebp
	0xa580d1: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa580d7: mov edi, dword ptr [ecx]
	0xa580d9: and edi, 2
	0xa580df: cmp edi, 0
	0xa580e5: je 0xa58107
	0xa580eb: mov ecx, ebp
	0xa580ed: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa580f3: sub dword ptr [ecx], 0x2af0923d
	0xa580f9: mov ecx, ebp
	0xa580fb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58101: sub dword ptr [ecx], 0x3d654a0e
	0xa58114: mov ecx, ebp
	0xa58116: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa58120: mov ecx, dword ptr [ecx]
	0xa5812a: mov edx, ebp
	0xa5813e: add edx, 0xb8
	0xa58144: add ecx, 0
	0xa5814c: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa58153: mov edx, dword ptr [edx]
	0xa5815c: mov ebx, ebp
	0xa58168: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa58172: xor ecx, dword ptr [ebx]
	0xa58174: xor ecx, 0x14fc0902
	0xa58185: mov ebx, ebp
	0xa58187: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58191: or dword ptr [ebx], ecx
	0xa581a6: and ecx, 0xffff
	0xa581b2: add edx, ecx
	0xa581c8: mov ebx, dword ptr [edx]
	0xa581ce: mov esi, ebp
	0xa581db: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61916
	0xa581e1: add dword ptr [esi], 4
	0xa581e7: jmp ebx
handlers outputs:



	0xa61e5e: cmp al, 0
	0xa61e60: je 0xa61e71
	0xa61e8f: cmp al, 0
	0xa61e91: je 0xa61ea2
	0xa61ead: mov ecx, ebp
	0xa61eaf: add ecx, 0xa
	0xa61ecc: cmp cl, 0
	0xa61ecf: je 0xa61ee0
	0xa61ee2: mov eax, ebp
	0xa61ee4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61ee9: and dword ptr [eax], 0x4dd027b3
	0xa61f02: mov edi, ebp
	0xa61f04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61f0a: sub dword ptr [edi], 0x47fe636e
	0xa61f23: mov edx, ebp
	0xa61f2b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa61f37: mov edx, dword ptr [edx]
	0xa61f3b: add edx, 2
	0xa61f43: movzx ebx, word ptr [edx]
	0xa61f4a: mov edx, ebp
	0xa61f57: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa61f5d: sub ebx, dword ptr [edx]
	0xa61f81: mov eax, ebp
	0xa61f97: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61fa4: xor dword ptr [eax], ebx
	0xa61fcb: and ebx, 0xffff
	0xa61fd3: add ebx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa61fdb: mov ebx, dword ptr [ebx]
	0xa61ff4: xor ebx, 0x1348fdb8
	0xa6200e: mov ecx, ebp
	0xa62017: add ecx, 0x49
Store [EBP+0x49](STATIC)
	0xa62027: mov dword ptr [ecx], ebx
	0xa6203f: mov eax, ebp
	0xa62041: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62046: xor dword ptr [eax], 0x18e309a9
	0xa6204c: mov eax, ebp
	0xa6204e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62053: mov esi, dword ptr [eax]
	0xa62055: and esi, 2
	0xa6205b: cmp esi, 0
	0xa62061: je 0xa62081
	0xa62067: mov eax, ebp
	0xa62069: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6206e: add dword ptr [eax], 0x563e158e
	0xa62074: mov eax, ebp
	0xa62076: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6207b: and dword ptr [eax], 0x3a737588
	0xa62081: mov edi, ebp
	0xa62085: mov ecx, ebp
	0xa6208d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa62099: mov ecx, dword ptr [ecx]
	0xa6209f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa620ad: mov edi, dword ptr [edi]
	0xa620b3: add ecx, 0
	0xa620c1: movzx ecx, word ptr [ecx]
	0xa620cc: mov eax, ebp
	0xa620de: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa620e9: sub ecx, dword ptr [eax]
	0xa62104: mov eax, ebp
	0xa62106: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6211b: sub dword ptr [eax], ecx
	0xa6211d: and ecx, 0xffff
	0xa62129: add edi, ecx
	0xa62132: mov eax, dword ptr [edi]
	0xa62134: mov edi, ebp
	0xa6213a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6191a
	0xa62140: add dword ptr [edi], 4
	0xa62146: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa67c5d: mov esi, ebp
	0xa67c5f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67c65: or dword ptr [esi], 0x1209c6de
	0xa67c75: mov edx, ebp
	0xa67c77: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67c7d: add dword ptr [edx], 0x4cde0b51
	0xa67cb3: mov esi, ebp
	0xa67cbf: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa67cd6: mov edx, dword ptr [esi]
	0xa67cd8: xor edx, 0x1348fdb8
	0xa67ce0: xor edx, 0x1cba9ec6
	0xa67cf0: mov eax, ebp
	0xa67d02: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa67d10: mov dword ptr [eax], edx
	0xa67d28: mov esi, ebp
	0xa67d2a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67d38: xor dword ptr [esi], 0x3013d136
	0xa67d40: mov esi, ebp
	0xa67d42: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa67d48: mov ecx, dword ptr [esi]
	0xa67d52: and ecx, 0x10c36073
	0xa67d58: mov edx, ebp
	0xa67d5a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67d60: sub dword ptr [edx], ecx
	0xa67d62: mov esi, ebp
	0xa67d64: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67d6a: add dword ptr [esi], 0x5b7dd034
	0xa67d78: mov eax, ebp
	0xa67d8a: add eax, 0x79
	0xa67da5: mov ebx, ebp
	0xa67dad: add ebx, 0xa
Load [EBP+0x79](STATIC)
	0xa67dc5: mov edx, dword ptr [eax]
	0xa67dd1: xor edx, 0x9af695a
	0xa67ddb: sub edx, 0x1cba9ec6
	0xa67ded: mov eax, ebp
	0xa67df5: add eax, 0x79
Store [EBP+0x79](STATIC)
	0xa67dff: mov dword ptr [eax], edx
	0xa67e01: mov edi, ebp
	0xa67e03: add edi, 0xef
	0xa67e09: mov edx, ebp
Load [EBP+0xef](STATIC)
	0xa67e0b: mov esi, dword ptr [edi]
	0xa67e0d: cmp bl, 0
	0xa67e10: je 0xa67e21
	0xa67e16: xor esi, 0x6c55d9c0
	0xa67e23: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67e29: mov edi, dword ptr [edx]
	0xa67e2b: and edi, 2
	0xa67e31: cmp edi, 0
	0xa67e37: je 0xa67e59
	0xa67e3d: mov edx, ebp
	0xa67e3f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67e45: sub dword ptr [edx], 0x297b8451
	0xa67e4b: mov edx, ebp
	0xa67e4d: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67e53: xor dword ptr [edx], 0x45891f21
	0xa67e5b: mov edx, ebp
	0xa67e65: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa67e6b: mov eax, dword ptr [edx]
	0xa67e6d: add eax, 0x1cba9ec6
	0xa67e72: mov edi, ebp
	0xa67e74: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa67e7a: mov dword ptr [edi], eax
	0xa67e7c: add edi, esi
	0xa67e7e: pushfd
	0xa67e81: mov edx, ebp
	0xa67e89: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa67e8f: mov edx, dword ptr [edx]
	0xa67e9b: pop ecx
	0xa67e9c: add edx, 2
	0xa67ea2: movzx edx, byte ptr [edx]
	0xa67ea5: cmp edx, 0
	0xa67eab: je 0xa67ecd
	0xa67ecf: mov edi, ebp
	0xa67ed1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67ed7: mov edx, dword ptr [edi]
	0xa67ed9: mov eax, ebp
	0xa67edb: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67ee0: add dword ptr [eax], edx
	0xa67ee2: mov ecx, ebp
	0xa67ee4: mov edi, ebp
	0xa67ee6: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa67eec: mov ebx, dword ptr [edi]
	0xa67eee: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67ef4: mov eax, dword ptr [ecx]
	0xa67ef6: and eax, 2
	0xa67efb: cmp eax, 0
	0xa67f00: je 0xa67f22
	0xa67f22: sub ebx, 0x2b28b3ec
	0xa67f28: mov ecx, ebp
	0xa67f2a: add ecx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa67f30: mov dword ptr [ecx], ebx
	0xa67f32: mov ebx, ebp
	0xa67f34: add ebx, 0xef
	0xa67f3c: cmp bl, 0
	0xa67f3f: je 0xa67f50
	0xa67f5d: mov ebx, ebp
	0xa67f6a: mov ecx, ebp
	0xa67f71: add ebx, 0x95
	0xa67f7c: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa67f82: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa67f86: mov ebx, dword ptr [ebx]
	0xa67f97: add ebx, 3
	0xa67faa: movzx ebx, word ptr [ebx]
	0xa67fb1: mov edi, ebp
	0xa67fc3: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa67fd9: add ebx, dword ptr [edi]
	0xa67fe3: mov edi, ebp
	0xa67fe5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67feb: or dword ptr [edi], ebx
	0xa67fed: and ebx, 0xffff
	0xa67ff3: add ecx, ebx
	0xa67ff7: mov esi, dword ptr [ecx]
	0xa68004: mov edi, ebp
	0xa68014: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6191f
	0xa6801a: add dword ptr [edi], 5
	0xa68020: jmp esi
handlers outputs:



	0xa4ff6f: mov edi, ebp
	0xa4ff7b: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ff81: mov al, byte ptr [edi]
	0xa4ff83: cmp al, 0
	0xa4ff85: je 0xa4ff96
	0xa4ffa8: mov edx, ebp
	0xa4ffb8: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa4ffc2: mov ebx, dword ptr [edx]
	0xa4ffd2: add ebx, 0x2b28b3ec
	0xa4ffe0: mov esi, ebp
	0xa4ffe2: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4fff5: mov ecx, dword ptr [esi]
	0xa5000b: xor ecx, 0x2b28b3ec
	0xa5001c: mov esi, ebp
	0xa50020: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5002c: mov al, byte ptr [esi]
	0xa5002e: cmp al, 0x1f
	0xa50030: jne 0xa50041
	0xa50041: cmp al, 0x52
	0xa50043: jne 0xa50058
	0xa50058: cmp al, 0x81
	0xa5005a: jne 0xa50089
	0xa50068: mov dword ptr [ecx], ebx
	0xa50089: cmp al, 2
	0xa5008b: jne 0xa5009b
	0xa500c9: mov eax, ebp
	0xa500cb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa500d0: mov esi, dword ptr [eax]
	0xa500d4: and esi, 2
	0xa500da: cmp esi, 0
	0xa500e0: je 0xa500fa
	0xa500fa: mov esi, ebp
	0xa500fc: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5010c: mov edi, dword ptr [esi]
	0xa5010e: and edi, 2
	0xa50120: cmp edi, 0
	0xa50126: je 0xa50148
	0xa50159: mov esi, ebp
	0xa5015b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50161: mov eax, dword ptr [esi]
	0xa50163: mov ecx, ebp
	0xa5016d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50175: xor dword ptr [ecx], eax
	0xa50191: mov esi, ebp
	0xa50193: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50199: mov ecx, dword ptr [esi]
	0xa5019b: and ecx, 2
	0xa501a1: cmp ecx, 0
	0xa501a7: je 0xa501c9
	0xa501c9: mov ecx, ebp
	0xa501cb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa501d1: mov edx, dword ptr [ecx]
	0xa501d3: and edx, 2
	0xa501d9: cmp edx, 0
	0xa501df: je 0xa50201
	0xa50215: cmp al, 0
	0xa50217: je 0xa50228
	0xa5022a: mov edi, ebp
	0xa5022e: mov eax, ebp
	0xa50236: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5023b: mov eax, dword ptr [eax]
	0xa50246: add eax, 0
	0xa5024d: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5025d: mov edi, dword ptr [edi]
	0xa5026b: movzx eax, word ptr [eax]
	0xa5026e: mov ebx, ebp
	0xa5027d: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5028e: add eax, dword ptr [ebx]
	0xa50292: mov ebx, ebp
	0xa50294: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa502aa: or dword ptr [ebx], eax
	0xa502ac: and eax, 0xffff
	0xa502b9: add edi, eax
	0xa502c4: mov eax, dword ptr [edi]
	0xa502cc: mov esi, ebp
	0xa502d0: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61921
	0xa502d6: add dword ptr [esi], 2
	0xa502dc: jmp eax
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61925
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa56574: mov esi, ebp
	0xa56576: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa56593: mov esi, dword ptr [esi]
	0xa5659f: add esi, 2
	0xa565c3: movzx ecx, byte ptr [esi]
	0xa565e9: mov eax, ebp
	0xa565ef: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa565fe: sub ecx, dword ptr [eax]
	0xa5660c: mov ebx, ebp
	0xa56615: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56624: add ecx, dword ptr [ebx]
	0xa5665f: mov ebx, ebp
	0xa5666b: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56675: or dword ptr [ebx], 0x7ec4eb23
	0xa5667d: mov ebx, ebp
	0xa5667f: add ebx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa56690: mov byte ptr [ebx], cl
	0xa56692: mov ebx, ebp
	0xa56694: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa566a0: mov edi, dword ptr [ebx]
	0xa566ad: mov esi, ebp
	0xa566af: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566b5: and dword ptr [esi], edi
	0xa566b7: mov eax, ebp
	0xa566b9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566be: xor dword ptr [eax], 0x73e12ce0
	0xa566ce: mov edx, ebp
	0xa566d0: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa566d6: mov eax, dword ptr [edx]
	0xa566d8: xor eax, 0x17a2fbf2
	0xa566dd: mov esi, ebp
	0xa566df: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566e5: xor dword ptr [esi], eax
	0xa566e7: mov edx, ebp
	0xa566e9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566ef: xor dword ptr [edx], 0x599a8aa5
	0xa566f5: mov eax, ebp
	0xa566f7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa566fc: mov ebx, dword ptr [eax]
	0xa566fe: mov edi, ebp
	0xa56700: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56706: and dword ptr [edi], ebx
	0xa56719: mov edi, ebp
	0xa5671b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56721: sub dword ptr [edi], 0x31011cc8
	0xa56739: mov eax, ebp
	0xa5673b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56740: xor dword ptr [eax], 0x554a5ab3
	0xa56746: mov ecx, ebp
	0xa56748: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5674e: mov eax, dword ptr [ecx]
	0xa56750: xor eax, 0x1fbc7a4b
	0xa56755: mov ecx, ebp
	0xa56757: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5675d: xor dword ptr [ecx], eax
	0xa5675f: mov ebx, ebp
	0xa56761: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56767: xor dword ptr [ebx], 0x25ab6016
	0xa5676f: mov ecx, ebp
	0xa56779: add ecx, 0xa
	0xa5677f: cmp cl, 0
	0xa56782: je 0xa56792
	0xa5679e: mov edi, ebp
	0xa567a0: add edi, 0xb8
	0xa567b8: mov ecx, ebp
	0xa567c4: add ecx, 0x95
Load [EBP+0xb8](STATIC)
	0xa567d5: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa567d7: mov ecx, dword ptr [ecx]
	0xa567e2: add ecx, 0
	0xa567fb: movzx ecx, word ptr [ecx]
	0xa5682a: mov ebx, ebp
	0xa5683b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5684d: sub dword ptr [ebx], ecx
	0xa5685c: and ecx, 0xffff
	0xa5686d: add edi, ecx
	0xa56871: mov ebx, dword ptr [edi]
	0xa56873: mov ecx, ebp
	0xa56880: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61928
	0xa56886: add dword ptr [ecx], 3
	0xa5688c: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa65f8c: mov ebx, ebp
	0xa65f96: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa65f9e: mov eax, dword ptr [ebx]
	0xa65fa0: and eax, 2
	0xa65fa5: cmp eax, 0
	0xa65faa: je 0xa65fc6
	0xa65fc6: cmp al, 0
	0xa65fc8: je 0xa65fd9
	0xa65fdb: mov ecx, ebp
	0xa65fdd: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa65fe3: mov eax, dword ptr [ecx]
	0xa65fe5: mov ebx, ebp
	0xa65fe7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa65fed: and dword ptr [ebx], eax
	0xa65ff4: mov edx, ebp
	0xa65ff6: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa65ffc: or dword ptr [edx], 0x41f080aa
	0xa66002: mov edx, ebp
	0xa66004: add edx, 0x2d
	0xa66010: mov esi, ebp
	0xa66012: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6601e: mov esi, dword ptr [esi]
	0xa66020: add esi, 0
	0xa66026: mov eax, dword ptr [esi]
	0xa6602c: cmp dl, 0
	0xa6602f: je 0xa66040
	0xa66048: mov edi, ebp
	0xa6604a: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa66050: sub eax, dword ptr [edi]
	0xa66052: mov edi, ebp
	0xa66054: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6605a: add dword ptr [edi], eax
	0xa6605c: mov edi, ebp
	0xa6605e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa66064: or dword ptr [edi], 0x9c0e3b2
	0xa6606a: xor eax, 0x9af695a
	0xa6606f: mov ebx, ebp
	0xa66071: add ebx, 0x79
Store [EBP+0x79](STATIC)
	0xa66077: mov dword ptr [ebx], eax
	0xa6609e: mov ebx, ebp
	0xa660a0: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa660a6: mov edx, dword ptr [ebx]
	0xa660a8: and edx, 2
	0xa660ae: cmp edx, 0
	0xa660b4: je 0xa660d6
	0xa660ba: mov ebx, ebp
	0xa660bc: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa660c2: and dword ptr [ebx], 0x5465c14f
	0xa660c8: mov ebx, ebp
	0xa660ca: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa660d0: xor dword ptr [ebx], 0x36685ca7
	0xa660d6: mov eax, ebp
	0xa660d8: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa660dd: mov edi, dword ptr [eax]
	0xa660df: and edi, 2
	0xa660e5: cmp edi, 0
	0xa660eb: je 0xa6610b
	0xa6610d: mov edx, ebp
	0xa6610f: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa66115: mov edi, dword ptr [edx]
	0xa6611f: cmp al, 0
	0xa66121: je 0xa66132
	0xa66134: xor edi, 0x731f6693
	0xa6613a: mov esi, ebp
	0xa6613c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa66142: add dword ptr [esi], edi
	0xa6614a: mov ebx, ebp
	0xa6614e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa66154: mov ecx, dword ptr [ebx]
	0xa6615c: mov ebx, ebp
	0xa66160: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa66168: or dword ptr [ebx], ecx
	0xa66170: mov edi, ebp
	0xa66177: add edi, 0xb8
	0xa66183: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa6618b: mov edi, dword ptr [edi]
	0xa66194: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa661ab: mov edx, dword ptr [edx]
	0xa661b5: add edx, 4
	0xa661c9: movzx edx, word ptr [edx]
	0xa661d2: mov ebx, ebp
	0xa661d4: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa661de: xor edx, dword ptr [ebx]
	0xa661e0: mov ebx, ebp
	0xa661ea: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa661f6: or dword ptr [ebx], edx
	0xa66200: and edx, 0xffff
	0xa66206: add edi, edx
	0xa6620e: mov esi, dword ptr [edi]
	0xa66217: mov edi, ebp
	0xa6621b: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6192e
	0xa66221: add dword ptr [edi], 6
	0xa66227: jmp esi
handlers outputs:



	0xa7c633: mov ecx, ebp
	0xa7c635: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c63b: mov ebx, dword ptr [ecx]
	0xa7c646: and ebx, 2
	0xa7c654: cmp ebx, 0
	0xa7c65a: je 0xa7c67c
	0xa7c680: mov esi, ebp
	0xa7c682: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c688: mov edi, dword ptr [esi]
	0xa7c68a: or edi, 0x585dd1e3
	0xa7c690: mov ecx, ebp
	0xa7c692: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c698: add dword ptr [ecx], edi
	0xa7c6a8: mov edx, ebp
	0xa7c6ac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c6b8: mov eax, dword ptr [edx]
	0xa7c6ba: add eax, 0x6efcee4e
	0xa7c6bf: mov ecx, ebp
	0xa7c6c1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c6c9: sub dword ptr [ecx], eax
	0xa7c6d5: mov ebx, ebp
	0xa7c6e7: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c6fb: mov ebx, dword ptr [ebx]
	0xa7c6fd: add ebx, 0
	0xa7c709: movzx eax, word ptr [ebx]
	0xa7c729: mov edx, ebp
	0xa7c72f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c735: add eax, dword ptr [edx]
	0xa7c74c: mov ebx, ebp
	0xa7c754: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c766: add dword ptr [ebx], eax
	0xa7c792: and eax, 0xffff
	0xa7c7a0: add eax, ebp
	0xa7c7a4: xor eax, 0x2b28b3ec
	0xa7c7bb: mov edi, ebp
	0xa7c7cd: add edi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c7d3: mov dword ptr [edi], eax
	0xa7c7e7: mov esi, ebp
	0xa7c7e9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c7ef: mov edx, dword ptr [esi]
	0xa7c7f1: and edx, 2
	0xa7c7f7: cmp edx, 0
	0xa7c7fd: je 0xa7c81f
	0xa7c803: mov esi, ebp
	0xa7c805: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c80b: sub dword ptr [esi], 0x2ccb4ab9
	0xa7c811: mov esi, ebp
	0xa7c813: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c819: or dword ptr [esi], 0x7b50d24d
	0xa7c81f: mov edi, ebp
	0xa7c821: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c827: mov ecx, dword ptr [edi]
	0xa7c829: and ecx, 2
	0xa7c82f: cmp ecx, 0
	0xa7c835: je 0xa7c857
	0xa7c83b: mov edi, ebp
	0xa7c83d: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c843: or dword ptr [edi], 0x146c05c7
	0xa7c849: mov edi, ebp
	0xa7c84b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c851: add dword ptr [edi], 0x1ce889ec
	0xa7c857: mov edi, ebp
	0xa7c863: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c869: mov eax, dword ptr [edi]
	0xa7c86b: mov esi, ebp
	0xa7c86d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c873: add dword ptr [esi], eax
	0xa7c875: mov edi, ebp
	0xa7c877: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c87d: mov eax, dword ptr [edi]
	0xa7c87f: mov edx, ebp
	0xa7c881: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c887: or dword ptr [edx], 0x4c3e24ce
	0xa7c88d: and eax, 2
	0xa7c892: cmp eax, 0
	0xa7c897: je 0xa7c8b9
	0xa7c89d: mov edi, ebp
	0xa7c89f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8a5: sub dword ptr [edi], 0x7b88e838
	0xa7c8ab: mov edi, ebp
	0xa7c8ad: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8b3: or dword ptr [edi], 0x7c8307dc
	0xa7c8b9: mov esi, ebp
	0xa7c8bb: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8c1: sub dword ptr [esi], 0x472eb0b6
	0xa7c8c7: mov eax, ebp
	0xa7c8c9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c8ce: mov ecx, dword ptr [eax]
	0xa7c8d0: sub ecx, 0x322439ec
	0xa7c8d6: mov esi, ebp
	0xa7c8d8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8de: add dword ptr [esi], ecx
	0xa7c8eb: mov edi, ebp
	0xa7c8ed: mov ecx, ebp
	0xa7c8f6: add edi, 0xb8
	0xa7c908: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c910: mov ecx, dword ptr [ecx]
	0xa7c918: add ecx, 2
	0xa7c920: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa7c929: mov edi, dword ptr [edi]
	0xa7c92d: mov eax, ebp
	0xa7c92f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c936: xor ecx, dword ptr [eax]
	0xa7c95a: mov ebx, ebp
	0xa7c95c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c962: add dword ptr [ebx], ecx
	0xa7c977: and ecx, 0xffff
	0xa7c97f: add edi, ecx
	0xa7c985: mov ebx, dword ptr [edi]
	0xa7c987: mov edi, ebp
	0xa7c999: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61932
	0xa7c99f: add dword ptr [edi], 4
	0xa7c9a5: jmp ebx
handlers outputs:



	0xa80faf: mov esi, ebp
	0xa80fb1: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa80fbd: mov ebx, dword ptr [esi]
	0xa80fc3: add ebx, 0x27ea98b7
	0xa80fc9: mov eax, ebp
	0xa80fd3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80fd8: or dword ptr [eax], ebx
	0xa80fe4: mov eax, ebp
	0xa80fe6: add eax, 0x79
	0xa80feb: mov ebx, ebp
Load [EBP+0x79](STATIC)
	0xa80fed: mov edx, dword ptr [eax]
	0xa80fef: xor edx, 0x9af695a
	0xa80ff5: xor edx, 0x5e2b5da
	0xa80ffb: mov edi, ebp
	0xa80ffd: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa81003: mov dword ptr [edi], edx
	0xa81005: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa8100b: mov edx, dword ptr [ebx]
	0xa8100d: and edx, 2
	0xa81013: cmp edx, 0
	0xa81019: je 0xa81035
	0xa81027: mov ebx, ebp
	0xa81029: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8102f: add dword ptr [ebx], 0x4c02be50
	0xa81035: mov ecx, ebp
	0xa81037: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa8103d: mov eax, dword ptr [ecx]
	0xa8103f: xor eax, 0x1348fdb8
	0xa81044: sub eax, 0x5e2b5da
	0xa81049: mov edi, ebp
	0xa8104b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa81051: mov dword ptr [edi], eax
	0xa8105d: mov ebx, ebp
	0xa8105f: cmp dl, 0
	0xa81062: je 0xa81072
	0xa81074: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa8107a: and dword ptr [ebx], 0x28702690
	0xa81080: mov edx, ebp
	0xa81082: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa81088: sub dword ptr [edx], 0x7e320ca4
	0xa810ac: mov edi, ebp
	0xa810b6: mov eax, ebp
	0xa810bc: add eax, 0x49
	0xa810cf: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa810de: add dword ptr [edi], 0x69239b3
Load [EBP+0x49](STATIC)
	0xa810ec: mov ebx, dword ptr [eax]
	0xa810f3: add ebx, 0x5e2b5da
	0xa81105: mov eax, ebp
	0xa8110b: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa81110: mov ecx, dword ptr [eax]
	0xa8111f: xor ecx, 0x5e2b5da
	0xa8112f: mov eax, ebp
	0xa8113f: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa81148: mov dl, byte ptr [eax]
	0xa8114a: cmp dl, 0x1f
	0xa8114d: jne 0xa8115c
	0xa8115c: cmp dl, 0x52
	0xa8115f: jne 0xa81171
	0xa81171: cmp dl, 0x81
	0xa81174: jne 0xa81181
	0xa8117a: add ebx, ecx
	0xa8117c: pushfd
	0xa81183: add ebx, 0x5741247a
	0xa81197: mov eax, ebp
	0xa8119d: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa811a4: mov dword ptr [eax], ebx
	0xa811a8: pop esi
	0xa811af: mov eax, ebp
	0xa811c3: add eax, 0x2d
	0xa811d4: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa811e4: mov ecx, dword ptr [eax]
	0xa811f2: sub ecx, 0x5741247a
	0xa811fe: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa81204: mov edi, dword ptr [edi]
	0xa81216: sub ecx, 0x2b28b3ec
	0xa8122a: mov eax, ebp
	0xa81232: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa8123b: mov dword ptr [eax], ecx
	0xa81245: add edi, 2
	0xa8124b: movzx edi, byte ptr [edi]
	0xa8124e: cmp edi, 0
	0xa81254: je 0xa812cd
	0xa812cf: mov esi, ebp
	0xa812d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa812df: mov ebx, dword ptr [esi]
	0xa812e1: mov eax, ebp
	0xa812e3: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa812e8: add dword ptr [eax], ebx
	0xa812f2: mov esi, ebp
	0xa812f4: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa812fc: mov ecx, dword ptr [esi]
	0xa812fe: and ecx, 2
	0xa81304: cmp al, 0
	0xa81306: je 0xa81317
	0xa81319: cmp ecx, 0
	0xa8131f: je 0xa81341
	0xa81325: mov esi, ebp
	0xa81327: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8132d: and dword ptr [esi], 0x13e9f58a
	0xa81333: mov esi, ebp
	0xa81335: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8133b: xor dword ptr [esi], 0x25edf66f
	0xa81355: mov edi, ebp
	0xa81357: add edi, 0x95
	0xa8136f: mov ecx, ebp
	0xa81377: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa8138a: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa81396: mov edi, dword ptr [edi]
	0xa813a4: add edi, 0
	0xa813bc: movzx edi, word ptr [edi]
	0xa813bf: mov ebx, ebp
	0xa813cc: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa813de: xor edi, dword ptr [ebx]
	0xa813e0: xor edi, 0x5f7bc2cc
	0xa813e8: mov ebx, ebp
	0xa813f0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa813fc: xor dword ptr [ebx], edi
	0xa8140b: and edi, 0xffff
	0xa81418: add ecx, edi
	0xa8141c: mov edi, dword ptr [ecx]
	0xa81426: mov ebx, ebp
	0xa81432: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61937
	0xa81438: add dword ptr [ebx], 5
	0xa8143e: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa71cea: mov ebx, ebp
	0xa71cec: mov edx, ebp
	0xa71cee: add edx, 0x2d
	0xa71cf4: add ebx, 0xa
Load [EBP+0x2d](STATIC)
	0xa71cfa: mov eax, dword ptr [edx]
	0xa71cfc: add eax, 0x2b28b3ec
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71d01: sub dword ptr [ebx], 0x43b8d4c
	0xa71d07: mov ebx, ebp
	0xa71d09: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa71d0f: mov ecx, dword ptr [ebx]
	0xa71d11: xor ecx, 0x2b28b3ec
	0xa71d17: mov esi, ebp
	0xa71d19: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa71d1f: mov dl, byte ptr [esi]
	0xa71d21: cmp dl, 0x1f
	0xa71d24: jne 0xa71d2c
	0xa71d2c: cmp dl, 0x52
	0xa71d2f: jne 0xa71d38
	0xa71d38: cmp dl, 0x81
	0xa71d3b: jne 0xa71d43
	0xa71d41: mov dword ptr [ecx], eax
	0xa71d43: cmp dl, 2
	0xa71d46: jne 0xa71d4e
	0xa71d4e: mov eax, ebp
	0xa71d50: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71d55: mov edi, dword ptr [eax]
	0xa71d57: and edi, 2
	0xa71d5d: cmp edi, 0
	0xa71d63: je 0xa71d83
	0xa71d83: mov ebx, ebp
	0xa71d85: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa71d8b: mov eax, dword ptr [ebx]
	0xa71d8d: cmp cl, 0
	0xa71d90: je 0xa71da0
	0xa71d96: and eax, 0x4cf6f72e
	0xa71db4: cmp al, 0
	0xa71db6: je 0xa71dc7
	0xa71de1: mov eax, ebp
	0xa71de3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71de8: sub dword ptr [eax], 0x228f7392
	0xa71df8: mov ecx, ebp
	0xa71dfa: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71e00: mov edx, dword ptr [ecx]
	0xa71e02: mov edi, ebp
	0xa71e04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71e0a: add dword ptr [edi], edx
	0xa71e0c: mov eax, ebp
	0xa71e0e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71e13: mov edi, dword ptr [eax]
	0xa71e1d: add edi, 0x3d918101
	0xa71e23: mov ecx, ebp
	0xa71e25: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71e2b: and dword ptr [ecx], edi
	0xa71e2f: cmp cl, 0
	0xa71e32: je 0xa71e43
	0xa71e45: mov edi, ebp
	0xa71e47: add edi, 0xe5
	0xa71e57: cmp cl, 0
	0xa71e5a: je 0xa71e6b
Load [EBP+0xe5](STATIC)
	0xa71e6d: mov ecx, dword ptr [edi]
	0xa71e6f: and ecx, 2
	0xa71e75: cmp ecx, 0
	0xa71e7b: je 0xa71e9d
	0xa71e81: mov edi, ebp
	0xa71e83: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71e89: and dword ptr [edi], 0x4861471f
	0xa71e8f: mov edi, ebp
	0xa71e91: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71e97: add dword ptr [edi], 0x524b824a
	0xa71ea5: mov esi, ebp
	0xa71ea7: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa71ead: mov al, byte ptr [esi]
	0xa71eb1: cmp al, 0
	0xa71eb3: je 0xa71ec4
	0xa71ec6: mov edx, ebp
	0xa71ec8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71ece: mov esi, dword ptr [edx]
	0xa71ed0: mov ebx, ebp
	0xa71ed2: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71ed8: add dword ptr [ebx], esi
	0xa71f02: mov ebx, ebp
	0xa71f04: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71f0a: mov ecx, dword ptr [ebx]
	0xa71f16: mov esi, ebp
	0xa71f18: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71f1e: sub dword ptr [esi], ecx
	0xa71f2a: mov ebx, ebp
	0xa71f36: mov eax, ebp
	0xa71f46: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa71f56: mov ebx, dword ptr [ebx]
	0xa71f60: add ebx, 0
	0xa71f66: movzx ebx, word ptr [ebx]
	0xa71f76: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa71f86: mov eax, dword ptr [eax]
	0xa71fb0: xor ebx, 0x6744fa03
	0xa71fba: mov edx, ebp
	0xa71fbc: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71fce: xor dword ptr [edx], ebx
	0xa71fd4: and ebx, 0xffff
	0xa71fe4: add eax, ebx
	0xa71fe6: mov ebx, dword ptr [eax]
	0xa71ff0: mov edi, ebp
	0xa71fff: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61939
	0xa72005: add dword ptr [edi], 2
	0xa7200b: jmp ebx
handlers outputs:



	0xa62816: mov edi, ebp
	0xa6281a: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62828: mov ecx, dword ptr [edi]
	0xa6282a: mov edi, ebp
	0xa6282c: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62832: or dword ptr [edi], ecx
	0xa62834: mov esi, ebp
	0xa62836: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62844: mov edx, dword ptr [esi]
	0xa62848: and edx, 2
	0xa6284e: cmp edx, 0
	0xa62854: je 0xa62876
	0xa62876: mov edx, ebp
	0xa62878: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6287e: xor ebx, dword ptr [edx]
	0xa62884: mov edx, ebp
	0xa62886: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6288c: mov ecx, dword ptr [edx]
	0xa6288e: or ecx, 0x146446bf
	0xa62894: mov esi, ebp
	0xa62896: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628a1: and dword ptr [esi], ecx
	0xa628a5: cmp bl, 0
	0xa628a8: je 0xa628b9
	0xa628bb: mov ebx, ebp
	0xa628bd: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa628c3: xor dword ptr [ebx], 0x3eb4bd5c
	0xa628c9: mov edx, ebp
	0xa628cb: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa628d1: xor dword ptr [edx], 0x1a44884
	0xa62923: mov esi, ebp
	0xa6292e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa62934: mov esi, dword ptr [esi]
	0xa6293c: add esi, 2
	0xa62948: movzx eax, word ptr [esi]
	0xa62955: mov esi, ebp
	0xa62959: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa62967: add eax, dword ptr [esi]
	0xa6296b: mov esi, ebp
	0xa62975: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62981: xor eax, dword ptr [esi]
	0xa62999: mov ebx, ebp
	0xa629a5: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa629b1: or dword ptr [ebx], eax
	0xa629b3: mov ebx, ebp
	0xa629b9: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa629c1: or dword ptr [ebx], 0x52d317e2
	0xa629c9: and eax, 0xffff
	0xa629d6: add eax, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa629e6: mov eax, dword ptr [eax]
	0xa629e8: xor eax, 0x1348fdb8
	0xa629fe: mov ebx, ebp
	0xa62a0a: add ebx, 0x49
Store [EBP+0x49](STATIC)
	0xa62a25: mov dword ptr [ebx], eax
	0xa62a75: mov ecx, ebp
	0xa62a77: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62a7d: mov edx, dword ptr [ecx]
	0xa62a7f: mov ecx, ebp
	0xa62a81: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62a87: and dword ptr [ecx], edx
	0xa62a89: mov edi, ebp
	0xa62a91: add edi, 0xb8
	0xa62a97: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa62aa5: mov edi, dword ptr [edi]
	0xa62aaf: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa62abd: mov edx, dword ptr [edx]
	0xa62ace: add edx, 0
	0xa62ae6: movzx edx, word ptr [edx]
	0xa62aeb: mov eax, ebp
	0xa62af1: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa62afa: add edx, dword ptr [eax]
	0xa62afc: sub edx, 0x478417c3
	0xa62b08: mov eax, ebp
	0xa62b0a: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62b0f: sub dword ptr [eax], edx
	0xa62b1a: and edx, 0xffff
	0xa62b30: add edi, edx
	0xa62b40: mov esi, dword ptr [edi]
	0xa62b44: mov edi, ebp
	0xa62b4b: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6193d
	0xa62b51: add dword ptr [edi], 4
	0xa62b57: jmp esi
handlers outputs:



	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9c8: and eax, 0x31838a60
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cad3: mov esi, ebp
	0xa7cad5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cadb: or dword ptr [esi], 0x15f2236b
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61941
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58906: mov esi, ebp
	0xa58908: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5890e: xor dword ptr [esi], 0x4237f59a
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61944
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa63ae2: cmp cl, 0
	0xa63ae5: je 0xa63af6
	0xa63b02: cmp bl, 0
	0xa63b05: je 0xa63b16
	0xa63b18: mov esi, ebp
	0xa63b1e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa63b29: mov esi, dword ptr [esi]
	0xa63b31: add esi, 2
	0xa63b45: movzx edx, word ptr [esi]
	0xa63b59: mov ecx, ebp
	0xa63b61: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa63b6e: add edx, dword ptr [ecx]
	0xa63b7b: mov eax, ebp
	0xa63b7d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa63b87: sub edx, dword ptr [eax]
	0xa63b89: mov eax, ebp
	0xa63b96: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63baa: add dword ptr [eax], edx
	0xa63bd7: and edx, 0xffff
	0xa63be2: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa63bec: mov edx, dword ptr [edx]
	0xa63bf2: mov esi, ebp
	0xa63bfc: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa63c08: mov esi, dword ptr [esi]
	0xa63c10: add esi, 4
	0xa63c18: mov bl, byte ptr [esi]
	0xa63c1a: cmp bl, 0x1f
	0xa63c1d: jne 0xa63c29
	0xa63c29: cmp bl, 0x52
	0xa63c2c: jne 0xa63c47
	0xa63c47: cmp bl, 0x81
	0xa63c4a: jne 0xa63c60
Deref(t82,ds)
	0xa63c5c: mov edx, dword ptr [edx]
	0xa63c70: xor edx, 0x9af695a
	0xa63c7c: mov esi, ebp
	0xa63c8b: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa63ca0: mov dword ptr [esi], edx
	0xa63ca2: mov esi, ebp
	0xa63ca4: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa63caa: mov edi, dword ptr [esi]
	0xa63cb4: add edi, 0x5cbb170f
	0xa63cbc: cmp bl, 0
	0xa63cbf: je 0xa63cd0
	0xa63cd2: mov ebx, ebp
	0xa63cd4: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63cda: add dword ptr [ebx], edi
	0xa63cdc: mov ebx, ebp
	0xa63cde: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63ce4: sub dword ptr [ebx], 0x7e901d35
	0xa63d32: mov ebx, ebp
	0xa63d34: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa63d3a: mov edx, dword ptr [ebx]
	0xa63d3c: and edx, 2
	0xa63d42: cmp edx, 0
	0xa63d48: je 0xa63d6a
	0xa63d6a: mov eax, ebp
	0xa63d6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63d71: or dword ptr [eax], 0x7f139805
	0xa63d7e: mov edi, ebp
	0xa63d82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa63d88: mov esi, dword ptr [edi]
	0xa63d8a: xor esi, 0x51cf8243
	0xa63d90: mov edi, ebp
	0xa63d92: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63d98: sub dword ptr [edi], esi
	0xa63d9a: mov eax, ebp
	0xa63d9c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63da1: add dword ptr [eax], 0x48d1c9e2
	0xa63da9: mov edi, ebp
	0xa63db7: mov edx, ebp
	0xa63dc1: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa63dc7: mov edi, dword ptr [edi]
	0xa63dd2: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa63de2: mov edx, dword ptr [edx]
	0xa63df4: add edx, 0
	0xa63dfc: movzx edx, word ptr [edx]
	0xa63dff: mov eax, ebp
	0xa63e01: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa63e10: xor edx, dword ptr [eax]
	0xa63e12: sub edx, 0x6dc1d851
	0xa63e18: mov eax, ebp
	0xa63e1a: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa63e25: add dword ptr [eax], edx
	0xa63e27: and edx, 0xffff
	0xa63e35: add edi, edx
	0xa63e39: mov esi, dword ptr [edi]
	0xa63e48: mov eax, ebp
	0xa63e4c: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61949
	0xa63e51: add dword ptr [eax], 5
	0xa63e57: jmp esi
handlers outputs:



	0xa5ed87: mov edi, ebp
	0xa5ed9a: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa5edae: mov ebx, dword ptr [edi]
	0xa5edbc: xor ebx, 0x9af695a
	0xa5edca: mov edi, ebp
	0xa5ede8: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5edf0: mov dword ptr [edi], ebx
	0xa5ee31: mov esi, ebp
	0xa5ee33: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ee39: mov ebx, dword ptr [esi]
	0xa5ee3b: mov eax, ebp
	0xa5ee3d: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee42: and dword ptr [eax], ebx
	0xa5ee44: mov eax, ebp
	0xa5ee46: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee4b: add dword ptr [eax], 0x5d88a98c
	0xa5ee51: mov edx, ebp
	0xa5ee53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5ee59: mov esi, dword ptr [edx]
	0xa5ee5b: and esi, 0x2de1e57b
	0xa5ee61: mov eax, ebp
	0xa5ee63: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee68: and dword ptr [eax], esi
	0xa5ee6a: mov esi, ebp
	0xa5ee6c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5ee72: sub dword ptr [esi], 0x559e01c0
	0xa5ee78: mov edi, ebp
	0xa5ee7a: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ee88: xor dword ptr [edi], 0x78b0f429
	0xa5eea2: mov ecx, ebp
	0xa5eea4: mov edx, ebp
	0xa5eea6: add ecx, 0xe5
	0xa5eeac: add edx, 0x9e
Load [EBP+0xe5](STATIC)
	0xa5eeb2: mov ebx, dword ptr [ecx]
	0xa5eeb4: and ebx, 2
	0xa5eeba: cmp ebx, 0
	0xa5eec0: je 0xa5eee2
Load [EBP+0x9e](STATIC)
	0xa5eee2: mov bl, byte ptr [edx]
	0xa5eef6: cmp bl, 0
	0xa5eef9: je 0xa5ef09
	0xa5ef0b: mov edi, ebp
	0xa5ef0d: mov esi, 0x200
	0xa5ef12: or esi, 0x80
	0xa5ef18: xor esi, 0x28
	0xa5ef1e: add edi, 0x49
Load [EBP+0x49](STATIC)
	0xa5ef24: mov ebx, dword ptr [edi]
	0xa5ef2b: xor ebx, 0x1348fdb8
	0xa5ef4a: mov ecx, ebp
	0xa5ef4c: add ecx, 0x49
	0xa5ef52: add esi, 0x7fffffff
Store [EBP+0x49](STATIC)
	0xa5ef5c: mov dword ptr [ecx], ebx
	0xa5ef60: mov ecx, ebp
	0xa5ef62: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa5ef75: mov edx, dword ptr [ecx]
	0xa5ef7f: mov ecx, ebp
	0xa5ef89: add ecx, 0x2d
	0xa5ef96: mov edi, 0x200
Store [EBP+0x2d](STATIC)
	0xa5ef9b: mov dword ptr [ecx], edx
	0xa5ef9d: add esi, edi
	0xa5ef9f: pushfd
	0xa5efa7: mov eax, ebp
	0xa5efab: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa5efbc: mov ecx, dword ptr [eax]
	0xa5efc6: sub ecx, 0x2b28b3ec
	0xa5efcc: mov edi, ebp
	0xa5efd6: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5efe1: mov dword ptr [edi], ecx
	0xa5efe3: pop ebx
	0xa5efe4: mov eax, ebp
	0xa5efe6: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5efeb: mov eax, dword ptr [eax]
	0xa5efed: add eax, 2
	0xa5eff2: movzx eax, byte ptr [eax]
	0xa5eff5: cmp eax, 0
	0xa5effa: je 0xa5f01c
	0xa5f02a: mov edi, ebp
	0xa5f037: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5f03d: mov edi, dword ptr [edi]
	0xa5f050: mov edx, ebp
	0xa5f052: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa5f05c: mov edx, dword ptr [edx]
	0xa5f064: add edx, 3
	0xa5f06a: movzx edx, word ptr [edx]
	0xa5f083: mov eax, ebp
	0xa5f08a: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5f099: xor edx, dword ptr [eax]
	0xa5f0a3: sub edx, 0x4cc8b7f5
	0xa5f0af: mov eax, ebp
	0xa5f0b7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f0c4: xor dword ptr [eax], edx
	0xa5f0ce: and edx, 0xffff
	0xa5f0dc: add edi, edx
	0xa5f0e6: mov edx, dword ptr [edi]
	0xa5f0f2: mov esi, ebp
	0xa5f0f4: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6194e
	0xa5f0fa: add dword ptr [esi], 5
	0xa5f100: jmp edx
handlers outputs:



	0xa62baf: mov edx, ebp
	0xa62bc1: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa62bdb: mov ebx, dword ptr [edx]
	0xa62bdd: add ebx, 0x2b28b3ec
	0xa62be3: mov edx, ebp
	0xa62be7: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa62bf7: mov ecx, dword ptr [edx]
	0xa62bfd: xor ecx, 0x2b28b3ec
	0xa62c03: mov edx, ebp
	0xa62c11: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62c17: mov al, byte ptr [edx]
	0xa62c19: cmp al, 0x1f
	0xa62c1b: jne 0xa62c27
	0xa62c27: cmp al, 0x52
	0xa62c29: jne 0xa62c42
	0xa62c42: cmp al, 0x81
	0xa62c44: jne 0xa62c8a
	0xa62c57: mov dword ptr [ecx], ebx
	0xa62c8a: cmp al, 2
	0xa62c8c: jne 0xa62caa
	0xa62cb0: mov ecx, ebp
	0xa62cb9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62cbf: mov esi, dword ptr [ecx]
	0xa62cc1: and esi, 2
	0xa62ccb: cmp esi, 0
	0xa62cd1: je 0xa62cf3
	0xa62d24: mov esi, ebp
	0xa62d26: mov eax, ebp
	0xa62d28: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62d2d: mov ecx, dword ptr [eax]
	0xa62d2f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d35: and dword ptr [esi], 0x6f24ddf
	0xa62d3b: and ecx, 2
	0xa62d41: cmp ecx, 0
	0xa62d47: je 0xa62d67
	0xa62d67: mov esi, ebp
	0xa62d69: add esi, 0xa
	0xa62d6f: mov eax, ebp
	0xa62d71: add eax, 0xe5
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62d76: and dword ptr [esi], 0x2486315
Load [EBP+0xe5](STATIC)
	0xa62d7c: mov ebx, dword ptr [eax]
	0xa62d7e: and ebx, 2
	0xa62d84: cmp ebx, 0
	0xa62d8a: je 0xa62daa
	0xa62daa: mov edx, ebp
	0xa62dac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62db9: mov edi, dword ptr [edx]
	0xa62dbd: and edi, 2
	0xa62dc3: cmp edi, 0
	0xa62dc9: je 0xa62deb
	0xa62e09: mov ebx, ebp
	0xa62e17: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa62e27: mov ebx, dword ptr [ebx]
	0xa62e35: add ebx, 0
	0xa62e48: mov eax, ebp
	0xa62e52: movzx ebx, word ptr [ebx]
	0xa62e5b: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa62e6a: mov eax, dword ptr [eax]
	0xa62e90: mov esi, ebp
	0xa62e9a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62ea4: or dword ptr [esi], ebx
	0xa62ea8: and ebx, 0xffff
	0xa62eb8: add eax, ebx
	0xa62ec9: mov esi, dword ptr [eax]
	0xa62ed1: mov edi, ebp
	0xa62ed8: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61950
	0xa62ede: add dword ptr [edi], 2
	0xa62ee4: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa59336: mov eax, ebp
	0xa5934b: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5935a: mov eax, dword ptr [eax]
	0xa5935c: add eax, 0
	0xa59363: movzx ecx, word ptr [eax]
	0xa5936e: mov eax, ebp
	0xa59370: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa59377: xor ecx, dword ptr [eax]
	0xa59381: mov eax, ebp
	0xa59395: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa593a9: add ecx, dword ptr [eax]
	0xa593f6: and ecx, 0xffff
	0xa59405: add ecx, ebp
	0xa59415: xor ecx, 0x2b28b3ec
	0xa5942c: mov ebx, ebp
	0xa59430: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa59443: mov dword ptr [ebx], ecx
	0xa5944f: cmp cl, 0
	0xa59452: je 0xa59462
	0xa59464: mov esi, ebp
	0xa59468: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59476: mov ebx, dword ptr [esi]
	0xa5947f: and ebx, 2
	0xa59485: cmp ebx, 0
	0xa5948b: je 0xa594ad
	0xa594c5: mov eax, ebp
	0xa594c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa594cc: and dword ptr [eax], 0x6cee713a
	0xa594d2: mov eax, ebp
	0xa594e6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa594ed: mov ebx, dword ptr [eax]
	0xa594f1: and ebx, 2
	0xa594f7: cmp ebx, 0
	0xa594fd: je 0xa59517
	0xa59521: mov eax, ebp
	0xa59523: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa59528: and dword ptr [eax], 0x3e54d275
	0xa5952e: mov edx, ebp
	0xa59530: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59536: mov esi, dword ptr [edx]
	0xa5953e: and esi, 2
	0xa5954b: cmp esi, 0
	0xa59551: je 0xa59573
	0xa5957d: mov edi, ebp
	0xa5957f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59585: xor dword ptr [edi], 0x70b6bd58
	0xa595c7: mov esi, ebp
	0xa595cf: mov eax, ebp
	0xa595d1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa595e3: mov esi, dword ptr [esi]
	0xa595f3: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa595fa: mov eax, dword ptr [eax]
	0xa59604: add esi, 2
	0xa5960a: movzx esi, word ptr [esi]
	0xa59612: mov ebx, ebp
	0xa59620: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa59637: sub esi, dword ptr [ebx]
	0xa59639: add esi, 0x39cfa64e
	0xa59645: mov ebx, ebp
	0xa59650: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5966b: or dword ptr [ebx], esi
	0xa5967b: and esi, 0xffff
	0xa5968f: add eax, esi
	0xa59691: mov edi, dword ptr [eax]
	0xa596a4: mov esi, ebp
	0xa596a6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61954
	0xa596ac: add dword ptr [esi], 4
	0xa596b2: jmp edi
handlers outputs:



	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61957
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



	0xa4f7e4: mov edi, ebp
	0xa4f7e6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f7ec: xor dword ptr [edi], 0x2c5a7426
	0xa4f83b: mov esi, ebp
	0xa4f84a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4f858: mov esi, dword ptr [esi]
	0xa4f860: add esi, 2
	0xa4f86d: movzx edx, word ptr [esi]
	0xa4f876: mov esi, ebp
	0xa4f884: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa4f88f: sub edx, dword ptr [esi]
	0xa4f89a: mov ecx, ebp
	0xa4f89e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4f8aa: xor edx, dword ptr [ecx]
	0xa4f8b2: mov ecx, ebp
	0xa4f8b6: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f8be: and dword ptr [ecx], edx
	0xa4f8c2: mov ecx, ebp
	0xa4f8c6: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4f8e0: add dword ptr [ecx], 0xb3878ad
	0xa4f8fb: and edx, 0xffff
	0xa4f909: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4f919: mov edx, dword ptr [edx]
	0xa4f91d: xor edx, 0x1348fdb8
	0xa4f934: mov esi, ebp
	0xa4f936: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa4f94e: mov dword ptr [esi], edx
	0xa4f960: mov edx, ebp
	0xa4f964: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f971: mov cl, byte ptr [edx]
	0xa4f973: mov esi, ebp
	0xa4f975: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4f983: mov ebx, dword ptr [esi]
	0xa4f985: cmp cl, 0
	0xa4f988: je 0xa4f999
	0xa4f98e: xor ebx, 0x6bd5b880
	0xa4f9a5: cmp bl, 0
	0xa4f9a8: je 0xa4f9b8
	0xa4f9bc: mov ebx, ebp
	0xa4f9be: add ebx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f9ca: mov al, byte ptr [ebx]
	0xa4f9ce: cmp al, 0
	0xa4f9d0: je 0xa4f9e1
	0xa4f9e5: mov ebx, ebp
	0xa4f9e9: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa4f9ef: mov ebx, dword ptr [ebx]
	0xa4f9f5: mov edx, ebp
	0xa4fa08: add ebx, 0
	0xa4fa23: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fa2b: mov edx, dword ptr [edx]
	0xa4fa33: movzx ebx, word ptr [ebx]
	0xa4fa38: mov edi, ebp
	0xa4fa40: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4fa4b: sub ebx, dword ptr [edi]
	0xa4fa7c: and ebx, 0xffff
	0xa4fa92: add edx, ebx
	0xa4fa9b: mov ebx, dword ptr [edx]
	0xa4faa7: mov esi, ebp
	0xa4faa9: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6195b
	0xa4faaf: add dword ptr [esi], 4
	0xa4fab5: jmp ebx
handlers outputs:



	0xa76f21: cmp al, 0
	0xa76f23: je 0xa76f34
	0xa76f46: mov edx, ebp
	0xa76f48: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f4e: xor dword ptr [edx], 0x1f6e1d7b
	0xa76f69: mov ecx, ebp
	0xa76f6b: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f71: mov edi, dword ptr [ecx]
	0xa76f73: mov esi, ebp
	0xa76f75: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f7b: xor dword ptr [esi], edi
	0xa76f7d: mov edi, ebp
	0xa76f7f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76f95: mov eax, dword ptr [edi]
	0xa76f97: mov edi, ebp
	0xa76f99: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76f9f: add dword ptr [edi], eax
	0xa76fa1: mov ecx, ebp
	0xa76fa5: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76fab: mov edi, dword ptr [ecx]
	0xa76fb5: and edi, 2
	0xa76fbb: cmp edi, 0
	0xa76fc1: je 0xa76fdd
	0xa76fe9: mov edi, ebp
	0xa76feb: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa76ff1: mov ebx, dword ptr [edi]
	0xa76ff3: mov eax, ebp
	0xa76ff5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa76ffa: or dword ptr [eax], ebx
	0xa77010: mov esi, ebp
	0xa77012: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77018: xor dword ptr [esi], 0x9ff3707
	0xa7703d: mov esi, ebp
	0xa77050: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa77058: mov esi, dword ptr [esi]
	0xa7705a: add esi, 2
	0xa7706b: movzx ecx, word ptr [esi]
	0xa7707c: mov esi, ebp
	0xa7707e: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7708a: xor ecx, dword ptr [esi]
	0xa7708e: mov esi, ebp
	0xa7709a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa770a8: xor ecx, dword ptr [esi]
	0xa770aa: mov esi, ebp
	0xa770ac: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa770b2: sub dword ptr [esi], ecx
	0xa770bb: mov edi, ebp
	0xa770c5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa770da: and dword ptr [edi], 0x74d684ee
	0xa770ef: and ecx, 0xffff
	0xa770fd: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa770ff: mov ecx, dword ptr [ecx]
	0xa77107: xor ecx, 0x9af695a
	0xa77115: mov esi, ebp
	0xa77121: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa77132: mov dword ptr [esi], ecx
	0xa77134: mov edx, ebp
	0xa77136: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7713c: mov ecx, dword ptr [edx]
	0xa7713e: and ecx, 2
	0xa77144: cmp ecx, 0
	0xa7714a: je 0xa7716c
	0xa77178: mov eax, ebp
	0xa77182: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7718d: mov eax, dword ptr [eax]
	0xa77198: mov edx, ebp
	0xa771aa: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa771b8: mov edx, dword ptr [edx]
	0xa771be: add edx, 0
	0xa771ca: movzx edx, word ptr [edx]
	0xa771ea: add edx, 0x143f1315
	0xa771f0: mov ebx, ebp
	0xa771f2: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77200: add dword ptr [ebx], edx
	0xa77202: and edx, 0xffff
	0xa7720c: add eax, edx
	0xa7720e: mov edx, dword ptr [eax]
	0xa7721e: mov ecx, ebp
	0xa77228: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6195f
	0xa7722e: add dword ptr [ecx], 4
	0xa77234: jmp edx
handlers outputs:



	0xa4fab9: mov eax, ebp
	0xa4fac3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4fac8: mov edi, dword ptr [eax]
	0xa4faca: cmp dl, 0
	0xa4facd: je 0xa4fade
	0xa4fae0: and edi, 2
	0xa4fae6: cmp edi, 0
	0xa4faec: je 0xa4fb0c
	0xa4fb16: mov edi, ebp
	0xa4fb1a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb2d: mov edi, dword ptr [edi]
	0xa4fb37: add edi, 2
	0xa4fb44: movzx ecx, word ptr [edi]
	0xa4fb51: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa4fb5a: mov esp, dword ptr [ecx]
	0xa4fb78: mov esi, ebp
	0xa4fb82: mov edx, ebp
	0xa4fb8a: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb94: mov edx, dword ptr [edx]
	0xa4fba5: add edx, 0
	0xa4fbab: movzx edx, word ptr [edx]
	0xa4fbb4: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fbc0: mov esi, dword ptr [esi]
	0xa4fbe0: sub edx, 0x1db2fc37
	0xa4fbe6: mov eax, ebp
	0xa4fbea: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4fbf1: and dword ptr [eax], edx
	0xa4fbff: and edx, 0xffff
	0xa4fc09: add esi, edx
	0xa4fc15: mov edi, dword ptr [esi]
	0xa4fc20: mov esi, ebp
	0xa4fc28: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61963
	0xa4fc2e: add dword ptr [esi], 4
	0xa4fc34: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa69957: mov ebx, ebp
	0xa69959: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6995f: and dword ptr [ebx], 0x49dbc25c
	0xa69965: mov eax, ebp
	0xa69967: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa6996c: mov ebx, dword ptr [eax]
	0xa6996e: and ebx, 0x2307c5ff
	0xa69974: mov edx, ebp
	0xa69976: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6997c: and dword ptr [edx], ebx
	0xa6997e: mov esi, ebp
	0xa69980: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa69986: xor dword ptr [esi], 0x54128486
	0xa6998c: mov ecx, ebp
	0xa6998e: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa69994: mov edi, dword ptr [ecx]
	0xa69996: xor edi, 0x9af695a
	0xa6999c: mov esi, ebp
	0xa6999e: mov ebx, ebp
	0xa699a0: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa699a6: mov dword ptr [esi], edi
	0xa699a8: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa699ae: xor dword ptr [ebx], 0x17d1345c
	0xa699b4: mov edx, ebp
	0xa699b6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa699bc: mov ebx, dword ptr [edx]
	0xa699be: and ebx, 2
	0xa699c4: cmp ebx, 0
	0xa699ca: je 0xa699ec
	0xa699d0: mov edx, ebp
	0xa699d2: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa699d8: xor dword ptr [edx], 0x731be63c
	0xa699de: mov edx, ebp
	0xa699e0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa699e6: sub dword ptr [edx], 0x54de2936
	0xa699ec: mov ecx, ebp
	0xa699ee: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa699f4: mov edx, dword ptr [ecx]
	0xa699f6: or edx, 0x7dd3bc88
	0xa699fc: mov edi, ebp
	0xa699fe: add edi, 0x49
Load [EBP+0x49](STATIC)
	0xa69a04: mov ecx, dword ptr [edi]
	0xa69a06: xor ecx, 0x1348fdb8
	0xa69a0c: add ecx, 0x625b2424
	0xa69a12: mov eax, ebp
	0xa69a14: add eax, 0xe5
	0xa69a19: mov edi, ebp
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa69a1b: and dword ptr [eax], edx
	0xa69a1d: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa69a23: mov dword ptr [edi], ecx
	0xa69a25: mov ebx, ebp
	0xa69a27: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa69a2d: xor dword ptr [ebx], 0x34da88ad
	0xa69a3d: mov eax, ebp
	0xa69a4f: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa69a56: mov edi, dword ptr [eax]
	0xa69a65: add edi, 0x611864ef
	0xa69a6d: mov ecx, ebp
	0xa69a81: add ecx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa69a87: mov dword ptr [ecx], edi
	0xa69a89: add edi, ebx
	0xa69a8b: pushfd
	0xa69a94: pop edi
	0xa69a9c: mov ecx, ebp
	0xa69abe: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa69ac9: mov ecx, dword ptr [ecx]
	0xa69ad1: add ecx, 2
	0xa69ad9: movzx ecx, byte ptr [ecx]
	0xa69adc: cmp ecx, 0
	0xa69ae2: je 0xa69b60
	0xa69b8e: mov ecx, ebp
	0xa69b90: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa69b96: xor dword ptr [ecx], 0x9f96f18
	0xa69b9c: mov ebx, ebp
	0xa69b9e: mov eax, ebp
	0xa69ba0: add eax, 0x2d
	0xa69ba5: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa69bab: mov edx, dword ptr [ebx]
Load [EBP+0x2d](STATIC)
	0xa69bad: mov edi, dword ptr [eax]
	0xa69baf: and edx, 2
	0xa69bb5: cmp edx, 0
	0xa69bbb: je 0xa69bdd
	0xa69bdd: sub edi, 0x611864ef
	0xa69be3: sub edi, 0x2b28b3ec
	0xa69be9: mov eax, ebp
	0xa69beb: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa69bf0: mov dword ptr [eax], edi
	0xa69bf7: mov edi, ebp
	0xa69c06: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa69c0e: mov edi, dword ptr [edi]
	0xa69c10: mov eax, ebp
	0xa69c20: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa69c2f: mov eax, dword ptr [eax]
	0xa69c31: add edi, 0
	0xa69c3d: movzx edi, word ptr [edi]
	0xa69c73: xor edi, 0x14fbf3dd
	0xa69c79: mov ebx, ebp
	0xa69c84: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa69c92: xor dword ptr [ebx], edi
	0xa69ca5: and edi, 0xffff
	0xa69cad: add eax, edi
	0xa69caf: mov edi, dword ptr [eax]
	0xa69cb1: mov ecx, ebp
	0xa69cc0: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61968
	0xa69cc6: add dword ptr [ecx], 5
	0xa69ccc: jmp edi
handlers outputs:



	0xa71cea: mov ebx, ebp
	0xa71cec: mov edx, ebp
	0xa71cee: add edx, 0x2d
	0xa71cf4: add ebx, 0xa
Load [EBP+0x2d](STATIC)
	0xa71cfa: mov eax, dword ptr [edx]
	0xa71cfc: add eax, 0x2b28b3ec
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71d01: sub dword ptr [ebx], 0x43b8d4c
	0xa71d07: mov ebx, ebp
	0xa71d09: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa71d0f: mov ecx, dword ptr [ebx]
	0xa71d11: xor ecx, 0x2b28b3ec
	0xa71d17: mov esi, ebp
	0xa71d19: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa71d1f: mov dl, byte ptr [esi]
	0xa71d21: cmp dl, 0x1f
	0xa71d24: jne 0xa71d2c
	0xa71d2c: cmp dl, 0x52
	0xa71d2f: jne 0xa71d38
	0xa71d38: cmp dl, 0x81
	0xa71d3b: jne 0xa71d43
	0xa71d41: mov dword ptr [ecx], eax
	0xa71d43: cmp dl, 2
	0xa71d46: jne 0xa71d4e
	0xa71d4e: mov eax, ebp
	0xa71d50: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71d55: mov edi, dword ptr [eax]
	0xa71d57: and edi, 2
	0xa71d5d: cmp edi, 0
	0xa71d63: je 0xa71d83
	0xa71d83: mov ebx, ebp
	0xa71d85: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa71d8b: mov eax, dword ptr [ebx]
	0xa71d8d: cmp cl, 0
	0xa71d90: je 0xa71da0
	0xa71d96: and eax, 0x4cf6f72e
	0xa71db4: cmp al, 0
	0xa71db6: je 0xa71dc7
	0xa71de1: mov eax, ebp
	0xa71de3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71de8: sub dword ptr [eax], 0x228f7392
	0xa71df8: mov ecx, ebp
	0xa71dfa: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71e00: mov edx, dword ptr [ecx]
	0xa71e02: mov edi, ebp
	0xa71e04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71e0a: add dword ptr [edi], edx
	0xa71e0c: mov eax, ebp
	0xa71e0e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71e13: mov edi, dword ptr [eax]
	0xa71e1d: add edi, 0x3d918101
	0xa71e23: mov ecx, ebp
	0xa71e25: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71e2b: and dword ptr [ecx], edi
	0xa71e2f: cmp cl, 0
	0xa71e32: je 0xa71e43
	0xa71e45: mov edi, ebp
	0xa71e47: add edi, 0xe5
	0xa71e57: cmp cl, 0
	0xa71e5a: je 0xa71e6b
Load [EBP+0xe5](STATIC)
	0xa71e6d: mov ecx, dword ptr [edi]
	0xa71e6f: and ecx, 2
	0xa71e75: cmp ecx, 0
	0xa71e7b: je 0xa71e9d
	0xa71e81: mov edi, ebp
	0xa71e83: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71e89: and dword ptr [edi], 0x4861471f
	0xa71e8f: mov edi, ebp
	0xa71e91: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa71e97: add dword ptr [edi], 0x524b824a
	0xa71ea5: mov esi, ebp
	0xa71ea7: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa71ead: mov al, byte ptr [esi]
	0xa71eb1: cmp al, 0
	0xa71eb3: je 0xa71ec4
	0xa71ec6: mov edx, ebp
	0xa71ec8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71ece: mov esi, dword ptr [edx]
	0xa71ed0: mov ebx, ebp
	0xa71ed2: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71ed8: add dword ptr [ebx], esi
	0xa71f02: mov ebx, ebp
	0xa71f04: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa71f0a: mov ecx, dword ptr [ebx]
	0xa71f16: mov esi, ebp
	0xa71f18: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71f1e: sub dword ptr [esi], ecx
	0xa71f2a: mov ebx, ebp
	0xa71f36: mov eax, ebp
	0xa71f46: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa71f56: mov ebx, dword ptr [ebx]
	0xa71f60: add ebx, 0
	0xa71f66: movzx ebx, word ptr [ebx]
	0xa71f76: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa71f86: mov eax, dword ptr [eax]
	0xa71fb0: xor ebx, 0x6744fa03
	0xa71fba: mov edx, ebp
	0xa71fbc: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa71fce: xor dword ptr [edx], ebx
	0xa71fd4: and ebx, 0xffff
	0xa71fe4: add eax, ebx
	0xa71fe6: mov ebx, dword ptr [eax]
	0xa71ff0: mov edi, ebp
	0xa71fff: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6196a
	0xa72005: add dword ptr [edi], 2
	0xa7200b: jmp ebx
handlers outputs:



	0xa4f7e4: mov edi, ebp
	0xa4f7e6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f7ec: xor dword ptr [edi], 0x2c5a7426
	0xa4f83b: mov esi, ebp
	0xa4f84a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4f858: mov esi, dword ptr [esi]
	0xa4f860: add esi, 2
	0xa4f86d: movzx edx, word ptr [esi]
	0xa4f876: mov esi, ebp
	0xa4f884: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa4f88f: sub edx, dword ptr [esi]
	0xa4f89a: mov ecx, ebp
	0xa4f89e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4f8aa: xor edx, dword ptr [ecx]
	0xa4f8b2: mov ecx, ebp
	0xa4f8b6: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4f8be: and dword ptr [ecx], edx
	0xa4f8c2: mov ecx, ebp
	0xa4f8c6: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4f8e0: add dword ptr [ecx], 0xb3878ad
	0xa4f8fb: and edx, 0xffff
	0xa4f909: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4f919: mov edx, dword ptr [edx]
	0xa4f91d: xor edx, 0x1348fdb8
	0xa4f934: mov esi, ebp
	0xa4f936: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa4f94e: mov dword ptr [esi], edx
	0xa4f960: mov edx, ebp
	0xa4f964: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f971: mov cl, byte ptr [edx]
	0xa4f973: mov esi, ebp
	0xa4f975: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4f983: mov ebx, dword ptr [esi]
	0xa4f985: cmp cl, 0
	0xa4f988: je 0xa4f999
	0xa4f98e: xor ebx, 0x6bd5b880
	0xa4f9a5: cmp bl, 0
	0xa4f9a8: je 0xa4f9b8
	0xa4f9bc: mov ebx, ebp
	0xa4f9be: add ebx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4f9ca: mov al, byte ptr [ebx]
	0xa4f9ce: cmp al, 0
	0xa4f9d0: je 0xa4f9e1
	0xa4f9e5: mov ebx, ebp
	0xa4f9e9: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa4f9ef: mov ebx, dword ptr [ebx]
	0xa4f9f5: mov edx, ebp
	0xa4fa08: add ebx, 0
	0xa4fa23: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fa2b: mov edx, dword ptr [edx]
	0xa4fa33: movzx ebx, word ptr [ebx]
	0xa4fa38: mov edi, ebp
	0xa4fa40: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4fa4b: sub ebx, dword ptr [edi]
	0xa4fa7c: and ebx, 0xffff
	0xa4fa92: add edx, ebx
	0xa4fa9b: mov ebx, dword ptr [edx]
	0xa4faa7: mov esi, ebp
	0xa4faa9: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6196e
	0xa4faaf: add dword ptr [esi], 4
	0xa4fab5: jmp ebx
handlers outputs:



	0xa65f8c: mov ebx, ebp
	0xa65f96: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa65f9e: mov eax, dword ptr [ebx]
	0xa65fa0: and eax, 2
	0xa65fa5: cmp eax, 0
	0xa65faa: je 0xa65fc6
	0xa65fb8: mov ebx, ebp
	0xa65fba: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa65fc0: and dword ptr [ebx], 0x66f6c872
	0xa65fc6: cmp al, 0
	0xa65fc8: je 0xa65fd9
	0xa65fdb: mov ecx, ebp
	0xa65fdd: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa65fe3: mov eax, dword ptr [ecx]
	0xa65fe5: mov ebx, ebp
	0xa65fe7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa65fed: and dword ptr [ebx], eax
	0xa65ff4: mov edx, ebp
	0xa65ff6: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa65ffc: or dword ptr [edx], 0x41f080aa
	0xa66002: mov edx, ebp
	0xa66004: add edx, 0x2d
	0xa66010: mov esi, ebp
	0xa66012: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6601e: mov esi, dword ptr [esi]
	0xa66020: add esi, 0
	0xa66026: mov eax, dword ptr [esi]
	0xa6602c: cmp dl, 0
	0xa6602f: je 0xa66040
	0xa66048: mov edi, ebp
	0xa6604a: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa66050: sub eax, dword ptr [edi]
	0xa66052: mov edi, ebp
	0xa66054: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6605a: add dword ptr [edi], eax
	0xa6605c: mov edi, ebp
	0xa6605e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa66064: or dword ptr [edi], 0x9c0e3b2
	0xa6606a: xor eax, 0x9af695a
	0xa6606f: mov ebx, ebp
	0xa66071: add ebx, 0x79
Store [EBP+0x79](STATIC)
	0xa66077: mov dword ptr [ebx], eax
	0xa6609e: mov ebx, ebp
	0xa660a0: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa660a6: mov edx, dword ptr [ebx]
	0xa660a8: and edx, 2
	0xa660ae: cmp edx, 0
	0xa660b4: je 0xa660d6
	0xa660ba: mov ebx, ebp
	0xa660bc: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa660c2: and dword ptr [ebx], 0x5465c14f
	0xa660c8: mov ebx, ebp
	0xa660ca: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa660d0: xor dword ptr [ebx], 0x36685ca7
	0xa660d6: mov eax, ebp
	0xa660d8: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa660dd: mov edi, dword ptr [eax]
	0xa660df: and edi, 2
	0xa660e5: cmp edi, 0
	0xa660eb: je 0xa6610b
	0xa6610d: mov edx, ebp
	0xa6610f: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa66115: mov edi, dword ptr [edx]
	0xa6611f: cmp al, 0
	0xa66121: je 0xa66132
	0xa66134: xor edi, 0x731f6693
	0xa6613a: mov esi, ebp
	0xa6613c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa66142: add dword ptr [esi], edi
	0xa6614a: mov ebx, ebp
	0xa6614e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa66154: mov ecx, dword ptr [ebx]
	0xa6615c: mov ebx, ebp
	0xa66160: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa66168: or dword ptr [ebx], ecx
	0xa66170: mov edi, ebp
	0xa66177: add edi, 0xb8
	0xa66183: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa6618b: mov edi, dword ptr [edi]
	0xa66194: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa661ab: mov edx, dword ptr [edx]
	0xa661b5: add edx, 4
	0xa661c9: movzx edx, word ptr [edx]
	0xa661d2: mov ebx, ebp
	0xa661d4: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa661de: xor edx, dword ptr [ebx]
	0xa661e0: mov ebx, ebp
	0xa661ea: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa661f6: or dword ptr [ebx], edx
	0xa66200: and edx, 0xffff
	0xa66206: add edi, edx
	0xa6620e: mov esi, dword ptr [edi]
	0xa66217: mov edi, ebp
	0xa6621b: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61974
	0xa66221: add dword ptr [edi], 6
	0xa66227: jmp esi
handlers outputs:



	0xa505fa: mov edx, ebp
	0xa505fc: add edx, 0x49
	0xa50602: mov eax, edx
	0xa50610: mov esi, ebp
	0xa50612: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50618: or dword ptr [esi], 0x6b3164c9
	0xa5061e: mov esi, ebp
	0xa50620: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50626: mov ebx, dword ptr [esi]
	0xa50628: and ebx, 2
	0xa5062e: cmp ebx, 0
	0xa50634: je 0xa50656
	0xa5063a: mov esi, ebp
	0xa5063c: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50642: or dword ptr [esi], 0x461a3f53
	0xa50648: mov esi, ebp
	0xa5064a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50650: or dword ptr [esi], 0x41f2e86a
	0xa50660: mov edi, ebp
	0xa50662: add edi, 0xef
Load [EBP+0xef](STATIC)
	0xa50668: mov ecx, dword ptr [edi]
	0xa5066a: cmp dl, 0
	0xa5066d: je 0xa5067e
	0xa50673: and ecx, 0x5b626a63
	0xa50680: sub esi, esi
	0xa50688: sub esi, 0x400
	0xa5068e: mov edi, 1
	0xa50693: sub edi, 4
	0xa50699: mov edx, ebp
	0xa5069b: xor edi, esi
	0xa5069d: add edx, 0x95
	0xa506a3: add edi, 1
	0xa506a9: sub ecx, edi
	0xa506ab: mov ebx, 0x400
	0xa506b0: sub ecx, ecx
	0xa506b2: and esi, 0x80
Load [EBP+0x95](STATIC)
	0xa506b8: mov edx, dword ptr [edx]
	0xa506ba: xor edi, eax
	0xa506bc: add edx, 2
	0xa506c2: movzx eax, byte ptr [edx]
	0xa506c5: and ebx, 0xffff
	0xa506cb: mov edx, ebp
	0xa506cd: add ecx, esi
	0xa506cf: sub edi, ebx
	0xa506d1: add edx, 0xa
	0xa506d7: and ebx, ecx
	0xa506d9: and ebx, edx
	0xa506db: xor ecx, esi
	0xa506dd: or ecx, 0xffff
	0xa506e3: add ecx, edi
Load [EBP+0xa](STATIC)
	0xa506e5: sub eax, dword ptr [edx]
	0xa506e7: mov edx, ebp
	0xa506e9: add edx, 0xe5
	0xa506ef: or edi, 0x28
	0xa506f5: xor ebx, ecx
	0xa506f7: add esi, 0x800
	0xa506fd: and ecx, edx
Load [EBP+0xe5](STATIC)
	0xa506ff: add eax, dword ptr [edx]
	0xa50701: sub ecx, 0x40
	0xa50707: add ecx, ecx
	0xa50709: add esi, ebx
	0xa5070b: sub esi, edi
	0xa5070d: xor edi, edi
	0xa5070f: mov edx, ebp
	0xa50711: sub ebx, 0xffff
	0xa50717: add esi, edi
	0xa50719: add esi, 0x28
	0xa5071f: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50729: sub dword ptr [edx], eax
	0xa5072b: or ebx, 0x800
	0xa50731: sub ecx, 0x1c
	0xa50737: sub ebx, ecx
	0xa5073b: mov edx, ebp
	0xa5073f: add edx, 0xe5
	0xa50747: mov edi, 0xa
	0xa5074c: and esi, edi
	0xa5074e: and esi, esi
	0xa50750: or ebx, 0x80
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50756: or dword ptr [edx], 0x4df44040
	0xa50761: mov ecx, ebp
	0xa50763: add ecx, 0x9e
	0xa50769: xor ebx, esi
Store [EBP+0x9e](STATIC)
	0xa5076d: mov byte ptr [ecx], al
	0xa50775: mov esi, ebp
	0xa50777: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50785: mov ecx, dword ptr [esi]
	0xa50787: mov esi, ebp
	0xa50789: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5078f: add dword ptr [esi], ecx
	0xa50795: sub ebx, 0x12d4875b
	0xa5079b: mov ecx, ebp
	0xa5079d: mov eax, ebp
	0xa5079f: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507a5: mov esi, dword ptr [ecx]
	0xa507a7: and esi, 2
	0xa507ad: cmp esi, 0
	0xa507b3: je 0xa507cf
	0xa507b9: mov ecx, ebp
	0xa507bb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa507c1: add dword ptr [ecx], 0x6e9c563f
	0xa507cf: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa507d4: xor ebx, dword ptr [eax]
	0xa507d6: xor ebx, eax
	0xa507ee: mov edx, ebp
	0xa507f2: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507fd: mov esi, dword ptr [edx]
	0xa50801: and esi, 2
	0xa50807: cmp esi, 0
	0xa5080d: je 0xa5082f
	0xa50813: mov edx, ebp
	0xa50815: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5081b: add dword ptr [edx], 0x573ba1e1
	0xa50821: mov edx, ebp
	0xa50823: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50829: and dword ptr [edx], 0x4e8ab989
	0xa5082f: mov eax, ebp
	0xa5083b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50840: or dword ptr [eax], 0x250e5a43
	0xa50846: mov edx, ebp
	0xa50848: add edx, 0xef
	0xa50850: cmp dl, 0
	0xa50853: je 0xa50864
	0xa50870: cmp bl, 0
	0xa50873: je 0xa50883
	0xa5089c: mov ecx, ebp
	0xa508a7: mov edi, ebp
	0xa508a9: add ecx, 0xb8
	0xa508b3: add edi, 0x95
Load [EBP+0xb8](STATIC)
	0xa508b9: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa508bb: mov edi, dword ptr [edi]
	0xa508bf: add edi, 0
	0xa508c5: movzx edi, word ptr [edi]
	0xa508d1: mov esi, ebp
	0xa508d3: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa508d9: xor edi, dword ptr [esi]
	0xa508db: xor edi, 0x2bd5fdb7
	0xa508e5: mov esi, ebp
	0xa508f8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50905: and dword ptr [esi], edi
	0xa50917: and edi, 0xffff
	0xa5091d: add ecx, edi
	0xa5092a: mov edi, dword ptr [ecx]
	0xa5092c: mov esi, ebp
	0xa50935: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61977
	0xa5093b: add dword ptr [esi], 3
	0xa50941: jmp edi
handlers outputs:



	0xa5cd00: mov esi, ebp
	0xa5cd02: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd08: mov ecx, dword ptr [esi]
	0xa5cd0c: and ecx, 2
	0xa5cd12: cmp ecx, 0
	0xa5cd18: je 0xa5cd3a
	0xa5cd4d: mov edx, ebp
	0xa5cd4f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd55: mov esi, dword ptr [edx]
	0xa5cd57: mov edi, ebp
	0xa5cd59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd5f: sub dword ptr [edi], esi
	0xa5cd61: mov eax, ebp
	0xa5cd63: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd68: sub dword ptr [eax], 0x517af35
	0xa5cd6e: mov eax, ebp
	0xa5cd70: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd7f: sub dword ptr [eax], 0x32035459
	0xa5cd9f: mov edx, ebp
	0xa5cda1: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cda7: sub dword ptr [edx], 0x78199ead
	0xa5cdad: mov eax, ebp
	0xa5cdaf: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cdb4: or dword ptr [eax], 0x217c89c9
	0xa5cdba: mov ecx, ebp
	0xa5cdbc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cdc2: mov eax, dword ptr [ecx]
	0xa5cdc4: add eax, 0x531dddb0
	0xa5cdc9: mov edi, ebp
	0xa5cdcb: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cdd1: and dword ptr [edi], eax
	0xa5cdd3: mov edi, ebp
	0xa5cdd5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cddb: or dword ptr [edi], 0x49e1cbd1
	0xa5ce08: mov edi, ebp
	0xa5ce0a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5ce18: mov edi, dword ptr [edi]
	0xa5ce2b: add edi, 2
	0xa5ce3a: movzx ebx, word ptr [edi]
	0xa5ce57: mov edi, ebp
	0xa5ce63: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ce72: xor ebx, dword ptr [edi]
	0xa5ce82: mov edi, ebp
	0xa5ce86: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ce99: or dword ptr [edi], ebx
	0xa5cea3: mov edi, ebp
	0xa5ceaa: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cebb: sub dword ptr [edi], 0x503852d7
	0xa5cec5: and ebx, 0xffff
	0xa5ced3: add ebx, ebp
	0xa5ced5: xor ebx, 0x2b28b3ec
	0xa5ceeb: mov esi, ebp
	0xa5ceed: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa5cef3: mov dword ptr [esi], ebx
	0xa5cef5: mov ebx, ebp
	0xa5cef7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf04: mov edi, dword ptr [ebx]
	0xa5cf0c: and edi, 2
	0xa5cf12: cmp edi, 0
	0xa5cf18: je 0xa5cf3a
	0xa5cf1e: mov ebx, ebp
	0xa5cf20: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf26: sub dword ptr [ebx], 0x509d27db
	0xa5cf2c: mov ebx, ebp
	0xa5cf2e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf34: xor dword ptr [ebx], 0x6546bfdc
	0xa5cf3c: mov edi, ebp
	0xa5cf3e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf44: mov eax, dword ptr [edi]
	0xa5cf48: add eax, 0x7887eedb
	0xa5cf53: mov edi, ebp
	0xa5cf55: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf5b: xor dword ptr [edi], eax
	0xa5cf67: mov ecx, ebp
	0xa5cf69: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf71: mov edx, dword ptr [ecx]
	0xa5cf73: or edx, 0x5b106951
	0xa5cf7f: mov ecx, ebp
	0xa5cf83: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf89: or dword ptr [ecx], edx
	0xa5cf93: mov edi, ebp
	0xa5cf95: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf9b: mov ecx, dword ptr [edi]
	0xa5cf9d: mov esi, ebp
	0xa5cf9f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfa5: or dword ptr [esi], ecx
	0xa5cfa7: mov eax, ebp
	0xa5cfa9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfae: or dword ptr [eax], 0x52b12e12
	0xa5cfbe: mov esi, ebp
	0xa5cfc0: mov ebx, ebp
	0xa5cfcc: add esi, 0x95
	0xa5cfe8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5cff5: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa5d007: mov esi, dword ptr [esi]
	0xa5d00d: add esi, 0
	0xa5d020: movzx esi, word ptr [esi]
	0xa5d038: xor esi, 0x609915b4
	0xa5d03e: mov edi, ebp
	0xa5d04b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d056: xor dword ptr [edi], esi
	0xa5d05d: and esi, 0xffff
	0xa5d069: add ebx, esi
	0xa5d074: mov esi, dword ptr [ebx]
	0xa5d080: mov edi, ebp
	0xa5d08d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6197b
	0xa5d093: add dword ptr [edi], 4
	0xa5d099: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7ebd7: mov eax, ebp
	0xa7ebd9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ebde: and dword ptr [eax], 0x138c2da0
	0xa7ebe4: mov edi, ebp
	0xa7ebe6: add edi, 0x49
	0xa7ebec: mov ecx, edi
	0xa7ebfa: mov esi, ebp
	0xa7ebfc: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa7ec02: mov eax, dword ptr [esi]
	0xa7ec04: xor eax, 0x9af695a
	0xa7ec09: xor eax, 0x5133b748
	0xa7ec0e: mov ebx, ebp
	0xa7ec10: add ebx, 0x79
Store [EBP+0x79](STATIC)
	0xa7ec16: mov dword ptr [ebx], eax
	0xa7ec22: mov edi, ebp
	0xa7ec24: add edi, 0xe5
	0xa7ec32: mov esi, ebp
Load [EBP+0xe5](STATIC)
	0xa7ec34: mov eax, dword ptr [edi]
	0xa7ec36: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ec3c: or ecx, dword ptr [esi]
	0xa7ec3e: and eax, 2
	0xa7ec43: cmp eax, 0
	0xa7ec48: je 0xa7ec6a
	0xa7ec4e: mov edi, ebp
	0xa7ec50: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7ec56: or dword ptr [edi], 0x63300c21
	0xa7ec5c: mov edi, ebp
	0xa7ec5e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7ec64: or dword ptr [edi], 0x611eab2
	0xa7ec76: cmp cl, 0
	0xa7ec79: je 0xa7ec8a
	0xa7ecc1: mov edx, ebp
	0xa7ece9: add edx, 0x49
Load [EBP+0x49](STATIC)
	0xa7ecfa: mov eax, dword ptr [edx]
	0xa7ed08: xor eax, 0x1348fdb8
	0xa7ed17: xor eax, 0x5133b748
	0xa7ed23: mov esi, ebp
	0xa7ed25: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa7ed2b: mov dword ptr [esi], eax
	0xa7ed43: mov eax, ebp
	0xa7ed53: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa7ed58: mov ecx, dword ptr [eax]
	0xa7ed5c: xor ecx, 0x5133b748
	0xa7ed66: mov eax, ebp
	0xa7ed72: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa7ed77: mov ebx, dword ptr [eax]
	0xa7ed81: xor ebx, 0x5133b748
	0xa7ed87: mov eax, ebp
	0xa7ed8b: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa7ed90: mov dl, byte ptr [eax]
	0xa7ed92: cmp dl, 0x1f
	0xa7ed95: jne 0xa7eda0
	0xa7eda0: cmp dl, 0x52
	0xa7eda3: jne 0xa7edb3
	0xa7edb3: cmp dl, 0x81
	0xa7edb6: jne 0xa7edbf
	0xa7edbc: add ecx, ebx
	0xa7edbe: pushfd
	0xa7eddd: sub ecx, 0x5a71c46e
	0xa7edee: mov eax, ebp
	0xa7edfe: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7ee11: mov dword ptr [eax], ecx
	0xa7ee18: mov ecx, ebp
	0xa7ee22: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ee28: or dword ptr [ecx], 0x6cfabf1a
	0xa7ee32: pop ebx
	0xa7ee33: mov esi, ebp
	0xa7ee3e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7ee44: mov esi, dword ptr [esi]
	0xa7ee46: add esi, 0
	0xa7ee4c: movzx esi, byte ptr [esi]
	0xa7ee4f: cmp esi, 0
	0xa7ee55: je 0xa7ee75
	0xa7ee99: mov esi, ebp
	0xa7eeaa: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7eeb0: mov ecx, dword ptr [esi]
	0xa7eec6: add ecx, 0x5a71c46e
	0xa7eed7: sub ecx, 0x2b28b3ec
	0xa7eee9: mov edi, ebp
	0xa7eef1: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7eef7: mov dword ptr [edi], ecx
	0xa7eef9: mov ebx, ebp
	0xa7eefb: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7ef01: mov esi, dword ptr [ebx]
	0xa7ef03: and esi, 2
	0xa7ef09: cmp esi, 0
	0xa7ef0f: je 0xa7ef31
	0xa7ef15: mov ebx, ebp
	0xa7ef17: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7ef1d: xor dword ptr [ebx], 0x8e44dd5
	0xa7ef23: mov ebx, ebp
	0xa7ef25: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7ef2b: xor dword ptr [ebx], 0x7a6ca824
	0xa7ef3a: mov edx, ebp
	0xa7ef4c: add edx, 0x95
	0xa7ef58: mov esi, ebp
	0xa7ef6a: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7ef78: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa7ef7a: mov edx, dword ptr [edx]
	0xa7ef82: add edx, 1
	0xa7ef90: movzx edx, word ptr [edx]
	0xa7ef95: mov edi, ebp
	0xa7efa1: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7efb3: sub edx, dword ptr [edi]
	0xa7efb7: sub edx, 0x49bd6ae7
	0xa7efc8: mov edi, ebp
	0xa7efe0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7efe6: add dword ptr [edi], edx
	0xa7eff1: and edx, 0xffff
	0xa7f006: add esi, edx
	0xa7f01a: mov ebx, dword ptr [esi]
	0xa7f01e: mov eax, ebp
	0xa7f02e: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61980
	0xa7f033: add dword ptr [eax], 5
	0xa7f039: jmp ebx
handlers outputs:



	0xa4ff6f: mov edi, ebp
	0xa4ff7b: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ff81: mov al, byte ptr [edi]
	0xa4ff83: cmp al, 0
	0xa4ff85: je 0xa4ff96
	0xa4ffa8: mov edx, ebp
	0xa4ffb8: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa4ffc2: mov ebx, dword ptr [edx]
	0xa4ffd2: add ebx, 0x2b28b3ec
	0xa4ffe0: mov esi, ebp
	0xa4ffe2: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4fff5: mov ecx, dword ptr [esi]
	0xa5000b: xor ecx, 0x2b28b3ec
	0xa5001c: mov esi, ebp
	0xa50020: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5002c: mov al, byte ptr [esi]
	0xa5002e: cmp al, 0x1f
	0xa50030: jne 0xa50041
	0xa50041: cmp al, 0x52
	0xa50043: jne 0xa50058
	0xa50058: cmp al, 0x81
	0xa5005a: jne 0xa50089
	0xa50068: mov dword ptr [ecx], ebx
	0xa50089: cmp al, 2
	0xa5008b: jne 0xa5009b
	0xa500c9: mov eax, ebp
	0xa500cb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa500d0: mov esi, dword ptr [eax]
	0xa500d4: and esi, 2
	0xa500da: cmp esi, 0
	0xa500e0: je 0xa500fa
	0xa500e6: mov eax, ebp
	0xa500e8: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa500ed: sub dword ptr [eax], 0x28c59c26
	0xa500fa: mov esi, ebp
	0xa500fc: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5010c: mov edi, dword ptr [esi]
	0xa5010e: and edi, 2
	0xa50120: cmp edi, 0
	0xa50126: je 0xa50148
	0xa50159: mov esi, ebp
	0xa5015b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50161: mov eax, dword ptr [esi]
	0xa50163: mov ecx, ebp
	0xa5016d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50175: xor dword ptr [ecx], eax
	0xa50191: mov esi, ebp
	0xa50193: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50199: mov ecx, dword ptr [esi]
	0xa5019b: and ecx, 2
	0xa501a1: cmp ecx, 0
	0xa501a7: je 0xa501c9
	0xa501c9: mov ecx, ebp
	0xa501cb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa501d1: mov edx, dword ptr [ecx]
	0xa501d3: and edx, 2
	0xa501d9: cmp edx, 0
	0xa501df: je 0xa50201
	0xa50215: cmp al, 0
	0xa50217: je 0xa50228
	0xa5022a: mov edi, ebp
	0xa5022e: mov eax, ebp
	0xa50236: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5023b: mov eax, dword ptr [eax]
	0xa50246: add eax, 0
	0xa5024d: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5025d: mov edi, dword ptr [edi]
	0xa5026b: movzx eax, word ptr [eax]
	0xa5026e: mov ebx, ebp
	0xa5027d: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5028e: add eax, dword ptr [ebx]
	0xa50292: mov ebx, ebp
	0xa50294: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa502aa: or dword ptr [ebx], eax
	0xa502ac: and eax, 0xffff
	0xa502b9: add edi, eax
	0xa502c4: mov eax, dword ptr [edi]
	0xa502cc: mov esi, ebp
	0xa502d0: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61982
	0xa502d6: add dword ptr [esi], 2
	0xa502dc: jmp eax
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d975: mov ecx, ebp
	0xa5d977: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d97d: xor dword ptr [ecx], 0x76980d16
	0xa5d983: mov ecx, ebp
	0xa5d985: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d98b: add dword ptr [ecx], 0x1f0a33d1
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0x45](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61986
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa7c3ab: cmp dl, 0
	0xa7c3ae: je 0xa7c3bf
	0xa7c3cc: mov esi, ebp
	0xa7c3ce: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c3d4: add dword ptr [esi], 0x5e888862
	0xa7c3e0: mov esi, ebp
	0xa7c3ea: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7c3f0: mov esi, dword ptr [esi]
	0xa7c3f2: add esi, 2
	0xa7c403: movzx edx, word ptr [esi]
	0xa7c408: mov esi, ebp
	0xa7c416: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c41e: sub edx, dword ptr [esi]
	0xa7c42e: mov esi, ebp
	0xa7c436: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c440: xor edx, dword ptr [esi]
	0xa7c44f: mov esi, ebp
	0xa7c457: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c46b: and dword ptr [esi], edx
	0xa7c46f: mov esi, ebp
	0xa7c481: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c496: and dword ptr [esi], 0x6c5c027
	0xa7c4a9: and edx, 0xffff
	0xa7c4bf: add edx, ebp
	0xa7c4c8: xor edx, 0x2b28b3ec
	0xa7c4d3: mov esi, ebp
	0xa7c4e2: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c4ef: mov dword ptr [esi], edx
	0xa7c526: mov ebx, ebp
	0xa7c528: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c52e: mov esi, dword ptr [ebx]
	0xa7c530: mov ebx, ebp
	0xa7c532: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c538: or dword ptr [ebx], esi
	0xa7c53a: mov eax, ebp
	0xa7c53c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c541: add dword ptr [eax], 0x69c6a8ff
	0xa7c54e: mov ecx, ebp
	0xa7c550: mov ebx, ebp
	0xa7c55d: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c563: mov ebx, dword ptr [ebx]
	0xa7c573: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7c57b: mov ecx, dword ptr [ecx]
	0xa7c589: add ebx, 0
	0xa7c599: movzx ebx, word ptr [ebx]
	0xa7c5a4: mov eax, ebp
	0xa7c5a8: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c5ad: xor ebx, dword ptr [eax]
	0xa7c5b7: sub ebx, 0x791c4b32
	0xa7c5bf: mov eax, ebp
	0xa7c5c1: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c5d9: xor dword ptr [eax], ebx
	0xa7c5db: and ebx, 0xffff
	0xa7c5e1: add ecx, ebx
	0xa7c5ed: mov eax, dword ptr [ecx]
	0xa7c5ef: mov ebx, ebp
	0xa7c5f9: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6198a
	0xa7c5ff: add dword ptr [ebx], 4
	0xa7c605: jmp eax
handlers outputs:



	0xa7a10b: mov eax, ebp
	0xa7a10d: add eax, 0xef
	0xa7a114: cmp al, 0
	0xa7a116: je 0xa7a127
	0xa7a145: mov ecx, ebp
	0xa7a147: add ecx, 0x49
	0xa7a165: mov eax, ebp
	0xa7a167: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a16c: mov edi, dword ptr [eax]
	0xa7a16e: mov edx, ebp
	0xa7a170: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a176: xor dword ptr [edx], edi
	0xa7a18a: cmp cl, 0
	0xa7a18d: je 0xa7a19d
	0xa7a19f: mov edx, ebp
	0xa7a1a1: add edx, 0xe5
	0xa7a1a7: mov eax, ebp
	0xa7a1a9: add eax, 0xa
Load [EBP+0xe5](STATIC)
	0xa7a1ae: mov ecx, dword ptr [edx]
	0xa7a1b0: and ecx, 2
	0xa7a1b6: cmp ecx, 0
	0xa7a1bc: je 0xa7a1de
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1de: xor dword ptr [eax], 0x46ff79b1
	0xa7a1e4: mov ebx, ebp
	0xa7a1e6: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1ec: xor dword ptr [ebx], 0x2678d220
	0xa7a222: mov edi, ebp
	0xa7a228: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7a238: mov edi, dword ptr [edi]
	0xa7a241: add edi, 0
	0xa7a253: movzx ecx, byte ptr [edi]
	0xa7a256: mov edi, ebp
	0xa7a258: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a262: add ecx, dword ptr [edi]
	0xa7a264: mov edi, ebp
	0xa7a266: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a271: add ecx, dword ptr [edi]
	0xa7a283: mov ebx, ebp
	0xa7a28f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a29a: xor dword ptr [ebx], ecx
	0xa7a2a5: mov eax, ebp
	0xa7a2b4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a2b9: and dword ptr [eax], 0x76f31181
	0xa7a2c1: mov eax, ebp
	0xa7a2d8: add eax, 0x9e
Store [EBP+0x9e](STATIC)
	0xa7a2df: mov byte ptr [eax], cl
	0xa7a2e1: mov eax, ebp
	0xa7a2e3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a2e8: mov edx, dword ptr [eax]
	0xa7a2ea: add edx, 0x6c2d4307
	0xa7a2f0: mov esi, ebp
	0xa7a2f2: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a2f8: xor dword ptr [esi], edx
	0xa7a2fa: mov esi, ebp
	0xa7a2fc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a302: and dword ptr [esi], 0x3ad95769
	0xa7a32c: mov edx, ebp
	0xa7a338: mov esi, ebp
	0xa7a344: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a34a: mov edx, dword ptr [edx]
	0xa7a354: add edx, 1
	0xa7a35c: add esi, 0xb8
	0xa7a364: movzx edx, word ptr [edx]
Load [EBP+0xb8](STATIC)
	0xa7a367: mov esi, dword ptr [esi]
	0xa7a373: mov eax, ebp
	0xa7a387: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7a38e: xor edx, dword ptr [eax]
	0xa7a399: xor edx, 0x768e7e12
	0xa7a3a1: mov eax, ebp
	0xa7a3b4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a3bd: sub dword ptr [eax], edx
	0xa7a3d4: and edx, 0xffff
	0xa7a3e4: add esi, edx
	0xa7a3f6: mov ecx, dword ptr [esi]
	0xa7a404: mov edi, ebp
	0xa7a40d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6198d
	0xa7a413: add dword ptr [edi], 3
	0xa7a419: jmp ecx
handlers outputs:



	0xa4ec96: mov edx, ebp
	0xa4ec98: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4eca0: mov cl, byte ptr [edx]
	0xa4ecdb: mov edi, ebp
	0xa4ecdd: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4ece3: sub ecx, dword ptr [edi]
	0xa4ecf9: cmp cl, 0
	0xa4ecfc: je 0xa4ed0c
	0xa4ed1c: mov ecx, ebp
	0xa4ed1e: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed24: and dword ptr [ecx], 0x7d68145e
	0xa4ed2c: mov ebx, ebp
	0xa4ed2e: add ebx, 0x9e
	0xa4ed3d: mov esi, ebp
	0xa4ed3f: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed45: mov esi, dword ptr [esi]
	0xa4ed49: add esi, 3
	0xa4ed4f: movzx eax, word ptr [esi]
	0xa4ed5a: mov ecx, ebp
	0xa4ed5c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4ed62: xor eax, dword ptr [ecx]
	0xa4ed64: mov ecx, ebp
	0xa4ed66: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed6c: sub dword ptr [ecx], eax
	0xa4ed6e: mov edi, ebp
	0xa4ed70: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ed76: add dword ptr [edi], 0x3394b0f2
	0xa4ed7c: and eax, 0xffff
	0xa4ed81: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4ed83: mov eax, dword ptr [eax]
	0xa4ed85: mov edx, ebp
	0xa4ed87: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed8d: mov edx, dword ptr [edx]
	0xa4ed8f: add edx, 2
	0xa4ed95: mov cl, byte ptr [edx]
	0xa4ed97: cmp cl, 0x1f
	0xa4ed9a: jne 0xa4eda2
	0xa4eda2: cmp cl, 0x52
	0xa4eda5: jne 0xa4edae
	0xa4edae: cmp cl, 0x81
	0xa4edb1: jne 0xa4edb9
Deref(t99,ds)
	0xa4edb7: mov eax, dword ptr [eax]
	0xa4edb9: xor eax, 0x9af695a
	0xa4edbe: mov edi, ebp
	0xa4edc0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa4edc6: mov dword ptr [edi], eax
	0xa4edd2: cmp bl, 0
	0xa4edd5: je 0xa4ede6
	0xa4ede8: mov eax, ebp
	0xa4edf2: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4edf7: mov ecx, dword ptr [eax]
	0xa4edf9: and ecx, 2
	0xa4edff: cmp ecx, 0
	0xa4ee05: je 0xa4ee25
	0xa4ee0b: mov eax, ebp
	0xa4ee0d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee12: xor dword ptr [eax], 0x3b40f517
	0xa4ee18: mov eax, ebp
	0xa4ee1a: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee1f: and dword ptr [eax], 0x6bfd7ac4
	0xa4ee33: mov esi, ebp
	0xa4ee35: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ee3b: mov cl, byte ptr [esi]
	0xa4ee47: cmp cl, 0
	0xa4ee4a: je 0xa4ee5a
	0xa4ee76: mov edx, ebp
	0xa4ee7e: add edx, 0xb8
	0xa4ee8c: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa4ee98: mov edx, dword ptr [edx]
	0xa4ee9c: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa4eeb1: mov eax, dword ptr [eax]
	0xa4eeb3: add eax, 0
	0xa4eec2: movzx eax, word ptr [eax]
	0xa4eecb: mov ebx, ebp
	0xa4eed1: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa4eed7: xor eax, dword ptr [ebx]
	0xa4eeeb: add eax, 0x68f36852
	0xa4ef02: mov ebx, ebp
	0xa4ef08: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ef0e: sub dword ptr [ebx], eax
	0xa4ef1c: and eax, 0xffff
	0xa4ef26: add edx, eax
	0xa4ef28: mov eax, dword ptr [edx]
	0xa4ef2c: mov edx, ebp
	0xa4ef38: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61992
	0xa4ef3e: add dword ptr [edx], 5
	0xa4ef44: jmp eax
handlers outputs:



	0xa67c5d: mov esi, ebp
	0xa67c5f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67c65: or dword ptr [esi], 0x1209c6de
	0xa67c75: mov edx, ebp
	0xa67c77: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67c7d: add dword ptr [edx], 0x4cde0b51
	0xa67cb3: mov esi, ebp
	0xa67cbf: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa67cd6: mov edx, dword ptr [esi]
	0xa67cd8: xor edx, 0x1348fdb8
	0xa67ce0: xor edx, 0x1cba9ec6
	0xa67cf0: mov eax, ebp
	0xa67d02: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa67d10: mov dword ptr [eax], edx
	0xa67d28: mov esi, ebp
	0xa67d2a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67d38: xor dword ptr [esi], 0x3013d136
	0xa67d40: mov esi, ebp
	0xa67d42: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa67d48: mov ecx, dword ptr [esi]
	0xa67d52: and ecx, 0x10c36073
	0xa67d58: mov edx, ebp
	0xa67d5a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67d60: sub dword ptr [edx], ecx
	0xa67d62: mov esi, ebp
	0xa67d64: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67d6a: add dword ptr [esi], 0x5b7dd034
	0xa67d78: mov eax, ebp
	0xa67d8a: add eax, 0x79
	0xa67da5: mov ebx, ebp
	0xa67dad: add ebx, 0xa
Load [EBP+0x79](STATIC)
	0xa67dc5: mov edx, dword ptr [eax]
	0xa67dd1: xor edx, 0x9af695a
	0xa67ddb: sub edx, 0x1cba9ec6
	0xa67ded: mov eax, ebp
	0xa67df5: add eax, 0x79
Store [EBP+0x79](STATIC)
	0xa67dff: mov dword ptr [eax], edx
	0xa67e01: mov edi, ebp
	0xa67e03: add edi, 0xef
	0xa67e09: mov edx, ebp
Load [EBP+0xef](STATIC)
	0xa67e0b: mov esi, dword ptr [edi]
	0xa67e0d: cmp bl, 0
	0xa67e10: je 0xa67e21
	0xa67e16: xor esi, 0x6c55d9c0
	0xa67e23: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67e29: mov edi, dword ptr [edx]
	0xa67e2b: and edi, 2
	0xa67e31: cmp edi, 0
	0xa67e37: je 0xa67e59
	0xa67e3d: mov edx, ebp
	0xa67e3f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67e45: sub dword ptr [edx], 0x297b8451
	0xa67e4b: mov edx, ebp
	0xa67e4d: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67e53: xor dword ptr [edx], 0x45891f21
	0xa67e5b: mov edx, ebp
	0xa67e65: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa67e6b: mov eax, dword ptr [edx]
	0xa67e6d: add eax, 0x1cba9ec6
	0xa67e72: mov edi, ebp
	0xa67e74: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa67e7a: mov dword ptr [edi], eax
	0xa67e7c: add edi, esi
	0xa67e7e: pushfd
	0xa67e81: mov edx, ebp
	0xa67e89: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa67e8f: mov edx, dword ptr [edx]
	0xa67e9b: pop ecx
	0xa67e9c: add edx, 2
	0xa67ea2: movzx edx, byte ptr [edx]
	0xa67ea5: cmp edx, 0
	0xa67eab: je 0xa67ecd
	0xa67ecf: mov edi, ebp
	0xa67ed1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67ed7: mov edx, dword ptr [edi]
	0xa67ed9: mov eax, ebp
	0xa67edb: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67ee0: add dword ptr [eax], edx
	0xa67ee2: mov ecx, ebp
	0xa67ee4: mov edi, ebp
	0xa67ee6: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa67eec: mov ebx, dword ptr [edi]
	0xa67eee: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67ef4: mov eax, dword ptr [ecx]
	0xa67ef6: and eax, 2
	0xa67efb: cmp eax, 0
	0xa67f00: je 0xa67f22
	0xa67f06: mov ecx, ebp
	0xa67f08: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67f0e: and dword ptr [ecx], 0x449130ad
	0xa67f14: mov ecx, ebp
	0xa67f16: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67f1c: add dword ptr [ecx], 0x79a736b7
	0xa67f22: sub ebx, 0x2b28b3ec
	0xa67f28: mov ecx, ebp
	0xa67f2a: add ecx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa67f30: mov dword ptr [ecx], ebx
	0xa67f32: mov ebx, ebp
	0xa67f34: add ebx, 0xef
	0xa67f3c: cmp bl, 0
	0xa67f3f: je 0xa67f50
	0xa67f5d: mov ebx, ebp
	0xa67f6a: mov ecx, ebp
	0xa67f71: add ebx, 0x95
	0xa67f7c: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa67f82: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa67f86: mov ebx, dword ptr [ebx]
	0xa67f97: add ebx, 3
	0xa67faa: movzx ebx, word ptr [ebx]
	0xa67fb1: mov edi, ebp
	0xa67fc3: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa67fd9: add ebx, dword ptr [edi]
	0xa67fe3: mov edi, ebp
	0xa67fe5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa67feb: or dword ptr [edi], ebx
	0xa67fed: and ebx, 0xffff
	0xa67ff3: add ecx, ebx
	0xa67ff7: mov esi, dword ptr [ecx]
	0xa68004: mov edi, ebp
	0xa68014: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61997
	0xa6801a: add dword ptr [edi], 5
	0xa68020: jmp esi
handlers outputs:



	0xa75496: mov edi, ebp
	0xa75498: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7549e: mov esi, dword ptr [edi]
	0xa754a0: mov edi, ebp
	0xa754a2: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa754a8: sub dword ptr [edi], esi
	0xa754aa: mov ebx, ebp
	0xa754ac: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa754b4: mov edx, dword ptr [ebx]
	0xa754b6: and edx, 2
	0xa754c4: cmp edx, 0
	0xa754ca: je 0xa754ec
	0xa754ec: cmp cl, 0
	0xa754ef: je 0xa754ff
	0xa75503: mov ecx, ebp
	0xa7550c: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75512: and dword ptr [ecx], 0x1148d664
	0xa75518: mov edx, ebp
	0xa7551a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75520: mov esi, dword ptr [edx]
	0xa75522: mov ecx, ebp
	0xa75524: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7552a: add dword ptr [ecx], esi
	0xa7552c: mov edi, ebp
	0xa7552e: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75534: xor dword ptr [edi], 0x6e6b7179
	0xa7553c: mov eax, ebp
	0xa7553e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7554b: mov edx, dword ptr [eax]
	0xa7554d: and edx, 2
	0xa7555b: cmp edx, 0
	0xa75561: je 0xa75581
	0xa75585: mov esi, ebp
	0xa75587: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7558d: mov ebx, dword ptr [esi]
	0xa7558f: add ebx, 0x2b28b3ec
	0xa75595: mov edx, ebp
	0xa75597: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa7559d: mov edi, dword ptr [edx]
	0xa7559f: xor edi, 0x2b28b3ec
	0xa755a5: mov ecx, ebp
	0xa755a7: add ecx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa755b5: mov al, byte ptr [ecx]
	0xa755b7: cmp al, 0x1f
	0xa755b9: jne 0xa755c1
	0xa755c1: cmp al, 0x52
	0xa755c3: jne 0xa755cc
	0xa755cc: cmp al, 0x81
	0xa755ce: jne 0xa755d6
	0xa755d4: mov dword ptr [edi], ebx
	0xa755d6: cmp al, 2
	0xa755d8: jne 0xa755e0
	0xa755e0: mov ebx, ebp
	0xa755e2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa755e8: xor dword ptr [ebx], 0x3e43e64f
	0xa755ee: mov edi, ebp
	0xa755fa: add edi, 0x95
	0xa7560f: mov ecx, ebp
	0xa7561d: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa75627: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa7562d: mov edi, dword ptr [edi]
	0xa7562f: add edi, 0
	0xa75635: movzx edi, word ptr [edi]
	0xa75640: mov edx, ebp
	0xa75642: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa75656: add edi, dword ptr [edx]
	0xa75658: xor edi, 0x37a47f4b
	0xa75668: mov edx, ebp
	0xa75677: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7567d: and dword ptr [edx], edi
	0xa7568e: and edi, 0xffff
	0xa75699: add ecx, edi
	0xa7569b: mov edi, dword ptr [ecx]
	0xa756a3: mov esi, ebp
	0xa756a5: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61999
	0xa756ab: add dword ptr [esi], 2
	0xa756b1: jmp edi
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73211: mov ecx, ebp
	0xa73213: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73219: add dword ptr [ecx], 0xd852b6c
	0xa7321f: mov ecx, ebp
	0xa73221: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73227: and dword ptr [ecx], 0x4193680
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb6199d
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619a0
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa58da4: mov ecx, ebp
	0xa58dae: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58dc0: mov ebx, dword ptr [ecx]
	0xa58dc2: xor ebx, 0x247e447f
	0xa58dc8: mov esi, ebp
	0xa58dca: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58dd0: sub dword ptr [esi], ebx
	0xa58dd2: mov ecx, ebp
	0xa58dd4: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58dda: xor dword ptr [ecx], 0x2101d9d2
	0xa58de0: mov esi, ebp
	0xa58de2: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58df9: mov esi, dword ptr [esi]
	0xa58dfb: add esi, 0
	0xa58e0b: movzx ecx, word ptr [esi]
	0xa58e3f: mov ebx, ebp
	0xa58e47: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58e4f: xor ecx, dword ptr [ebx]
	0xa58e58: mov esi, ebp
	0xa58e5c: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58e62: add dword ptr [esi], ecx
	0xa58e76: mov ebx, ebp
	0xa58e86: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58e8c: add dword ptr [ebx], 0x479e6ec8
	0xa58ea1: and ecx, 0xffff
	0xa58eac: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa58eb2: mov ecx, dword ptr [ecx]
	0xa58eb6: xor ecx, 0x9af695a
	0xa58ecc: mov esi, ebp
	0xa58ece: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa58ed6: mov dword ptr [esi], ecx
	0xa58ed8: mov ecx, ebp
	0xa58eda: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58ee8: mov esi, dword ptr [ecx]
	0xa58eee: xor esi, 0x38f07861
	0xa58ef4: mov eax, ebp
	0xa58ef6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58efb: and dword ptr [eax], esi
	0xa58efd: mov eax, ebp
	0xa58eff: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f04: or dword ptr [eax], 0x2ffb98e4
	0xa58f0a: mov ebx, ebp
	0xa58f13: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa58f19: mov edx, dword ptr [ebx]
	0xa58f1d: mov ebx, ebp
	0xa58f1f: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f25: sub dword ptr [ebx], edx
	0xa58f27: mov esi, ebp
	0xa58f29: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f2f: sub dword ptr [esi], 0x7f9dc707
	0xa58f3f: mov edi, ebp
	0xa58f41: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58f47: and dword ptr [edi], 0x201178a2
	0xa58f55: mov edx, ebp
	0xa58f59: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58f5f: mov edi, dword ptr [edx]
	0xa58f63: and edi, 2
	0xa58f69: cmp edi, 0
	0xa58f6f: je 0xa58f91
	0xa58f75: mov edx, ebp
	0xa58f77: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f7d: and dword ptr [edx], 0x6c29f7b5
	0xa58f83: mov edx, ebp
	0xa58f85: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f8b: sub dword ptr [edx], 0x59564bd1
	0xa58f91: mov ecx, ebp
	0xa58f93: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58f99: or dword ptr [ecx], 0x6157851f
	0xa58f9f: mov eax, ebp
	0xa58fa1: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fa6: and dword ptr [eax], 0x73d721
	0xa58fac: mov esi, ebp
	0xa58fae: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fb4: and dword ptr [esi], 0x45a5408a
	0xa58fba: mov esi, ebp
	0xa58fbc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fc2: add dword ptr [esi], 0x64f710e1
	0xa58fd2: mov ecx, ebp
	0xa58fdf: add ecx, 0xb8
	0xa58fed: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa58fef: mov ecx, dword ptr [ecx]
	0xa59004: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa59015: mov eax, dword ptr [eax]
	0xa59026: add eax, 2
	0xa5903c: movzx eax, word ptr [eax]
	0xa59045: mov ebx, ebp
	0xa59047: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5905b: add eax, dword ptr [ebx]
	0xa59069: sub eax, 0x40edc9ca
	0xa59080: mov edi, ebp
	0xa59082: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59097: xor dword ptr [edi], eax
	0xa5909b: and eax, 0xffff
	0xa590a0: add ecx, eax
	0xa590a8: mov edi, dword ptr [ecx]
	0xa590af: mov eax, ebp
	0xa590b5: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619a4
	0xa590ba: add dword ptr [eax], 4
	0xa590c0: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa795cd: mov eax, ebp
	0xa795cf: mov ecx, ebp
	0xa795d1: add ecx, 0xef
	0xa795d7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa795de: mov esi, dword ptr [eax]
	0xa795e0: and esi, 2
	0xa795e6: cmp esi, 0
	0xa795ec: je 0xa7960c
	0xa795f2: mov eax, ebp
	0xa795f4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa795f9: and dword ptr [eax], 0x4af44d07
	0xa795ff: mov eax, ebp
	0xa79601: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa79606: sub dword ptr [eax], 0x4d517bf8
	0xa7960c: cmp cl, 0
	0xa7960f: je 0xa79620
	0xa79622: mov edi, ebp
	0xa79624: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7962a: xor dword ptr [edi], 0x6d2cbf61
	0xa7963c: mov edx, ebp
	0xa7963e: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa79648: mov edx, dword ptr [edx]
	0xa7964c: add edx, 2
	0xa79657: movzx esi, word ptr [edx]
	0xa7965a: add esi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa79660: mov esp, dword ptr [esi]
	0xa79677: mov ebx, ebp
	0xa79679: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7967f: mov edi, dword ptr [ebx]
	0xa79681: mov eax, ebp
	0xa79683: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa79688: and dword ptr [eax], edi
	0xa79690: mov esi, ebp
	0xa7969a: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa796a0: mov esi, dword ptr [esi]
	0xa796af: mov ecx, ebp
	0xa796b9: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa796c1: mov ecx, dword ptr [ecx]
	0xa796c9: add ecx, 0
	0xa796d1: movzx ecx, word ptr [ecx]
	0xa796d8: mov edx, ebp
	0xa796e1: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa796e9: sub ecx, dword ptr [edx]
	0xa796f3: mov edi, ebp
	0xa79702: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7970e: add dword ptr [edi], ecx
	0xa79710: and ecx, 0xffff
	0xa79718: add esi, ecx
	0xa7971c: mov edi, dword ptr [esi]
	0xa79727: mov esi, ebp
	0xa7972f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619a8
	0xa79735: add dword ptr [esi], 4
	0xa7973b: jmp edi
handlers outputs:



	0xa59336: mov eax, ebp
	0xa5934b: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5935a: mov eax, dword ptr [eax]
	0xa5935c: add eax, 0
	0xa59363: movzx ecx, word ptr [eax]
	0xa5936e: mov eax, ebp
	0xa59370: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa59377: xor ecx, dword ptr [eax]
	0xa59381: mov eax, ebp
	0xa59395: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa593a9: add ecx, dword ptr [eax]
	0xa593f6: and ecx, 0xffff
	0xa59405: add ecx, ebp
	0xa59415: xor ecx, 0x2b28b3ec
	0xa5942c: mov ebx, ebp
	0xa59430: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa59443: mov dword ptr [ebx], ecx
	0xa5944f: cmp cl, 0
	0xa59452: je 0xa59462
	0xa59464: mov esi, ebp
	0xa59468: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59476: mov ebx, dword ptr [esi]
	0xa5947f: and ebx, 2
	0xa59485: cmp ebx, 0
	0xa5948b: je 0xa594ad
	0xa59491: mov esi, ebp
	0xa59493: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa59499: sub dword ptr [esi], 0x66e138f
	0xa5949f: mov esi, ebp
	0xa594a1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa594a7: or dword ptr [esi], 0x13ce59b3
	0xa594c5: mov eax, ebp
	0xa594c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa594cc: and dword ptr [eax], 0x6cee713a
	0xa594d2: mov eax, ebp
	0xa594e6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa594ed: mov ebx, dword ptr [eax]
	0xa594f1: and ebx, 2
	0xa594f7: cmp ebx, 0
	0xa594fd: je 0xa59517
	0xa59503: mov eax, ebp
	0xa59505: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5950a: and dword ptr [eax], 0x6c2b911a
	0xa59521: mov eax, ebp
	0xa59523: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa59528: and dword ptr [eax], 0x3e54d275
	0xa5952e: mov edx, ebp
	0xa59530: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59536: mov esi, dword ptr [edx]
	0xa5953e: and esi, 2
	0xa5954b: cmp esi, 0
	0xa59551: je 0xa59573
	0xa5957d: mov edi, ebp
	0xa5957f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59585: xor dword ptr [edi], 0x70b6bd58
	0xa595c7: mov esi, ebp
	0xa595cf: mov eax, ebp
	0xa595d1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa595e3: mov esi, dword ptr [esi]
	0xa595f3: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa595fa: mov eax, dword ptr [eax]
	0xa59604: add esi, 2
	0xa5960a: movzx esi, word ptr [esi]
	0xa59612: mov ebx, ebp
	0xa59620: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa59637: sub esi, dword ptr [ebx]
	0xa59639: add esi, 0x39cfa64e
	0xa59645: mov ebx, ebp
	0xa59650: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5966b: or dword ptr [ebx], esi
	0xa5967b: and esi, 0xffff
	0xa5968f: add eax, esi
	0xa59691: mov edi, dword ptr [eax]
	0xa596a4: mov esi, ebp
	0xa596a6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619ac
	0xa596ac: add dword ptr [esi], 4
	0xa596b2: jmp edi
handlers outputs:



	0xa77e1a: cmp dl, 0
	0xa77e1d: je 0xa77e2e
	0xa77e38: mov ecx, ebp
	0xa77e40: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa77e48: mov esi, dword ptr [ecx]
	0xa77e4c: xor esi, 0x1348fdb8
	0xa77e54: mov edx, ebp
	0xa77e56: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa77e6a: mov eax, dword ptr [edx]
	0xa77e74: add esi, 0x68474312
	0xa77e84: xor eax, 0x9af695a
	0xa77e8f: mov edx, ebp
	0xa77e9e: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa77eaa: mov dword ptr [edx], eax
	0xa77eb6: mov edi, ebp
	0xa77ebe: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa77ec4: mov dword ptr [edi], esi
	0xa77ec6: mov ebx, ebp
	0xa77ec8: add ebx, 0x79
	0xa77ece: mov edi, ebp
	0xa77ed0: add edi, 0xa
Load [EBP+0x79](STATIC)
	0xa77ed6: mov eax, dword ptr [ebx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77ed8: and dword ptr [edi], 0x4bfbb510
	0xa77ede: add eax, 0x47273a2c
	0xa77ee3: mov edx, ebp
	0xa77ee5: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa77eeb: mov dword ptr [edx], eax
	0xa77eed: add edi, eax
	0xa77eef: pushfd
	0xa77ef0: mov ebx, ebp
	0xa77ef2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77ef8: mov eax, dword ptr [ebx]
	0xa77efa: mov edi, ebp
	0xa77efc: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77f02: xor dword ptr [edi], eax
	0xa77f0e: mov edx, ebp
	0xa77f10: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa77f16: mov ebx, dword ptr [edx]
	0xa77f18: mov esi, ebp
	0xa77f1a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa77f22: add dword ptr [esi], ebx
	0xa77f2c: pop ecx
	0xa77f2d: mov edx, ebp
	0xa77f2f: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa77f3b: mov edx, dword ptr [edx]
	0xa77f3f: add edx, 0
	0xa77f45: movzx edx, byte ptr [edx]
	0xa77f4d: cmp edx, 0
	0xa77f53: je 0xa77f75
	0xa77f90: mov edx, ebp
	0xa77f92: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa77fb0: mov ebx, dword ptr [edx]
	0xa77fc6: sub ebx, 0x47273a2c
	0xa77fdf: sub ebx, 0x2b28b3ec
	0xa7801e: mov edx, ebp
	0xa78032: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa78044: mov dword ptr [edx], ebx
	0xa78046: mov edi, ebp
	0xa78048: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7804e: and dword ptr [edi], 0x5aee36f6
	0xa7805a: mov esi, ebp
	0xa7805e: mov edi, ebp
	0xa78068: add esi, 0x95
	0xa7807f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa78089: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa78093: mov esi, dword ptr [esi]
	0xa7809f: add esi, 1
	0xa780ad: movzx esi, word ptr [esi]
	0xa780b6: mov edx, ebp
	0xa780b8: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa780be: sub esi, dword ptr [edx]
	0xa780cf: xor esi, 0x6620912e
	0xa780f4: and esi, 0xffff
	0xa780fc: add edi, esi
	0xa78103: mov eax, dword ptr [edi]
	0xa7810c: mov ecx, ebp
	0xa7811e: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619b1
	0xa78124: add dword ptr [ecx], 5
	0xa7812a: jmp eax
handlers outputs:



	0xa67784: mov edi, ebp
	0xa67786: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6778c: or dword ptr [edi], 0x61606c72
	0xa677b7: mov eax, ebp
	0xa677b9: mov ebx, ebp
	0xa677bb: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa677c1: xor dword ptr [ebx], 0x526b4fe2
	0xa677c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa677cc: mov ecx, dword ptr [eax]
	0xa677ce: and ecx, 2
	0xa677d4: cmp ecx, 0
	0xa677da: je 0xa677fa
	0xa67804: mov ecx, ebp
	0xa67806: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6780c: xor dword ptr [ecx], 0x6e01bc0e
	0xa67812: mov esi, ebp
	0xa67814: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6781a: mov ebx, dword ptr [esi]
	0xa6781c: add ebx, 0x2b28b3ec
	0xa67822: mov esi, ebp
	0xa67824: mov edi, ebp
	0xa67826: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa6782c: mov ecx, dword ptr [esi]
	0xa6782e: add edi, 0xa
	0xa67834: xor ecx, 0x2b28b3ec
Load [EBP+0xa](STATIC)
	0xa6783a: mov esi, dword ptr [edi]
	0xa6783c: xor esi, 0x4ef8318c
	0xa67842: mov edi, ebp
	0xa67844: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6784a: mov dl, byte ptr [edi]
	0xa6784c: cmp dl, 0x1f
	0xa6784f: jne 0xa67857
	0xa67857: cmp dl, 0x52
	0xa6785a: jne 0xa67863
	0xa67863: cmp dl, 0x81
	0xa67866: jne 0xa6786e
	0xa6786c: mov dword ptr [ecx], ebx
	0xa6786e: cmp dl, 2
	0xa67871: jne 0xa67879
	0xa67879: mov edi, ebp
	0xa6787b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa67881: or dword ptr [edi], esi
	0xa67883: mov ecx, ebp
	0xa67885: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6788b: and dword ptr [ecx], 0x2e6dd552
	0xa67891: mov ecx, ebp
	0xa67893: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa67899: mov edx, dword ptr [ecx]
	0xa6789b: and edx, 2
	0xa678a1: cmp edx, 0
	0xa678a7: je 0xa678c9
	0xa678ad: mov ecx, ebp
	0xa678af: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa678b5: and dword ptr [ecx], 0x7f23be37
	0xa678bb: mov ecx, ebp
	0xa678bd: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa678c3: and dword ptr [ecx], 0x265e9406
	0xa678cf: mov eax, ebp
	0xa678d5: mov edx, ebp
	0xa678dd: add eax, 0xb8
	0xa678e8: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa678f0: mov eax, dword ptr [eax]
Load [EBP+0x95](STATIC)
	0xa678fb: mov edx, dword ptr [edx]
	0xa6790e: add edx, 0
	0xa6791e: movzx edx, word ptr [edx]
	0xa6794e: mov ecx, ebp
	0xa67958: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6795e: add dword ptr [ecx], edx
	0xa67968: and edx, 0xffff
	0xa67974: add eax, edx
	0xa6798a: mov ecx, dword ptr [eax]
	0xa6798c: mov edx, ebp
	0xa679a1: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619b3
	0xa679a7: add dword ptr [edx], 2
	0xa679ad: jmp ecx
handlers outputs:



	0xa61e5e: cmp al, 0
	0xa61e60: je 0xa61e71
	0xa61e8f: cmp al, 0
	0xa61e91: je 0xa61ea2
	0xa61ead: mov ecx, ebp
	0xa61eaf: add ecx, 0xa
	0xa61ecc: cmp cl, 0
	0xa61ecf: je 0xa61ee0
	0xa61ee2: mov eax, ebp
	0xa61ee4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61ee9: and dword ptr [eax], 0x4dd027b3
	0xa61f02: mov edi, ebp
	0xa61f04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61f0a: sub dword ptr [edi], 0x47fe636e
	0xa61f23: mov edx, ebp
	0xa61f2b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa61f37: mov edx, dword ptr [edx]
	0xa61f3b: add edx, 2
	0xa61f43: movzx ebx, word ptr [edx]
	0xa61f4a: mov edx, ebp
	0xa61f57: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa61f5d: sub ebx, dword ptr [edx]
	0xa61f81: mov eax, ebp
	0xa61f97: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61fa4: xor dword ptr [eax], ebx
	0xa61fcb: and ebx, 0xffff
	0xa61fd3: add ebx, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa61fdb: mov ebx, dword ptr [ebx]
	0xa61ff4: xor ebx, 0x1348fdb8
	0xa6200e: mov ecx, ebp
	0xa62017: add ecx, 0x49
Store [EBP+0x49](STATIC)
	0xa62027: mov dword ptr [ecx], ebx
	0xa6203f: mov eax, ebp
	0xa62041: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62046: xor dword ptr [eax], 0x18e309a9
	0xa6204c: mov eax, ebp
	0xa6204e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62053: mov esi, dword ptr [eax]
	0xa62055: and esi, 2
	0xa6205b: cmp esi, 0
	0xa62061: je 0xa62081
	0xa62067: mov eax, ebp
	0xa62069: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6206e: add dword ptr [eax], 0x563e158e
	0xa62074: mov eax, ebp
	0xa62076: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6207b: and dword ptr [eax], 0x3a737588
	0xa62081: mov edi, ebp
	0xa62085: mov ecx, ebp
	0xa6208d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa62099: mov ecx, dword ptr [ecx]
	0xa6209f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa620ad: mov edi, dword ptr [edi]
	0xa620b3: add ecx, 0
	0xa620c1: movzx ecx, word ptr [ecx]
	0xa620cc: mov eax, ebp
	0xa620de: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa620e9: sub ecx, dword ptr [eax]
	0xa62104: mov eax, ebp
	0xa62106: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6211b: sub dword ptr [eax], ecx
	0xa6211d: and ecx, 0xffff
	0xa62129: add edi, ecx
	0xa62132: mov eax, dword ptr [edi]
	0xa62134: mov edi, ebp
	0xa6213a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619b7
	0xa62140: add dword ptr [edi], 4
	0xa62146: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa6fdc0: cmp bl, 0
	0xa6fdc3: je 0xa6fdd4
	0xa6fde0: mov ebx, ebp
	0xa6fde4: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fdea: mov esi, dword ptr [ebx]
	0xa6fdec: and esi, 2
	0xa6fdf2: cmp esi, 0
	0xa6fdf8: je 0xa6fe1a
	0xa6fe30: mov edi, ebp
	0xa6fe32: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fe38: mov ebx, dword ptr [edi]
	0xa6fe3a: mov esi, ebp
	0xa6fe3c: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fe42: and dword ptr [esi], ebx
	0xa6fe44: mov esi, ebp
	0xa6fe4a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6fe54: mov esi, dword ptr [esi]
	0xa6fe66: add esi, 0
	0xa6fe6c: mov ecx, dword ptr [esi]
	0xa6fe7a: mov esi, ebp
	0xa6fe92: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa6fea1: sub ecx, dword ptr [esi]
	0xa6fec3: mov esi, ebp
	0xa6fec5: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fedb: xor dword ptr [esi], ecx
	0xa6feeb: xor ecx, 0x9af695a
	0xa6fef8: mov esi, ebp
	0xa6ff01: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa6ff0f: mov dword ptr [esi], ecx
	0xa6ff11: mov esi, ebp
	0xa6ff13: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff19: mov ebx, dword ptr [esi]
	0xa6ff1b: mov esi, ebp
	0xa6ff1d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6ff23: or dword ptr [esi], ebx
	0xa6ff38: mov ebx, ebp
	0xa6ff3a: add ebx, 0xa
	0xa6ff4a: cmp bl, 0
	0xa6ff4d: je 0xa6ff5e
	0xa6ff60: mov ebx, ebp
	0xa6ff64: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff6a: mov ecx, dword ptr [ebx]
	0xa6ff72: and ecx, 2
	0xa6ff7a: cmp ecx, 0
	0xa6ff80: je 0xa6ffa2
	0xa6ffae: mov ecx, ebp
	0xa6ffb0: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ffb6: mov ebx, dword ptr [ecx]
	0xa6ffba: and ebx, 2
	0xa6ffc8: cmp ebx, 0
	0xa6ffce: je 0xa6ffea
	0xa6ffea: mov edi, ebp
	0xa6ffec: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fff2: mov ebx, dword ptr [edi]
	0xa6fff4: mov eax, ebp
	0xa6fff6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fffb: add dword ptr [eax], ebx
	0xa6fffd: mov edx, ebp
	0xa6ffff: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa70005: mov esi, dword ptr [edx]
	0xa70007: mov edi, ebp
	0xa70009: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7000f: add dword ptr [edi], esi
	0xa70019: mov edx, ebp
	0xa70021: mov ecx, ebp
	0xa70029: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7002f: mov ecx, dword ptr [ecx]
	0xa70033: add edx, 0xb8
	0xa70042: add ecx, 4
Load [EBP+0xb8](STATIC)
	0xa70051: mov edx, dword ptr [edx]
	0xa70061: movzx ecx, word ptr [ecx]
	0xa70066: mov edi, ebp
	0xa7006a: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa70076: add ecx, dword ptr [edi]
	0xa70078: add ecx, 0x2227c7fc
	0xa7009d: and ecx, 0xffff
	0xa700a7: add edx, ecx
	0xa700b7: mov edi, dword ptr [edx]
	0xa700bf: mov esi, ebp
	0xa700ca: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619bd
	0xa700d0: add dword ptr [esi], 6
	0xa700d6: jmp edi
handlers outputs:



	0xa59336: mov eax, ebp
	0xa5934b: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5935a: mov eax, dword ptr [eax]
	0xa5935c: add eax, 0
	0xa59363: movzx ecx, word ptr [eax]
	0xa5936e: mov eax, ebp
	0xa59370: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa59377: xor ecx, dword ptr [eax]
	0xa59381: mov eax, ebp
	0xa59395: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa593a9: add ecx, dword ptr [eax]
	0xa593f6: and ecx, 0xffff
	0xa59405: add ecx, ebp
	0xa59415: xor ecx, 0x2b28b3ec
	0xa5942c: mov ebx, ebp
	0xa59430: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa59443: mov dword ptr [ebx], ecx
	0xa5944f: cmp cl, 0
	0xa59452: je 0xa59462
	0xa59464: mov esi, ebp
	0xa59468: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59476: mov ebx, dword ptr [esi]
	0xa5947f: and ebx, 2
	0xa59485: cmp ebx, 0
	0xa5948b: je 0xa594ad
	0xa594c5: mov eax, ebp
	0xa594c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa594cc: and dword ptr [eax], 0x6cee713a
	0xa594d2: mov eax, ebp
	0xa594e6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa594ed: mov ebx, dword ptr [eax]
	0xa594f1: and ebx, 2
	0xa594f7: cmp ebx, 0
	0xa594fd: je 0xa59517
	0xa59521: mov eax, ebp
	0xa59523: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa59528: and dword ptr [eax], 0x3e54d275
	0xa5952e: mov edx, ebp
	0xa59530: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59536: mov esi, dword ptr [edx]
	0xa5953e: and esi, 2
	0xa5954b: cmp esi, 0
	0xa59551: je 0xa59573
	0xa5957d: mov edi, ebp
	0xa5957f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59585: xor dword ptr [edi], 0x70b6bd58
	0xa595c7: mov esi, ebp
	0xa595cf: mov eax, ebp
	0xa595d1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa595e3: mov esi, dword ptr [esi]
	0xa595f3: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa595fa: mov eax, dword ptr [eax]
	0xa59604: add esi, 2
	0xa5960a: movzx esi, word ptr [esi]
	0xa59612: mov ebx, ebp
	0xa59620: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa59637: sub esi, dword ptr [ebx]
	0xa59639: add esi, 0x39cfa64e
	0xa59645: mov ebx, ebp
	0xa59650: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5966b: or dword ptr [ebx], esi
	0xa5967b: and esi, 0xffff
	0xa5968f: add eax, esi
	0xa59691: mov edi, dword ptr [eax]
	0xa596a4: mov esi, ebp
	0xa596a6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619c1
	0xa596ac: add dword ptr [esi], 4
	0xa596b2: jmp edi
handlers outputs:



	0xa505fa: mov edx, ebp
	0xa505fc: add edx, 0x49
	0xa50602: mov eax, edx
	0xa50610: mov esi, ebp
	0xa50612: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50618: or dword ptr [esi], 0x6b3164c9
	0xa5061e: mov esi, ebp
	0xa50620: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50626: mov ebx, dword ptr [esi]
	0xa50628: and ebx, 2
	0xa5062e: cmp ebx, 0
	0xa50634: je 0xa50656
	0xa50660: mov edi, ebp
	0xa50662: add edi, 0xef
Load [EBP+0xef](STATIC)
	0xa50668: mov ecx, dword ptr [edi]
	0xa5066a: cmp dl, 0
	0xa5066d: je 0xa5067e
	0xa50673: and ecx, 0x5b626a63
	0xa50680: sub esi, esi
	0xa50688: sub esi, 0x400
	0xa5068e: mov edi, 1
	0xa50693: sub edi, 4
	0xa50699: mov edx, ebp
	0xa5069b: xor edi, esi
	0xa5069d: add edx, 0x95
	0xa506a3: add edi, 1
	0xa506a9: sub ecx, edi
	0xa506ab: mov ebx, 0x400
	0xa506b0: sub ecx, ecx
	0xa506b2: and esi, 0x80
Load [EBP+0x95](STATIC)
	0xa506b8: mov edx, dword ptr [edx]
	0xa506ba: xor edi, eax
	0xa506bc: add edx, 2
	0xa506c2: movzx eax, byte ptr [edx]
	0xa506c5: and ebx, 0xffff
	0xa506cb: mov edx, ebp
	0xa506cd: add ecx, esi
	0xa506cf: sub edi, ebx
	0xa506d1: add edx, 0xa
	0xa506d7: and ebx, ecx
	0xa506d9: and ebx, edx
	0xa506db: xor ecx, esi
	0xa506dd: or ecx, 0xffff
	0xa506e3: add ecx, edi
Load [EBP+0xa](STATIC)
	0xa506e5: sub eax, dword ptr [edx]
	0xa506e7: mov edx, ebp
	0xa506e9: add edx, 0xe5
	0xa506ef: or edi, 0x28
	0xa506f5: xor ebx, ecx
	0xa506f7: add esi, 0x800
	0xa506fd: and ecx, edx
Load [EBP+0xe5](STATIC)
	0xa506ff: add eax, dword ptr [edx]
	0xa50701: sub ecx, 0x40
	0xa50707: add ecx, ecx
	0xa50709: add esi, ebx
	0xa5070b: sub esi, edi
	0xa5070d: xor edi, edi
	0xa5070f: mov edx, ebp
	0xa50711: sub ebx, 0xffff
	0xa50717: add esi, edi
	0xa50719: add esi, 0x28
	0xa5071f: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50729: sub dword ptr [edx], eax
	0xa5072b: or ebx, 0x800
	0xa50731: sub ecx, 0x1c
	0xa50737: sub ebx, ecx
	0xa5073b: mov edx, ebp
	0xa5073f: add edx, 0xe5
	0xa50747: mov edi, 0xa
	0xa5074c: and esi, edi
	0xa5074e: and esi, esi
	0xa50750: or ebx, 0x80
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50756: or dword ptr [edx], 0x4df44040
	0xa50761: mov ecx, ebp
	0xa50763: add ecx, 0x9e
	0xa50769: xor ebx, esi
Store [EBP+0x9e](STATIC)
	0xa5076d: mov byte ptr [ecx], al
	0xa50775: mov esi, ebp
	0xa50777: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50785: mov ecx, dword ptr [esi]
	0xa50787: mov esi, ebp
	0xa50789: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5078f: add dword ptr [esi], ecx
	0xa50795: sub ebx, 0x12d4875b
	0xa5079b: mov ecx, ebp
	0xa5079d: mov eax, ebp
	0xa5079f: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507a5: mov esi, dword ptr [ecx]
	0xa507a7: and esi, 2
	0xa507ad: cmp esi, 0
	0xa507b3: je 0xa507cf
	0xa507cf: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa507d4: xor ebx, dword ptr [eax]
	0xa507d6: xor ebx, eax
	0xa507ee: mov edx, ebp
	0xa507f2: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa507fd: mov esi, dword ptr [edx]
	0xa50801: and esi, 2
	0xa50807: cmp esi, 0
	0xa5080d: je 0xa5082f
	0xa5082f: mov eax, ebp
	0xa5083b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50840: or dword ptr [eax], 0x250e5a43
	0xa50846: mov edx, ebp
	0xa50848: add edx, 0xef
	0xa50850: cmp dl, 0
	0xa50853: je 0xa50864
	0xa50870: cmp bl, 0
	0xa50873: je 0xa50883
	0xa5089c: mov ecx, ebp
	0xa508a7: mov edi, ebp
	0xa508a9: add ecx, 0xb8
	0xa508b3: add edi, 0x95
Load [EBP+0xb8](STATIC)
	0xa508b9: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa508bb: mov edi, dword ptr [edi]
	0xa508bf: add edi, 0
	0xa508c5: movzx edi, word ptr [edi]
	0xa508d1: mov esi, ebp
	0xa508d3: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa508d9: xor edi, dword ptr [esi]
	0xa508db: xor edi, 0x2bd5fdb7
	0xa508e5: mov esi, ebp
	0xa508f8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50905: and dword ptr [esi], edi
	0xa50917: and edi, 0xffff
	0xa5091d: add ecx, edi
	0xa5092a: mov edi, dword ptr [ecx]
	0xa5092c: mov esi, ebp
	0xa50935: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619c4
	0xa5093b: add dword ptr [esi], 3
	0xa50941: jmp edi
handlers outputs:



	0xa7ebd7: mov eax, ebp
	0xa7ebd9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ebde: and dword ptr [eax], 0x138c2da0
	0xa7ebe4: mov edi, ebp
	0xa7ebe6: add edi, 0x49
	0xa7ebec: mov ecx, edi
	0xa7ebfa: mov esi, ebp
	0xa7ebfc: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa7ec02: mov eax, dword ptr [esi]
	0xa7ec04: xor eax, 0x9af695a
	0xa7ec09: xor eax, 0x5133b748
	0xa7ec0e: mov ebx, ebp
	0xa7ec10: add ebx, 0x79
Store [EBP+0x79](STATIC)
	0xa7ec16: mov dword ptr [ebx], eax
	0xa7ec22: mov edi, ebp
	0xa7ec24: add edi, 0xe5
	0xa7ec32: mov esi, ebp
Load [EBP+0xe5](STATIC)
	0xa7ec34: mov eax, dword ptr [edi]
	0xa7ec36: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ec3c: or ecx, dword ptr [esi]
	0xa7ec3e: and eax, 2
	0xa7ec43: cmp eax, 0
	0xa7ec48: je 0xa7ec6a
	0xa7ec76: cmp cl, 0
	0xa7ec79: je 0xa7ec8a
	0xa7ecc1: mov edx, ebp
	0xa7ece9: add edx, 0x49
Load [EBP+0x49](STATIC)
	0xa7ecfa: mov eax, dword ptr [edx]
	0xa7ed08: xor eax, 0x1348fdb8
	0xa7ed17: xor eax, 0x5133b748
	0xa7ed23: mov esi, ebp
	0xa7ed25: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa7ed2b: mov dword ptr [esi], eax
	0xa7ed43: mov eax, ebp
	0xa7ed53: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa7ed58: mov ecx, dword ptr [eax]
	0xa7ed5c: xor ecx, 0x5133b748
	0xa7ed66: mov eax, ebp
	0xa7ed72: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa7ed77: mov ebx, dword ptr [eax]
	0xa7ed81: xor ebx, 0x5133b748
	0xa7ed87: mov eax, ebp
	0xa7ed8b: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa7ed90: mov dl, byte ptr [eax]
	0xa7ed92: cmp dl, 0x1f
	0xa7ed95: jne 0xa7eda0
	0xa7eda0: cmp dl, 0x52
	0xa7eda3: jne 0xa7edb3
	0xa7edb3: cmp dl, 0x81
	0xa7edb6: jne 0xa7edbf
	0xa7edbc: add ecx, ebx
	0xa7edbe: pushfd
	0xa7eddd: sub ecx, 0x5a71c46e
	0xa7edee: mov eax, ebp
	0xa7edfe: add eax, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7ee11: mov dword ptr [eax], ecx
	0xa7ee18: mov ecx, ebp
	0xa7ee22: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ee28: or dword ptr [ecx], 0x6cfabf1a
	0xa7ee32: pop ebx
	0xa7ee33: mov esi, ebp
	0xa7ee3e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7ee44: mov esi, dword ptr [esi]
	0xa7ee46: add esi, 0
	0xa7ee4c: movzx esi, byte ptr [esi]
	0xa7ee4f: cmp esi, 0
	0xa7ee55: je 0xa7ee75
	0xa7ee99: mov esi, ebp
	0xa7eeaa: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7eeb0: mov ecx, dword ptr [esi]
	0xa7eec6: add ecx, 0x5a71c46e
	0xa7eed7: sub ecx, 0x2b28b3ec
	0xa7eee9: mov edi, ebp
	0xa7eef1: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7eef7: mov dword ptr [edi], ecx
	0xa7eef9: mov ebx, ebp
	0xa7eefb: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7ef01: mov esi, dword ptr [ebx]
	0xa7ef03: and esi, 2
	0xa7ef09: cmp esi, 0
	0xa7ef0f: je 0xa7ef31
	0xa7ef3a: mov edx, ebp
	0xa7ef4c: add edx, 0x95
	0xa7ef58: mov esi, ebp
	0xa7ef6a: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7ef78: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa7ef7a: mov edx, dword ptr [edx]
	0xa7ef82: add edx, 1
	0xa7ef90: movzx edx, word ptr [edx]
	0xa7ef95: mov edi, ebp
	0xa7efa1: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7efb3: sub edx, dword ptr [edi]
	0xa7efb7: sub edx, 0x49bd6ae7
	0xa7efc8: mov edi, ebp
	0xa7efe0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7efe6: add dword ptr [edi], edx
	0xa7eff1: and edx, 0xffff
	0xa7f006: add esi, edx
	0xa7f01a: mov ebx, dword ptr [esi]
	0xa7f01e: mov eax, ebp
	0xa7f02e: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619c9
	0xa7f033: add dword ptr [eax], 5
	0xa7f039: jmp ebx
handlers outputs:



	0xa6d295: mov ebx, ebp
	0xa6d297: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d29d: add dword ptr [ebx], 0x3acd011
	0xa6d2a3: mov esi, ebp
	0xa6d2a5: mov edi, ebp
	0xa6d2a7: add edi, 0xe5
	0xa6d2ad: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6d2b3: mov ebx, dword ptr [esi]
Load [EBP+0xe5](STATIC)
	0xa6d2b5: mov esi, dword ptr [edi]
	0xa6d2b7: mov edi, ebp
	0xa6d2b9: add ebx, 0x2b28b3ec
	0xa6d2bf: add edi, 0xa
	0xa6d2c5: mov ecx, ebp
	0xa6d2c7: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa6d2cd: mov eax, dword ptr [ecx]
	0xa6d2cf: xor eax, 0x2b28b3ec
	0xa6d2d4: mov edx, ebp
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d2d6: xor dword ptr [edi], esi
	0xa6d2d8: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6d2de: mov cl, byte ptr [edx]
	0xa6d2e0: cmp cl, 0x1f
	0xa6d2e3: jne 0xa6d2eb
	0xa6d2eb: cmp cl, 0x52
	0xa6d2ee: jne 0xa6d2f7
	0xa6d2f7: cmp cl, 0x81
	0xa6d2fa: jne 0xa6d302
	0xa6d300: mov dword ptr [eax], ebx
	0xa6d302: cmp cl, 2
	0xa6d305: jne 0xa6d30d
	0xa6d339: mov edi, ebp
	0xa6d33b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d341: sub dword ptr [edi], 0x2fa72170
	0xa6d359: mov esi, ebp
	0xa6d35b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6d361: and dword ptr [esi], 0x4ec2171f
	0xa6d36f: mov edi, ebp
	0xa6d371: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6d377: mov eax, dword ptr [edi]
	0xa6d379: mov ecx, ebp
	0xa6d37d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d383: sub dword ptr [ecx], eax
	0xa6d38c: mov edi, ebp
	0xa6d395: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa6d39b: mov edi, dword ptr [edi]
	0xa6d3a8: add edi, 0
	0xa6d3c0: movzx edi, word ptr [edi]
	0xa6d3c3: mov eax, ebp
	0xa6d3c9: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa6d3e4: mov eax, dword ptr [eax]
	0xa6d3ee: mov ecx, ebp
	0xa6d3f0: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa6d3fe: xor edi, dword ptr [ecx]
	0xa6d408: sub edi, 0x1de9519
	0xa6d415: mov edx, ebp
	0xa6d41d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6d42b: add dword ptr [edx], edi
	0xa6d43b: and edi, 0xffff
	0xa6d441: add eax, edi
	0xa6d457: mov edi, dword ptr [eax]
	0xa6d45f: mov esi, ebp
	0xa6d461: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619cb
	0xa6d467: add dword ptr [esi], 2
	0xa6d46d: jmp edi
handlers outputs:



	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619ce
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



	0xa4ec96: mov edx, ebp
	0xa4ec98: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4eca0: mov cl, byte ptr [edx]
	0xa4ecdb: mov edi, ebp
	0xa4ecdd: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa4ece3: sub ecx, dword ptr [edi]
	0xa4ecf9: cmp cl, 0
	0xa4ecfc: je 0xa4ed0c
	0xa4ed1c: mov ecx, ebp
	0xa4ed1e: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed24: and dword ptr [ecx], 0x7d68145e
	0xa4ed2c: mov ebx, ebp
	0xa4ed2e: add ebx, 0x9e
	0xa4ed3d: mov esi, ebp
	0xa4ed3f: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed45: mov esi, dword ptr [esi]
	0xa4ed49: add esi, 3
	0xa4ed4f: movzx eax, word ptr [esi]
	0xa4ed5a: mov ecx, ebp
	0xa4ed5c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4ed62: xor eax, dword ptr [ecx]
	0xa4ed64: mov ecx, ebp
	0xa4ed66: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ed6c: sub dword ptr [ecx], eax
	0xa4ed6e: mov edi, ebp
	0xa4ed70: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ed76: add dword ptr [edi], 0x3394b0f2
	0xa4ed7c: and eax, 0xffff
	0xa4ed81: add eax, ebp
Load [EBP+0xac](VM_REGISTER)
	0xa4ed83: mov eax, dword ptr [eax]
	0xa4ed85: mov edx, ebp
	0xa4ed87: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4ed8d: mov edx, dword ptr [edx]
	0xa4ed8f: add edx, 2
	0xa4ed95: mov cl, byte ptr [edx]
	0xa4ed97: cmp cl, 0x1f
	0xa4ed9a: jne 0xa4eda2
	0xa4eda2: cmp cl, 0x52
	0xa4eda5: jne 0xa4edae
	0xa4edae: cmp cl, 0x81
	0xa4edb1: jne 0xa4edb9
Deref(t113,ds)
	0xa4edb7: mov eax, dword ptr [eax]
	0xa4edb9: xor eax, 0x9af695a
	0xa4edbe: mov edi, ebp
	0xa4edc0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa4edc6: mov dword ptr [edi], eax
	0xa4edd2: cmp bl, 0
	0xa4edd5: je 0xa4ede6
	0xa4ede8: mov eax, ebp
	0xa4edf2: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4edf7: mov ecx, dword ptr [eax]
	0xa4edf9: and ecx, 2
	0xa4edff: cmp ecx, 0
	0xa4ee05: je 0xa4ee25
	0xa4ee0b: mov eax, ebp
	0xa4ee0d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee12: xor dword ptr [eax], 0x3b40f517
	0xa4ee18: mov eax, ebp
	0xa4ee1a: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4ee1f: and dword ptr [eax], 0x6bfd7ac4
	0xa4ee33: mov esi, ebp
	0xa4ee35: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ee3b: mov cl, byte ptr [esi]
	0xa4ee47: cmp cl, 0
	0xa4ee4a: je 0xa4ee5a
	0xa4ee76: mov edx, ebp
	0xa4ee7e: add edx, 0xb8
	0xa4ee8c: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa4ee98: mov edx, dword ptr [edx]
	0xa4ee9c: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa4eeb1: mov eax, dword ptr [eax]
	0xa4eeb3: add eax, 0
	0xa4eec2: movzx eax, word ptr [eax]
	0xa4eecb: mov ebx, ebp
	0xa4eed1: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa4eed7: xor eax, dword ptr [ebx]
	0xa4eeeb: add eax, 0x68f36852
	0xa4ef02: mov ebx, ebp
	0xa4ef08: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4ef0e: sub dword ptr [ebx], eax
	0xa4ef1c: and eax, 0xffff
	0xa4ef26: add edx, eax
	0xa4ef28: mov eax, dword ptr [edx]
	0xa4ef2c: mov edx, ebp
	0xa4ef38: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619d3
	0xa4ef3e: add dword ptr [edx], 5
	0xa4ef44: jmp eax
handlers outputs:



	0xa7c633: mov ecx, ebp
	0xa7c635: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c63b: mov ebx, dword ptr [ecx]
	0xa7c646: and ebx, 2
	0xa7c654: cmp ebx, 0
	0xa7c65a: je 0xa7c67c
	0xa7c680: mov esi, ebp
	0xa7c682: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c688: mov edi, dword ptr [esi]
	0xa7c68a: or edi, 0x585dd1e3
	0xa7c690: mov ecx, ebp
	0xa7c692: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c698: add dword ptr [ecx], edi
	0xa7c6a8: mov edx, ebp
	0xa7c6ac: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c6b8: mov eax, dword ptr [edx]
	0xa7c6ba: add eax, 0x6efcee4e
	0xa7c6bf: mov ecx, ebp
	0xa7c6c1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c6c9: sub dword ptr [ecx], eax
	0xa7c6d5: mov ebx, ebp
	0xa7c6e7: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c6fb: mov ebx, dword ptr [ebx]
	0xa7c6fd: add ebx, 0
	0xa7c709: movzx eax, word ptr [ebx]
	0xa7c729: mov edx, ebp
	0xa7c72f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c735: add eax, dword ptr [edx]
	0xa7c74c: mov ebx, ebp
	0xa7c754: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c766: add dword ptr [ebx], eax
	0xa7c792: and eax, 0xffff
	0xa7c7a0: add eax, ebp
	0xa7c7a4: xor eax, 0x2b28b3ec
	0xa7c7bb: mov edi, ebp
	0xa7c7cd: add edi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c7d3: mov dword ptr [edi], eax
	0xa7c7e7: mov esi, ebp
	0xa7c7e9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c7ef: mov edx, dword ptr [esi]
	0xa7c7f1: and edx, 2
	0xa7c7f7: cmp edx, 0
	0xa7c7fd: je 0xa7c81f
	0xa7c803: mov esi, ebp
	0xa7c805: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c80b: sub dword ptr [esi], 0x2ccb4ab9
	0xa7c811: mov esi, ebp
	0xa7c813: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c819: or dword ptr [esi], 0x7b50d24d
	0xa7c81f: mov edi, ebp
	0xa7c821: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c827: mov ecx, dword ptr [edi]
	0xa7c829: and ecx, 2
	0xa7c82f: cmp ecx, 0
	0xa7c835: je 0xa7c857
	0xa7c83b: mov edi, ebp
	0xa7c83d: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c843: or dword ptr [edi], 0x146c05c7
	0xa7c849: mov edi, ebp
	0xa7c84b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c851: add dword ptr [edi], 0x1ce889ec
	0xa7c857: mov edi, ebp
	0xa7c863: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c869: mov eax, dword ptr [edi]
	0xa7c86b: mov esi, ebp
	0xa7c86d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c873: add dword ptr [esi], eax
	0xa7c875: mov edi, ebp
	0xa7c877: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c87d: mov eax, dword ptr [edi]
	0xa7c87f: mov edx, ebp
	0xa7c881: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c887: or dword ptr [edx], 0x4c3e24ce
	0xa7c88d: and eax, 2
	0xa7c892: cmp eax, 0
	0xa7c897: je 0xa7c8b9
	0xa7c89d: mov edi, ebp
	0xa7c89f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8a5: sub dword ptr [edi], 0x7b88e838
	0xa7c8ab: mov edi, ebp
	0xa7c8ad: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c8b3: or dword ptr [edi], 0x7c8307dc
	0xa7c8b9: mov esi, ebp
	0xa7c8bb: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8c1: sub dword ptr [esi], 0x472eb0b6
	0xa7c8c7: mov eax, ebp
	0xa7c8c9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c8ce: mov ecx, dword ptr [eax]
	0xa7c8d0: sub ecx, 0x322439ec
	0xa7c8d6: mov esi, ebp
	0xa7c8d8: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c8de: add dword ptr [esi], ecx
	0xa7c8eb: mov edi, ebp
	0xa7c8ed: mov ecx, ebp
	0xa7c8f6: add edi, 0xb8
	0xa7c908: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c910: mov ecx, dword ptr [ecx]
	0xa7c918: add ecx, 2
	0xa7c920: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa7c929: mov edi, dword ptr [edi]
	0xa7c92d: mov eax, ebp
	0xa7c92f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c936: xor ecx, dword ptr [eax]
	0xa7c95a: mov ebx, ebp
	0xa7c95c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c962: add dword ptr [ebx], ecx
	0xa7c977: and ecx, 0xffff
	0xa7c97f: add edi, ecx
	0xa7c985: mov ebx, dword ptr [edi]
	0xa7c987: mov edi, ebp
	0xa7c999: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619d7
	0xa7c99f: add dword ptr [edi], 4
	0xa7c9a5: jmp ebx
handlers outputs:



	0xa61e5e: cmp al, 0
	0xa61e60: je 0xa61e71
	0xa61e8f: cmp al, 0
	0xa61e91: je 0xa61ea2
	0xa61ead: mov ecx, ebp
	0xa61eaf: add ecx, 0xa
	0xa61ecc: cmp cl, 0
	0xa61ecf: je 0xa61ee0
	0xa61ee2: mov eax, ebp
	0xa61ee4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61ee9: and dword ptr [eax], 0x4dd027b3
	0xa61f02: mov edi, ebp
	0xa61f04: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61f0a: sub dword ptr [edi], 0x47fe636e
	0xa61f23: mov edx, ebp
	0xa61f2b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa61f37: mov edx, dword ptr [edx]
	0xa61f3b: add edx, 2
	0xa61f43: movzx ebx, word ptr [edx]
	0xa61f4a: mov edx, ebp
	0xa61f57: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa61f5d: sub ebx, dword ptr [edx]
	0xa61f81: mov eax, ebp
	0xa61f97: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa61fa4: xor dword ptr [eax], ebx
	0xa61fcb: and ebx, 0xffff
	0xa61fd3: add ebx, ebp
Load [EBP+0x51](VM_REGISTER)
	0xa61fdb: mov ebx, dword ptr [ebx]
	0xa61ff4: xor ebx, 0x1348fdb8
	0xa6200e: mov ecx, ebp
	0xa62017: add ecx, 0x49
Store [EBP+0x49](STATIC)
	0xa62027: mov dword ptr [ecx], ebx
	0xa6203f: mov eax, ebp
	0xa62041: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62046: xor dword ptr [eax], 0x18e309a9
	0xa6204c: mov eax, ebp
	0xa6204e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62053: mov esi, dword ptr [eax]
	0xa62055: and esi, 2
	0xa6205b: cmp esi, 0
	0xa62061: je 0xa62081
	0xa62067: mov eax, ebp
	0xa62069: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6206e: add dword ptr [eax], 0x563e158e
	0xa62074: mov eax, ebp
	0xa62076: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6207b: and dword ptr [eax], 0x3a737588
	0xa62081: mov edi, ebp
	0xa62085: mov ecx, ebp
	0xa6208d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa62099: mov ecx, dword ptr [ecx]
	0xa6209f: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa620ad: mov edi, dword ptr [edi]
	0xa620b3: add ecx, 0
	0xa620c1: movzx ecx, word ptr [ecx]
	0xa620cc: mov eax, ebp
	0xa620de: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa620e9: sub ecx, dword ptr [eax]
	0xa62104: mov eax, ebp
	0xa62106: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6211b: sub dword ptr [eax], ecx
	0xa6211d: and ecx, 0xffff
	0xa62129: add edi, ecx
	0xa62132: mov eax, dword ptr [edi]
	0xa62134: mov edi, ebp
	0xa6213a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619db
	0xa62140: add dword ptr [edi], 4
	0xa62146: jmp eax
handlers outputs:



	0xa5e1d3: mov edi, ebp
	0xa5e1d5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e1db: mov eax, dword ptr [edi]
	0xa5e1dd: mov esi, ebp
	0xa5e1df: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1e5: sub dword ptr [esi], eax
	0xa5e1e7: mov ebx, ebp
	0xa5e1e9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e1ef: and dword ptr [ebx], 0x2b76c7fb
	0xa5e21d: mov ecx, ebp
	0xa5e221: mov ebx, ebp
	0xa5e22e: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa5e238: mov edx, dword ptr [ecx]
	0xa5e245: xor edx, 0x1348fdb8
	0xa5e25f: add ebx, 0x79
	0xa5e270: xor edx, 0x772d9eaf
	0xa5e280: mov edi, ebp
Load [EBP+0x79](STATIC)
	0xa5e28b: mov ecx, dword ptr [ebx]
	0xa5e294: add edi, 0x49
	0xa5e2a6: xor ecx, 0x9af695a
	0xa5e2c1: sub ecx, 0x772d9eaf
Store [EBP+0x49](STATIC)
	0xa5e2d1: mov dword ptr [edi], edx
	0xa5e2de: mov edi, ebp
	0xa5e2e0: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5e2ef: mov dword ptr [edi], ecx
	0xa5e2f1: mov edi, ebp
	0xa5e2f3: mov eax, ebp
	0xa5e2f5: add edi, 0x79
	0xa5e2fb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e300: mov ecx, dword ptr [eax]
	0xa5e302: mov eax, ebp
Load [EBP+0x79](STATIC)
	0xa5e304: mov esi, dword ptr [edi]
	0xa5e306: add esi, 0x772d9eaf
	0xa5e30c: sub esi, 0x4e577e5
	0xa5e312: mov edx, ebp
	0xa5e314: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e319: add dword ptr [eax], ecx
	0xa5e31b: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e321: mov dword ptr [edx], esi
	0xa5e323: add ebx, eax
	0xa5e325: pushfd
	0xa5e328: mov ebx, ebp
	0xa5e332: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e338: mov edx, dword ptr [ebx]
	0xa5e33a: and edx, 0x486a9870
	0xa5e340: mov ecx, ebp
	0xa5e342: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e348: or dword ptr [ecx], edx
	0xa5e34a: mov eax, ebp
	0xa5e34c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e351: sub dword ptr [eax], 0x4af92329
	0xa5e359: mov edx, ebp
	0xa5e35b: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e368: mov eax, dword ptr [edx]
	0xa5e36a: and eax, 2
	0xa5e36f: cmp eax, 0
	0xa5e374: je 0xa5e390
	0xa5e390: mov ecx, ebp
	0xa5e392: add ecx, 0x49
	0xa5e3b9: cmp cl, 0
	0xa5e3bc: je 0xa5e3cd
	0xa5e3cf: mov esi, ebp
	0xa5e3d1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5e3d7: mov edx, dword ptr [esi]
	0xa5e3d9: mov edi, ebp
	0xa5e3db: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e3e1: xor dword ptr [edi], edx
	0xa5e3f0: mov edi, ebp
	0xa5e400: add edi, 0x2d
	0xa5e41b: mov ebx, ebp
Load [EBP+0x2d](STATIC)
	0xa5e42c: mov eax, dword ptr [edi]
	0xa5e436: pop edi
	0xa5e437: add ebx, 0x95
	0xa5e445: add eax, 0x4e577e5
	0xa5e44a: sub eax, 0x2b28b3ec
	0xa5e455: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e457: mov ebx, dword ptr [ebx]
	0xa5e469: add edx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5e471: mov dword ptr [edx], eax
	0xa5e473: add ebx, 2
	0xa5e479: movzx ebx, byte ptr [ebx]
	0xa5e47c: cmp ebx, 0
	0xa5e482: je 0xa5e4fa
	0xa5e4fa: mov edi, ebp
	0xa5e4fc: add edi, 0x95
	0xa5e504: mov edx, ebp
Load [EBP+0x95](STATIC)
	0xa5e517: mov edi, dword ptr [edi]
	0xa5e523: add edi, 3
	0xa5e533: movzx edi, word ptr [edi]
	0xa5e538: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5e544: mov edx, dword ptr [edx]
	0xa5e551: mov eax, ebp
	0xa5e55b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5e562: add edi, dword ptr [eax]
	0xa5e564: mov ecx, ebp
	0xa5e571: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5e579: and dword ptr [ecx], edi
	0xa5e587: and edi, 0xffff
	0xa5e58d: add edx, edi
	0xa5e59b: mov edi, dword ptr [edx]
	0xa5e5a8: mov esi, ebp
	0xa5e5aa: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619e0
	0xa5e5b0: add dword ptr [esi], 5
	0xa5e5b6: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa8047b: mov edx, ebp
	0xa8047f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80485: mov ebx, dword ptr [edx]
	0xa80487: xor ebx, 0x42c2da8b
	0xa80495: cmp dl, 0
	0xa80498: je 0xa804a9
	0xa804ab: mov esi, ebp
	0xa804ad: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa804b3: sub dword ptr [esi], ebx
	0xa804d7: mov esi, ebp
	0xa804d9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa804df: sub dword ptr [esi], 0x21770846
	0xa804e5: mov edi, ebp
	0xa804e7: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa804ed: mov esi, dword ptr [edi]
	0xa804ef: and esi, 2
	0xa804f5: cmp esi, 0
	0xa804fb: je 0xa8051d
	0xa80501: mov edi, ebp
	0xa80503: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80509: and dword ptr [edi], 0x581a4311
	0xa8050f: mov edi, ebp
	0xa80511: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80517: add dword ptr [edi], 0x34964937
	0xa8051d: mov eax, ebp
	0xa8051f: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80524: mov esi, dword ptr [eax]
	0xa80526: and esi, 2
	0xa8052c: cmp esi, 0
	0xa80532: je 0xa80552
	0xa80538: mov eax, ebp
	0xa8053a: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8053f: xor dword ptr [eax], 0x3d4bda1a
	0xa80545: mov eax, ebp
	0xa80547: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8054c: or dword ptr [eax], 0x7d5a262b
	0xa80580: mov ecx, ebp
	0xa80582: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80588: xor dword ptr [ecx], 0x52394180
	0xa8058e: mov esi, ebp
	0xa80590: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80596: mov edi, dword ptr [esi]
	0xa80598: mov ebx, ebp
	0xa8059a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa805a0: or dword ptr [ebx], edi
	0xa805aa: mov edi, ebp
	0xa805ae: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa805b4: mov ebx, dword ptr [edi]
	0xa805b6: sub ebx, 0x31568d1a
	0xa805bc: mov eax, ebp
	0xa805be: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa805c3: sub dword ptr [eax], ebx
	0xa805f0: mov edi, ebp
	0xa805f2: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa805f8: mov ecx, dword ptr [edi]
	0xa80601: add ecx, 0x2b28b3ec
	0xa80609: mov esi, ebp
	0xa80615: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa80622: mov eax, dword ptr [esi]
	0xa8062c: xor eax, 0x2b28b3ec
	0xa80633: mov esi, ebp
	0xa80637: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa8063f: mov bl, byte ptr [esi]
	0xa80641: cmp bl, 0x1f
	0xa80644: jne 0xa80661
	0xa80661: cmp bl, 0x52
	0xa80664: jne 0xa8066f
	0xa8066f: cmp bl, 0x81
	0xa80672: jne 0xa806b6
	0xa80684: mov dword ptr [eax], ecx
	0xa806b6: cmp bl, 2
	0xa806b9: jne 0xa806cd
	0xa806de: cmp bl, 0
	0xa806e1: je 0xa806f2
	0xa8071f: mov eax, ebp
	0xa8072c: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa8073b: mov eax, dword ptr [eax]
	0xa80743: add eax, 0
	0xa80756: mov ebx, ebp
	0xa80758: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa80772: mov ebx, dword ptr [ebx]
	0xa8078b: movzx eax, word ptr [eax]
	0xa8078e: mov edx, ebp
	0xa80790: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa807a4: sub eax, dword ptr [edx]
	0xa807ba: add eax, 0x30b3abb7
	0xa807c8: mov ecx, ebp
	0xa807d1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa807d9: or dword ptr [ecx], eax
	0xa807e1: and eax, 0xffff
	0xa807ea: add ebx, eax
	0xa807f0: mov edi, dword ptr [ebx]
	0xa807f7: mov ecx, ebp
	0xa807ff: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619e2
	0xa80805: add dword ptr [ecx], 2
	0xa8080b: jmp edi
handlers outputs:



	0xa60c07: mov edi, ebp
	0xa60c09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c0f: mov esi, dword ptr [edi]
	0xa60c11: and esi, 2
	0xa60c17: cmp esi, 0
	0xa60c1d: je 0xa60c3f
	0xa60c23: mov edi, ebp
	0xa60c25: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c2b: and dword ptr [edi], 0x38beec75
	0xa60c31: mov edi, ebp
	0xa60c33: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c39: sub dword ptr [edi], 0x58680c81
	0xa60c3f: mov esi, ebp
	0xa60c43: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c49: mov ecx, dword ptr [esi]
	0xa60c4b: and ecx, 2
	0xa60c51: cmp ecx, 0
	0xa60c57: je 0xa60c73
	0xa60c65: mov esi, ebp
	0xa60c67: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c6d: or dword ptr [esi], 0x134d0235
	0xa60c7d: mov esi, ebp
	0xa60c7f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60c8d: mov ecx, dword ptr [esi]
	0xa60c8f: sub ecx, 0x2e531dd6
	0xa60c95: mov edx, ebp
	0xa60c97: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c9d: or dword ptr [edx], ecx
	0xa60c9f: mov edi, ebp
	0xa60ca1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ca7: and dword ptr [edi], 0x2fc6b817
	0xa60cad: mov edi, ebp
	0xa60caf: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cb5: mov edx, dword ptr [edi]
	0xa60cb7: mov esi, ebp
	0xa60cb9: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60cbf: sub dword ptr [esi], edx
	0xa60cc1: mov edx, ebp
	0xa60cc3: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa60cc9: mov edi, dword ptr [edx]
	0xa60ccb: and edi, 0x7024bcb4
	0xa60cd1: mov ebx, ebp
	0xa60cd3: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60cd9: sub dword ptr [ebx], edi
	0xa60cdb: mov edx, ebp
	0xa60cdd: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ce3: or dword ptr [edx], 0x5703a393
	0xa60ce9: mov esi, ebp
	0xa60cf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cfb: mov edi, dword ptr [esi]
	0xa60d07: and edi, 2
	0xa60d0d: cmp edi, 0
	0xa60d13: je 0xa60d2f
	0xa60d19: mov esi, ebp
	0xa60d1b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60d21: and dword ptr [esi], 0x33152bc5
	0xa60d31: mov esi, ebp
	0xa60d35: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa60d3d: mov esi, dword ptr [esi]
	0xa60d52: add esi, 0
	0xa60d74: movzx ecx, byte ptr [esi]
	0xa60d7d: mov esi, ebp
	0xa60d8d: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60da0: sub ecx, dword ptr [esi]
	0xa60db2: mov esi, ebp
	0xa60dba: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60dc5: xor ecx, dword ptr [esi]
	0xa60dc9: mov esi, ebp
	0xa60dd1: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60dd9: or dword ptr [esi], ecx
	0xa60de3: mov esi, ebp
	0xa60def: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60e05: xor dword ptr [esi], 0x4c9a2b11
	0xa60e0b: mov esi, ebp
	0xa60e1b: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa60e2b: mov byte ptr [esi], cl
	0xa60e35: mov edi, ebp
	0xa60e37: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e3f: mov edx, dword ptr [edi]
	0xa60e41: cmp dl, 0
	0xa60e44: je 0xa60e55
	0xa60e70: mov edi, ebp
	0xa60e72: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e78: mov ebx, dword ptr [edi]
	0xa60e7a: and ebx, 2
	0xa60e80: cmp ebx, 0
	0xa60e86: je 0xa60ea8
	0xa60ea8: mov ecx, ebp
	0xa60ebb: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa60ec1: mov ebx, dword ptr [ecx]
	0xa60ec3: sub ebx, 0x2c7c5d51
	0xa60ec9: mov edx, ebp
	0xa60ecb: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ed1: and dword ptr [edx], ebx
	0xa60ed3: mov ebx, ebp
	0xa60ed5: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60edb: or dword ptr [ebx], 0x75104d02
	0xa60eeb: mov edi, ebp
	0xa60eed: mov esi, ebp
	0xa60ef9: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa60f01: mov edi, dword ptr [edi]
	0xa60f0d: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa60f17: mov esi, dword ptr [esi]
	0xa60f21: add edi, 1
	0xa60f2d: movzx edi, word ptr [edi]
	0xa60f35: mov ebx, ebp
	0xa60f3b: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa60f4d: sub edi, dword ptr [ebx]
	0xa60f59: add edi, 0x6f9bcb8e
	0xa60f67: mov edx, ebp
	0xa60f81: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60f8f: add dword ptr [edx], edi
	0xa60fa3: and edi, 0xffff
	0xa60fb7: add esi, edi
	0xa60fc7: mov ecx, dword ptr [esi]
	0xa60fcb: mov edx, ebp
	0xa60fcf: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619e5
	0xa60fd5: add dword ptr [edx], 3
	0xa60fdb: jmp ecx
handlers outputs:



	0xa73f2b: cmp cl, 0
	0xa73f2e: je 0xa73f3f
	0xa73f41: mov edx, ebp
	0xa73f43: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73f49: or dword ptr [edx], 0x466e33c6
	0xa73f4f: mov ecx, ebp
	0xa73f51: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73f57: mov eax, dword ptr [ecx]
	0xa73f5f: mov ecx, ebp
	0xa73f6d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73f73: sub dword ptr [ecx], eax
	0xa73f82: mov edx, ebp
	0xa73f8d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa73f93: mov edx, dword ptr [edx]
	0xa73f95: add edx, 0
	0xa73f9b: movzx edi, word ptr [edx]
	0xa73fa5: add edi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa73fab: mov esp, dword ptr [edi]
	0xa73fad: mov eax, ebp
	0xa73faf: add eax, 0xe5
	0xa73fb4: mov ebx, ebp
	0xa73fb6: add ebx, 0xef
	0xa73fbe: cmp bl, 0
	0xa73fc1: je 0xa73fd2
Load [EBP+0xe5](STATIC)
	0xa73fd4: mov ecx, dword ptr [eax]
	0xa73fd6: and ecx, 2
	0xa73fdc: cmp ecx, 0
	0xa73fe2: je 0xa74002
	0xa73fe8: mov eax, ebp
	0xa73fea: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73fef: add dword ptr [eax], 0x583b7db1
	0xa73ff5: mov eax, ebp
	0xa73ff7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73ffc: add dword ptr [eax], 0x18a971b2
	0xa7400e: mov ebx, ebp
	0xa74018: add ebx, 0xb8
	0xa74029: mov eax, ebp
	0xa74031: add eax, 0x95
Load [EBP+0xb8](STATIC)
	0xa7403d: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa7404b: mov eax, dword ptr [eax]
	0xa7404f: add eax, 2
	0xa7405b: movzx eax, word ptr [eax]
	0xa74068: mov edx, ebp
	0xa74070: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa74080: add eax, dword ptr [edx]
	0xa7408a: xor eax, 0x488bb361
	0xa74091: mov edx, ebp
	0xa740a0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa740b6: xor dword ptr [edx], eax
	0xa740c6: and eax, 0xffff
	0xa740d7: add ebx, eax
	0xa740e5: mov edx, dword ptr [ebx]
	0xa740fa: mov esi, ebp
	0xa74100: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619e9
	0xa74106: add dword ptr [esi], 4
	0xa7410c: jmp edx
handlers outputs:



	0xa7bb10: mov esi, ebp
	0xa7bb12: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb18: mov edi, dword ptr [esi]
	0xa7bb1a: mov ebx, ebp
	0xa7bb1c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb22: and dword ptr [ebx], edi
	0xa7bb2c: mov ebx, ebp
	0xa7bb30: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb36: and dword ptr [ebx], 0x2bdcf64a
	0xa7bb3c: mov edi, ebp
	0xa7bb4e: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bb56: mov edi, dword ptr [edi]
	0xa7bb58: add edi, 2
	0xa7bb5e: movzx ebx, word ptr [edi]
	0xa7bb61: mov eax, ebp
	0xa7bb63: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7bb68: sub ebx, dword ptr [eax]
	0xa7bb6a: mov ecx, ebp
	0xa7bb6c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb72: xor ebx, dword ptr [ecx]
	0xa7bb7c: mov ecx, ebp
	0xa7bb7e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7bb84: xor dword ptr [ecx], 0x5c1c708c
	0xa7bb8a: and ebx, 0xffff
	0xa7bb90: add ebx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa7bb92: mov ebx, dword ptr [ebx]
	0xa7bb94: xor ebx, 0x1348fdb8
	0xa7bb9a: mov eax, ebp
	0xa7bb9c: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa7bba1: mov dword ptr [eax], ebx
	0xa7bba3: mov eax, ebp
	0xa7bba5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bbb0: or dword ptr [eax], 0x217f8076
	0xa7bbca: mov ebx, ebp
	0xa7bbcc: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa7bbd2: mov eax, dword ptr [ebx]
	0xa7bbde: cmp al, 0
	0xa7bbe0: je 0xa7bbf1
	0xa7bbf3: mov esi, ebp
	0xa7bbf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bbfb: mov ecx, dword ptr [esi]
	0xa7bbfd: mov ebx, ebp
	0xa7bbff: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bc05: xor dword ptr [ebx], ecx
	0xa7bc07: mov edi, ebp
	0xa7bc09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bc0f: mov esi, dword ptr [edi]
	0xa7bc11: and esi, 2
	0xa7bc17: cmp esi, 0
	0xa7bc1d: je 0xa7bc39
	0xa7bc47: mov edx, ebp
	0xa7bc51: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7bc66: mov edx, dword ptr [edx]
	0xa7bc72: mov esi, ebp
	0xa7bc78: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bc8c: mov esi, dword ptr [esi]
	0xa7bc96: add esi, 0
	0xa7bca8: movzx esi, word ptr [esi]
	0xa7bcd1: sub esi, 0x1945a008
	0xa7bce9: mov ebx, ebp
	0xa7bcf9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bd09: add dword ptr [ebx], esi
	0xa7bd0b: and esi, 0xffff
	0xa7bd16: add edx, esi
	0xa7bd1c: mov esi, dword ptr [edx]
	0xa7bd20: mov edi, ebp
	0xa7bd24: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619ed
	0xa7bd2a: add dword ptr [edi], 4
	0xa7bd30: jmp esi
handlers outputs:



	0xa4fab9: mov eax, ebp
	0xa4fac3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4fac8: mov edi, dword ptr [eax]
	0xa4faca: cmp dl, 0
	0xa4facd: je 0xa4fade
	0xa4fae0: and edi, 2
	0xa4fae6: cmp edi, 0
	0xa4faec: je 0xa4fb0c
	0xa4fb16: mov edi, ebp
	0xa4fb1a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb2d: mov edi, dword ptr [edi]
	0xa4fb37: add edi, 2
	0xa4fb44: movzx ecx, word ptr [edi]
	0xa4fb51: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa4fb5a: mov esp, dword ptr [ecx]
	0xa4fb78: mov esi, ebp
	0xa4fb82: mov edx, ebp
	0xa4fb8a: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb94: mov edx, dword ptr [edx]
	0xa4fba5: add edx, 0
	0xa4fbab: movzx edx, word ptr [edx]
	0xa4fbb4: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fbc0: mov esi, dword ptr [esi]
	0xa4fbe0: sub edx, 0x1db2fc37
	0xa4fbe6: mov eax, ebp
	0xa4fbea: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4fbf1: and dword ptr [eax], edx
	0xa4fbff: and edx, 0xffff
	0xa4fc09: add esi, edx
	0xa4fc15: mov edi, dword ptr [esi]
	0xa4fc20: mov esi, ebp
	0xa4fc28: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619f1
	0xa4fc2e: add dword ptr [esi], 4
	0xa4fc34: jmp edi
handlers outputs:



	0xa57e8a: cmp dl, 0
	0xa57e8d: je 0xa57e9e
	0xa57ea0: mov edi, ebp
	0xa57ea2: mov eax, ebp
	0xa57ea4: add eax, 0xef
	0xa57eab: cmp al, 0
	0xa57ead: je 0xa57ebe
	0xa57ec0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ec6: and dword ptr [edi], 0x3559bbe0
	0xa57ecc: mov esi, ebp
	0xa57ece: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ed4: xor dword ptr [esi], 0x7ea468e7
	0xa57eda: mov ecx, ebp
	0xa57edc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57ee2: mov ebx, dword ptr [ecx]
	0xa57ee4: mov edi, ebp
	0xa57ee6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57eec: xor dword ptr [edi], ebx
	0xa57eee: mov esi, ebp
	0xa57ef0: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa57ef6: mov ebx, dword ptr [esi]
	0xa57ef8: mov edx, ebp
	0xa57efa: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f00: add dword ptr [edx], ebx
	0xa57f02: mov edx, ebp
	0xa57f04: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f0a: and dword ptr [edx], 0x5a367804
	0xa57f10: mov esi, ebp
	0xa57f12: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57f18: sub dword ptr [esi], 0x43f36859
	0xa57f29: mov edx, ebp
	0xa57f35: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa57f44: mov edx, dword ptr [edx]
	0xa57f48: add edx, 2
	0xa57f62: movzx ecx, word ptr [edx]
	0xa57f65: mov edx, ebp
	0xa57f7c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa57f8d: xor ecx, dword ptr [edx]
	0xa57f98: mov eax, ebp
	0xa57fac: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57fb3: xor ecx, dword ptr [eax]
	0xa57fb5: mov eax, ebp
	0xa57fb7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57fbc: xor dword ptr [eax], ecx
	0xa57fc8: mov eax, ebp
	0xa57fce: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57fdd: sub dword ptr [eax], 0x50096f31
	0xa57ff7: and ecx, 0xffff
	0xa58003: add ecx, ebp
	0xa5800e: xor ecx, 0x2b28b3ec
	0xa58016: mov ebx, ebp
	0xa58022: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa58030: mov dword ptr [ebx], ecx
	0xa5803b: mov ecx, ebp
	0xa5803d: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58043: mov ebx, dword ptr [ecx]
	0xa58045: or ebx, 0x62a21e52
	0xa5804b: mov esi, ebp
	0xa5804d: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58053: sub dword ptr [esi], ebx
	0xa58055: mov ecx, ebp
	0xa58057: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5805d: or dword ptr [ecx], 0x37afd558
	0xa58070: mov edx, ebp
	0xa58074: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5807c: mov eax, dword ptr [edx]
	0xa5807e: or eax, 0x61ddb8d8
	0xa58083: mov ecx, ebp
	0xa58085: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5808b: sub dword ptr [ecx], eax
	0xa5808d: mov esi, ebp
	0xa5808f: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58095: xor dword ptr [esi], 0x6c8e45f3
	0xa580af: mov ecx, ebp
	0xa580b1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa580b7: and dword ptr [ecx], 0x23762a96
	0xa580cf: mov ecx, ebp
	0xa580d1: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa580d7: mov edi, dword ptr [ecx]
	0xa580d9: and edi, 2
	0xa580df: cmp edi, 0
	0xa580e5: je 0xa58107
	0xa580eb: mov ecx, ebp
	0xa580ed: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa580f3: sub dword ptr [ecx], 0x2af0923d
	0xa580f9: mov ecx, ebp
	0xa580fb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58101: sub dword ptr [ecx], 0x3d654a0e
	0xa58114: mov ecx, ebp
	0xa58116: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa58120: mov ecx, dword ptr [ecx]
	0xa5812a: mov edx, ebp
	0xa5813e: add edx, 0xb8
	0xa58144: add ecx, 0
	0xa5814c: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa58153: mov edx, dword ptr [edx]
	0xa5815c: mov ebx, ebp
	0xa58168: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa58172: xor ecx, dword ptr [ebx]
	0xa58174: xor ecx, 0x14fc0902
	0xa58185: mov ebx, ebp
	0xa58187: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58191: or dword ptr [ebx], ecx
	0xa581a6: and ecx, 0xffff
	0xa581b2: add edx, ecx
	0xa581c8: mov ebx, dword ptr [edx]
	0xa581ce: mov esi, ebp
	0xa581db: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619f5
	0xa581e1: add dword ptr [esi], 4
	0xa581e7: jmp ebx
handlers outputs:



	0xa4fab9: mov eax, ebp
	0xa4fac3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa4fac8: mov edi, dword ptr [eax]
	0xa4faca: cmp dl, 0
	0xa4facd: je 0xa4fade
	0xa4fae0: and edi, 2
	0xa4fae6: cmp edi, 0
	0xa4faec: je 0xa4fb0c
	0xa4faf2: mov eax, ebp
	0xa4faf4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4faf9: and dword ptr [eax], 0x5a51958
	0xa4faff: mov eax, ebp
	0xa4fb01: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa4fb06: and dword ptr [eax], 0x2db1ea09
	0xa4fb16: mov edi, ebp
	0xa4fb1a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb2d: mov edi, dword ptr [edi]
	0xa4fb37: add edi, 2
	0xa4fb44: movzx ecx, word ptr [edi]
	0xa4fb51: add ecx, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa4fb5a: mov esp, dword ptr [ecx]
	0xa4fb78: mov esi, ebp
	0xa4fb82: mov edx, ebp
	0xa4fb8a: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa4fb94: mov edx, dword ptr [edx]
	0xa4fba5: add edx, 0
	0xa4fbab: movzx edx, word ptr [edx]
	0xa4fbb4: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa4fbc0: mov esi, dword ptr [esi]
	0xa4fbe0: sub edx, 0x1db2fc37
	0xa4fbe6: mov eax, ebp
	0xa4fbea: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa4fbf1: and dword ptr [eax], edx
	0xa4fbff: and edx, 0xffff
	0xa4fc09: add esi, edx
	0xa4fc15: mov edi, dword ptr [esi]
	0xa4fc20: mov esi, ebp
	0xa4fc28: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619f9
	0xa4fc2e: add dword ptr [esi], 4
	0xa4fc34: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa78aca: mov ecx, ebp
	0xa78acc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78ad2: mov ebx, dword ptr [ecx]
	0xa78ade: and ebx, 0x395cd0a1
	0xa78ae4: mov edi, ebp
	0xa78ae6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78aec: add dword ptr [edi], ebx
	0xa78aee: mov edi, ebp
	0xa78af0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78af6: xor dword ptr [edi], 0x46652dcf
	0xa78afc: mov esi, ebp
	0xa78afe: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78b04: xor dword ptr [esi], 0x337e0a3d
	0xa78b10: mov esi, ebp
	0xa78b12: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78b18: mov ebx, dword ptr [esi]
	0xa78b22: add ebx, 0x52edc32a
	0xa78b28: mov esi, ebp
	0xa78b2a: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78b32: and dword ptr [esi], ebx
	0xa78b45: mov edx, ebp
	0xa78b47: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78b4d: mov esi, dword ptr [edx]
	0xa78b4f: mov ecx, ebp
	0xa78b51: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78b57: xor dword ptr [ecx], esi
	0xa78b7e: mov edx, ebp
	0xa78b89: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa78b8f: mov edx, dword ptr [edx]
	0xa78ba9: add edx, 2
	0xa78bb1: mov esi, dword ptr [edx]
	0xa78bd5: mov edx, ebp
	0xa78bdf: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78bec: add esi, dword ptr [edx]
	0xa78bf4: mov edx, ebp
	0xa78c02: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78c12: xor dword ptr [edx], esi
	0xa78c14: mov edx, ebp
	0xa78c26: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78c2e: or dword ptr [edx], 0x5fa9703b
	0xa78c3a: xor esi, 0x9af695a
	0xa78c4c: mov edx, ebp
	0xa78c4e: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa78c5d: mov dword ptr [edx], esi
	0xa78c5f: mov ebx, ebp
	0xa78c61: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78c67: add dword ptr [ebx], 0xc5eb451
	0xa78c6d: mov eax, ebp
	0xa78c6f: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa78c74: mov ecx, dword ptr [eax]
	0xa78c76: and ecx, 0x4f348885
	0xa78c7c: mov edi, ebp
	0xa78c7e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78c84: add dword ptr [edi], ecx
	0xa78c86: mov ecx, ebp
	0xa78c88: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa78c8e: or dword ptr [ecx], 0x140c71b5
	0xa78c94: mov edi, ebp
	0xa78c96: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa78c9c: mov eax, dword ptr [edi]
	0xa78c9e: mov ecx, ebp
	0xa78ca0: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78ca6: xor dword ptr [ecx], eax
	0xa78cc0: mov ecx, ebp
	0xa78cc2: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78cc8: sub dword ptr [ecx], 0x38bf1352
	0xa78ce4: mov edx, ebp
	0xa78cec: mov ecx, ebp
	0xa78cf0: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa78cf8: mov ecx, dword ptr [ecx]
	0xa78cfc: add ecx, 0
	0xa78d0e: movzx ecx, word ptr [ecx]
	0xa78d19: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa78d21: mov edx, dword ptr [edx]
	0xa78d41: sub ecx, 0x62579c81
	0xa78d5a: mov eax, ebp
	0xa78d64: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa78d6f: and dword ptr [eax], ecx
	0xa78d7f: and ecx, 0xffff
	0xa78d8e: add edx, ecx
	0xa78d90: mov ecx, dword ptr [edx]
	0xa78da2: mov edx, ebp
	0xa78dac: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb619ff
	0xa78db2: add dword ptr [edx], 6
	0xa78db8: jmp ecx
handlers outputs:



	0xa52722: cmp bl, 0
	0xa52725: je 0xa52736
	0xa5275a: mov ecx, ebp
	0xa5275c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa52762: mov esi, dword ptr [ecx]
	0xa5276c: mov eax, ebp
	0xa52770: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52775: or dword ptr [eax], esi
	0xa52777: mov eax, ebp
	0xa52779: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5277e: mov esi, dword ptr [eax]
	0xa52780: mov edx, ebp
	0xa52782: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52788: or dword ptr [edx], esi
	0xa52794: mov ecx, ebp
	0xa52796: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5279c: mov ebx, dword ptr [ecx]
	0xa5279e: and ebx, 2
	0xa527a4: cmp ebx, 0
	0xa527aa: je 0xa527cc
	0xa527cc: mov esi, ebp
	0xa527ce: mov edx, ebp
	0xa527d0: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa527d6: mov edi, dword ptr [esi]
	0xa527d8: add edx, 0xef
	0xa527de: and edi, 2
	0xa527e6: cmp dl, 0
	0xa527e9: je 0xa527f9
	0xa527fb: cmp edi, 0
	0xa52801: je 0xa52823
	0xa5282a: mov ecx, ebp
	0xa52836: mov eax, ebp
	0xa52838: add ecx, 0x79
Load [EBP+0x79](STATIC)
	0xa52849: mov edx, dword ptr [ecx]
	0xa52853: xor edx, 0x9af695a
	0xa52861: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa5286e: mov esi, dword ptr [eax]
	0xa52877: mov ecx, ebp
	0xa5287f: xor esi, 0x1348fdb8
	0xa52897: mov edi, ebp
	0xa528a5: add ecx, 0x79
	0xa528b6: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa528be: mov dword ptr [edi], esi
Store [EBP+0x79](STATIC)
	0xa528c2: mov dword ptr [ecx], edx
	0xa528cc: mov eax, ebp
	0xa528d6: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa528e2: mov ecx, dword ptr [eax]
	0xa528e4: mov edx, ebp
	0xa528e8: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa528fa: mov eax, dword ptr [edx]
	0xa5291c: mov edx, ebp
	0xa52922: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa52930: mov bl, byte ptr [edx]
	0xa52932: cmp bl, 0x1f
	0xa52935: jne 0xa5294a
	0xa5294a: cmp bl, 0x52
	0xa5294d: jne 0xa52959
	0xa52959: cmp bl, 0x81
	0xa5295c: jne 0xa52967
	0xa52962: add ecx, eax
	0xa52964: pushfd
	0xa52977: add ecx, 0x457d7e27
	0xa52985: mov edi, ebp
	0xa5298b: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa52997: mov dword ptr [edi], ecx
	0xa5299b: mov esi, ebp
	0xa529a7: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa529bb: mov ecx, dword ptr [esi]
	0xa529c1: sub ecx, 0x457d7e27
	0xa529c9: sub ecx, 0x2b28b3ec
	0xa529e8: mov edi, ebp
	0xa529ea: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa529f2: mov dword ptr [edi], ecx
	0xa529f6: mov edx, ebp
	0xa529f8: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa52a06: mov esi, dword ptr [edx]
	0xa52a08: and esi, 2
	0xa52a16: cmp esi, 0
	0xa52a1c: je 0xa52a3e
	0xa52a42: mov ecx, ebp
	0xa52a44: pop eax
	0xa52a45: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa52a4b: or dword ptr [ecx], 0x480b1f92
	0xa52a51: mov edx, ebp
	0xa52a53: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa52a59: mov edx, dword ptr [edx]
	0xa52a5b: add edx, 2
	0xa52a61: movzx edx, byte ptr [edx]
	0xa52a64: cmp edx, 0
	0xa52a6a: je 0xa52a8c
	0xa52a70: mov edx, 0
	0xa52a75: mov ebx, ebp
	0xa52a77: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa52a7d: mov ebx, dword ptr [ebx]
	0xa52a7f: add ebx, 0
	0xa52a85: mov dx, word ptr [ebx]
	0xa52a88: add edx, ebp
Store VM_REG [EBP+0x3b]
	0xa52a8a: mov dword ptr [edx], eax
	0xa52a9a: mov ebx, ebp
	0xa52aac: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa52ac1: mov ebx, dword ptr [ebx]
	0xa52ac8: mov edi, ebp
	0xa52aca: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa52ad6: mov edi, dword ptr [edi]
	0xa52ae0: add edi, 3
	0xa52afa: movzx edi, word ptr [edi]
	0xa52afd: mov edx, ebp
	0xa52b0c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa52b19: sub edi, dword ptr [edx]
	0xa52b22: sub edi, 0x2941b6d
	0xa52b45: and edi, 0xffff
	0xa52b53: add ebx, edi
	0xa52b55: mov esi, dword ptr [ebx]
	0xa52b6a: mov edi, ebp
	0xa52b6e: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a04
	0xa52b74: add dword ptr [edi], 5
	0xa52b7a: jmp esi
handlers outputs:



	0xa67495: cmp cl, 0
	0xa67498: je 0xa674a9
	0xa674ab: mov edi, ebp
	0xa674ad: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa674b3: sub dword ptr [edi], 0x48c32b48
	0xa674e1: mov esi, ebp
	0xa674e5: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa674fd: mov edx, dword ptr [esi]
	0xa6750b: add edx, 0x2b28b3ec
	0xa6751c: mov esi, ebp
	0xa67520: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa67530: mov ebx, dword ptr [esi]
	0xa6753c: xor ebx, 0x2b28b3ec
	0xa67542: mov edi, ebp
	0xa67554: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6755c: mov al, byte ptr [edi]
	0xa6755e: cmp al, 0x1f
	0xa67560: jne 0xa67577
	0xa67577: cmp al, 0x52
	0xa67579: jne 0xa67599
	0xa67599: cmp al, 0x81
	0xa6759b: jne 0xa675e9
	0xa675a5: mov dword ptr [ebx], edx
	0xa675e9: cmp al, 2
	0xa675eb: jne 0xa675fc
	0xa67605: mov ebx, ebp
	0xa67607: add ebx, 0xef
	0xa6760f: cmp bl, 0
	0xa67612: je 0xa67623
	0xa67634: mov eax, ebp
	0xa67636: mov edx, ebp
	0xa67638: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa67641: mov eax, dword ptr [eax]
	0xa67643: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa67657: mov edx, dword ptr [edx]
	0xa6765b: add edx, 0
	0xa6766b: movzx edx, word ptr [edx]
	0xa6767b: mov esi, ebp
	0xa6768c: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa67694: sub edx, dword ptr [esi]
	0xa676b2: mov esi, ebp
	0xa676b6: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa676ca: xor dword ptr [esi], edx
	0xa676d0: and edx, 0xffff
	0xa676e2: add eax, edx
	0xa676f5: mov esi, dword ptr [eax]
	0xa676f7: mov eax, ebp
	0xa67700: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a06
	0xa67705: add dword ptr [eax], 2
	0xa6770b: jmp esi
handlers outputs:



	0xa56574: mov esi, ebp
	0xa56576: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa56593: mov esi, dword ptr [esi]
	0xa5659f: add esi, 2
	0xa565c3: movzx ecx, byte ptr [esi]
	0xa565e9: mov eax, ebp
	0xa565ef: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa565fe: sub ecx, dword ptr [eax]
	0xa5660c: mov ebx, ebp
	0xa56615: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56624: add ecx, dword ptr [ebx]
	0xa5665f: mov ebx, ebp
	0xa5666b: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56675: or dword ptr [ebx], 0x7ec4eb23
	0xa5667d: mov ebx, ebp
	0xa5667f: add ebx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa56690: mov byte ptr [ebx], cl
	0xa56692: mov ebx, ebp
	0xa56694: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa566a0: mov edi, dword ptr [ebx]
	0xa566ad: mov esi, ebp
	0xa566af: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566b5: and dword ptr [esi], edi
	0xa566b7: mov eax, ebp
	0xa566b9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566be: xor dword ptr [eax], 0x73e12ce0
	0xa566ce: mov edx, ebp
	0xa566d0: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa566d6: mov eax, dword ptr [edx]
	0xa566d8: xor eax, 0x17a2fbf2
	0xa566dd: mov esi, ebp
	0xa566df: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566e5: xor dword ptr [esi], eax
	0xa566e7: mov edx, ebp
	0xa566e9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566ef: xor dword ptr [edx], 0x599a8aa5
	0xa566f5: mov eax, ebp
	0xa566f7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa566fc: mov ebx, dword ptr [eax]
	0xa566fe: mov edi, ebp
	0xa56700: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56706: and dword ptr [edi], ebx
	0xa56719: mov edi, ebp
	0xa5671b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56721: sub dword ptr [edi], 0x31011cc8
	0xa56739: mov eax, ebp
	0xa5673b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56740: xor dword ptr [eax], 0x554a5ab3
	0xa56746: mov ecx, ebp
	0xa56748: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5674e: mov eax, dword ptr [ecx]
	0xa56750: xor eax, 0x1fbc7a4b
	0xa56755: mov ecx, ebp
	0xa56757: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5675d: xor dword ptr [ecx], eax
	0xa5675f: mov ebx, ebp
	0xa56761: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56767: xor dword ptr [ebx], 0x25ab6016
	0xa5676f: mov ecx, ebp
	0xa56779: add ecx, 0xa
	0xa5677f: cmp cl, 0
	0xa56782: je 0xa56792
	0xa5679e: mov edi, ebp
	0xa567a0: add edi, 0xb8
	0xa567b8: mov ecx, ebp
	0xa567c4: add ecx, 0x95
Load [EBP+0xb8](STATIC)
	0xa567d5: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa567d7: mov ecx, dword ptr [ecx]
	0xa567e2: add ecx, 0
	0xa567fb: movzx ecx, word ptr [ecx]
	0xa5682a: mov ebx, ebp
	0xa5683b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5684d: sub dword ptr [ebx], ecx
	0xa5685c: and ecx, 0xffff
	0xa5686d: add edi, ecx
	0xa56871: mov ebx, dword ptr [edi]
	0xa56873: mov ecx, ebp
	0xa56880: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a09
	0xa56886: add dword ptr [ecx], 3
	0xa5688c: jmp ebx
handlers outputs:



	0xa73f2b: cmp cl, 0
	0xa73f2e: je 0xa73f3f
	0xa73f41: mov edx, ebp
	0xa73f43: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73f49: or dword ptr [edx], 0x466e33c6
	0xa73f4f: mov ecx, ebp
	0xa73f51: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73f57: mov eax, dword ptr [ecx]
	0xa73f5f: mov ecx, ebp
	0xa73f6d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73f73: sub dword ptr [ecx], eax
	0xa73f82: mov edx, ebp
	0xa73f8d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa73f93: mov edx, dword ptr [edx]
	0xa73f95: add edx, 0
	0xa73f9b: movzx edi, word ptr [edx]
	0xa73fa5: add edi, ebp
Load [EBP+0xdd](VM_REGISTER)
	0xa73fab: mov esp, dword ptr [edi]
	0xa73fad: mov eax, ebp
	0xa73faf: add eax, 0xe5
	0xa73fb4: mov ebx, ebp
	0xa73fb6: add ebx, 0xef
	0xa73fbe: cmp bl, 0
	0xa73fc1: je 0xa73fd2
Load [EBP+0xe5](STATIC)
	0xa73fd4: mov ecx, dword ptr [eax]
	0xa73fd6: and ecx, 2
	0xa73fdc: cmp ecx, 0
	0xa73fe2: je 0xa74002
	0xa73fe8: mov eax, ebp
	0xa73fea: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73fef: add dword ptr [eax], 0x583b7db1
	0xa73ff5: mov eax, ebp
	0xa73ff7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73ffc: add dword ptr [eax], 0x18a971b2
	0xa7400e: mov ebx, ebp
	0xa74018: add ebx, 0xb8
	0xa74029: mov eax, ebp
	0xa74031: add eax, 0x95
Load [EBP+0xb8](STATIC)
	0xa7403d: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa7404b: mov eax, dword ptr [eax]
	0xa7404f: add eax, 2
	0xa7405b: movzx eax, word ptr [eax]
	0xa74068: mov edx, ebp
	0xa74070: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa74080: add eax, dword ptr [edx]
	0xa7408a: xor eax, 0x488bb361
	0xa74091: mov edx, ebp
	0xa740a0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa740b6: xor dword ptr [edx], eax
	0xa740c6: and eax, 0xffff
	0xa740d7: add ebx, eax
	0xa740e5: mov edx, dword ptr [ebx]
	0xa740fa: mov esi, ebp
	0xa74100: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a0d
	0xa74106: add dword ptr [esi], 4
	0xa7410c: jmp edx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7ff0c: mov ecx, ebp
	0xa7ff0e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7ff1c: mov esi, dword ptr [ecx]
	0xa7ff1e: and esi, 2
	0xa7ff24: cmp esi, 0
	0xa7ff2a: je 0xa7ff4c
	0xa7ff5a: mov esi, ebp
	0xa7ff6e: add esi, 0x95
	0xa7ff76: mov eax, ebp
Load [EBP+0x95](STATIC)
	0xa7ff7e: mov esi, dword ptr [esi]
	0xa7ff8e: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa7ff93: mov eax, dword ptr [eax]
	0xa7ff95: add esi, 0
	0xa7ffa0: movzx esi, word ptr [esi]
	0xa7ffaf: add esi, ebp
Load [EBP+0x3b](VM_REGISTER)
Store VM_REG [EBP+0x3b]
	0xa7ffb1: pop dword ptr [esi]
	0xa7ffb3: add eax, 2
	0xa7ffb8: movzx eax, word ptr [eax]
	0xa7ffc3: add eax, ebp
Load [EBP+0xdd](VM_REGISTER)
Store VM_REG [EBP+0xdd]
	0xa7ffca: add dword ptr [eax], 4
	0xa7ffdd: mov ecx, ebp
	0xa7ffe3: mov ebx, ebp
	0xa7ffe7: add ebx, 0xb8
	0xa7fff1: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7fff7: mov ecx, dword ptr [ecx]
	0xa7fff9: add ecx, 4
Load [EBP+0xb8](STATIC)
	0xa80007: mov ebx, dword ptr [ebx]
	0xa80009: movzx ecx, word ptr [ecx]
	0xa80012: mov esi, ebp
	0xa8001a: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa80020: xor ecx, dword ptr [esi]
	0xa80022: add ecx, 0x3a193bd4
	0xa8002a: mov esi, ebp
	0xa80038: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa80042: and dword ptr [esi], ecx
	0xa80046: and ecx, 0xffff
	0xa8004e: add ebx, ecx
	0xa80054: mov esi, dword ptr [ebx]
	0xa80058: mov edi, ebp
	0xa8005a: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a13
	0xa80060: add dword ptr [edi], 6
	0xa80066: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5764a: mov ebx, ebp
	0xa5764e: mov edx, ebp
	0xa57650: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5765d: mov ebx, dword ptr [ebx]
	0xa57665: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa57675: mov edx, dword ptr [edx]
	0xa57679: add ebx, 3
	0xa57681: add edx, 2
	0xa57687: movzx ebx, word ptr [ebx]
	0xa5768a: add ebx, ebp
	0xa5768e: movzx edx, byte ptr [edx]
	0xa57697: add esp, edx
Load [EBP+0xdd](VM_REGISTER)
Store VM_REG [EBP+0xdd]
	0xa5769f: add dword ptr [ebx], edx
	0xa576aa: mov eax, ebp
	0xa576ac: add eax, 0xb8
	0xa576b1: mov edx, ebp
Load [EBP+0xb8](STATIC)
	0xa576b9: mov eax, dword ptr [eax]
	0xa576c5: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa576cd: mov edx, dword ptr [edx]
	0xa576cf: add edx, 0
	0xa576d5: movzx edx, word ptr [edx]
	0xa576dc: mov edi, ebp
	0xa576e9: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa576ef: sub edx, dword ptr [edi]
	0xa576fb: mov edi, ebp
	0xa57703: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57709: or dword ptr [edi], edx
	0xa5770b: and edx, 0xffff
	0xa57713: add eax, edx
	0xa57719: mov edi, dword ptr [eax]
	0xa5771b: mov esi, ebp
	0xa57722: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a18
	0xa57728: add dword ptr [esi], 5
	0xa5772e: jmp edi
handlers outputs:



	0xa7a10b: mov eax, ebp
	0xa7a10d: add eax, 0xef
	0xa7a114: cmp al, 0
	0xa7a116: je 0xa7a127
	0xa7a145: mov ecx, ebp
	0xa7a147: add ecx, 0x49
	0xa7a165: mov eax, ebp
	0xa7a167: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a16c: mov edi, dword ptr [eax]
	0xa7a16e: mov edx, ebp
	0xa7a170: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a176: xor dword ptr [edx], edi
	0xa7a18a: cmp cl, 0
	0xa7a18d: je 0xa7a19d
	0xa7a19f: mov edx, ebp
	0xa7a1a1: add edx, 0xe5
	0xa7a1a7: mov eax, ebp
	0xa7a1a9: add eax, 0xa
Load [EBP+0xe5](STATIC)
	0xa7a1ae: mov ecx, dword ptr [edx]
	0xa7a1b0: and ecx, 2
	0xa7a1b6: cmp ecx, 0
	0xa7a1bc: je 0xa7a1de
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1de: xor dword ptr [eax], 0x46ff79b1
	0xa7a1e4: mov ebx, ebp
	0xa7a1e6: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1ec: xor dword ptr [ebx], 0x2678d220
	0xa7a222: mov edi, ebp
	0xa7a228: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7a238: mov edi, dword ptr [edi]
	0xa7a241: add edi, 0
	0xa7a253: movzx ecx, byte ptr [edi]
	0xa7a256: mov edi, ebp
	0xa7a258: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a262: add ecx, dword ptr [edi]
	0xa7a264: mov edi, ebp
	0xa7a266: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a271: add ecx, dword ptr [edi]
	0xa7a283: mov ebx, ebp
	0xa7a28f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a29a: xor dword ptr [ebx], ecx
	0xa7a2a5: mov eax, ebp
	0xa7a2b4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a2b9: and dword ptr [eax], 0x76f31181
	0xa7a2c1: mov eax, ebp
	0xa7a2d8: add eax, 0x9e
Store [EBP+0x9e](STATIC)
	0xa7a2df: mov byte ptr [eax], cl
	0xa7a2e1: mov eax, ebp
	0xa7a2e3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a2e8: mov edx, dword ptr [eax]
	0xa7a2ea: add edx, 0x6c2d4307
	0xa7a2f0: mov esi, ebp
	0xa7a2f2: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a2f8: xor dword ptr [esi], edx
	0xa7a2fa: mov esi, ebp
	0xa7a2fc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a302: and dword ptr [esi], 0x3ad95769
	0xa7a32c: mov edx, ebp
	0xa7a338: mov esi, ebp
	0xa7a344: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a34a: mov edx, dword ptr [edx]
	0xa7a354: add edx, 1
	0xa7a35c: add esi, 0xb8
	0xa7a364: movzx edx, word ptr [edx]
Load [EBP+0xb8](STATIC)
	0xa7a367: mov esi, dword ptr [esi]
	0xa7a373: mov eax, ebp
	0xa7a387: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7a38e: xor edx, dword ptr [eax]
	0xa7a399: xor edx, 0x768e7e12
	0xa7a3a1: mov eax, ebp
	0xa7a3b4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a3bd: sub dword ptr [eax], edx
	0xa7a3d4: and edx, 0xffff
	0xa7a3e4: add esi, edx
	0xa7a3f6: mov ecx, dword ptr [esi]
	0xa7a404: mov edi, ebp
	0xa7a40d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a1b
	0xa7a413: add dword ptr [edi], 3
	0xa7a419: jmp ecx
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d975: mov ecx, ebp
	0xa5d977: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d97d: xor dword ptr [ecx], 0x76980d16
	0xa5d983: mov ecx, ebp
	0xa5d985: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d98b: add dword ptr [ecx], 0x1f0a33d1
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9d0: mov edi, ebp
	0xa5d9d2: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d9d8: add dword ptr [edi], 0x6a46ac4c
	0xa5d9de: mov edi, ebp
	0xa5d9e0: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d9e6: xor dword ptr [edi], 0x281a5962
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0x13](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a1f
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa6a9ac: cmp al, 0
	0xa6a9ae: je 0xa6a9bf
	0xa6a9d1: mov edx, ebp
	0xa6a9d3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6a9d9: or dword ptr [edx], 0x1c71754f
	0xa6a9df: mov edi, ebp
	0xa6a9e1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6a9e7: mov esi, dword ptr [edi]
	0xa6a9e9: and esi, 2
	0xa6a9ef: cmp esi, 0
	0xa6a9f5: je 0xa6aa17
	0xa6a9fb: mov edi, ebp
	0xa6a9fd: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6aa03: or dword ptr [edi], 0x4a8cc2a2
	0xa6aa09: mov edi, ebp
	0xa6aa0b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6aa11: or dword ptr [edi], 0x203c5f7c
	0xa6aa17: mov edi, ebp
	0xa6aa19: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6aa1f: mov eax, dword ptr [edi]
	0xa6aa21: mov ebx, ebp
	0xa6aa23: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6aa29: xor dword ptr [ebx], eax
	0xa6aa72: mov edi, ebp
	0xa6aa74: add edi, 0x9e
	0xa6aa7a: mov esi, ebp
	0xa6aa7c: add esi, 0xe5
Load [EBP+0x9e](STATIC)
	0xa6aa82: mov al, byte ptr [edi]
	0xa6aa84: mov edi, ebp
	0xa6aa86: add edi, 0x49
Load [EBP+0xe5](STATIC)
	0xa6aa8c: mov ecx, dword ptr [esi]
	0xa6aa8e: mov esi, ebp
	0xa6aa90: add esi, 0xa
Load [EBP+0x49](STATIC)
	0xa6aa96: mov ebx, dword ptr [edi]
	0xa6aa98: xor ebx, 0x1348fdb8
	0xa6aa9e: mov edi, 0
	0xa6aaa3: mov edx, ebp
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6aaa5: or dword ptr [esi], ecx
	0xa6aaa7: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa6aaad: mov edx, dword ptr [edx]
	0xa6aaaf: add edx, 2
	0xa6aab5: mov di, word ptr [edx]
	0xa6aab8: add edi, ebp
	0xa6aaba: cmp al, 0x52
	0xa6aabc: jne 0xa6aacf
	0xa6aacf: push ebx
Load [EBP+0xdd](VM_REGISTER)
Store VM_REG [EBP+0xdd]
	0xa6aad0: sub dword ptr [edi], 4
	0xa6aae0: mov esi, ebp
	0xa6aaec: mov edx, ebp
	0xa6aaee: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6aaf4: mov esi, dword ptr [esi]
	0xa6ab05: add edx, 0xb8
	0xa6ab1c: add esi, 0
Load [EBP+0xb8](STATIC)
	0xa6ab2d: mov edx, dword ptr [edx]
	0xa6ab2f: movzx esi, word ptr [esi]
	0xa6ab39: mov ebx, ebp
	0xa6ab4b: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa6ab51: xor esi, dword ptr [ebx]
	0xa6ab66: mov ebx, ebp
	0xa6ab71: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6ab82: sub dword ptr [ebx], esi
	0xa6ab90: and esi, 0xffff
	0xa6ab98: add edx, esi
	0xa6abaf: mov esi, dword ptr [edx]
	0xa6abb3: mov edi, ebp
	0xa6abb7: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a23
	0xa6abbd: add dword ptr [edi], 4
	0xa6abc3: jmp esi
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0x13](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a27
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa72e93: add edx, 0x69776ea7
	0xa72e99: mov edi, ebp
	0xa72ea0: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa72ea6: xor edx, dword ptr [edi]
	0xa72ea8: sub edx, ebx
	0xa72ec7: mov ecx, ebp
	0xa72ec9: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa72ecf: mov ebx, dword ptr [ecx]
	0xa72ed1: cmp dl, 0
	0xa72ed4: je 0xa72ee5
	0xa72ee7: and ebx, 2
	0xa72eed: cmp ebx, 0
	0xa72ef3: je 0xa72f15
	0xa72f15: mov edx, ebp
	0xa72f21: add edx, 0xa
	0xa72f27: cmp cl, 0
	0xa72f2a: je 0xa72f3b
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa72f3d: sub dword ptr [edx], 0x3126a2b6
	0xa72f47: mov edx, ebp
	0xa72f56: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa72f62: mov edx, dword ptr [edx]
	0xa72f64: add edx, 0
	0xa72f6a: movzx esi, word ptr [edx]
	0xa72f83: mov edx, ebp
	0xa72f85: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa72f8f: sub esi, dword ptr [edx]
	0xa72f93: mov edx, ebp
	0xa72f99: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa72f9f: xor dword ptr [edx], esi
	0xa72fad: and esi, 0xffff
	0xa72fbd: add esi, ebp
	0xa72fc8: xor esi, 0x2b28b3ec
	0xa72fd6: mov ecx, ebp
	0xa72fe6: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa72ff0: mov dword ptr [ecx], esi
	0xa72ff2: mov edi, ebp
	0xa72ffc: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73004: sub dword ptr [edi], 0x5c28206f
	0xa73012: mov eax, ebp
	0xa73016: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7301b: mov edx, dword ptr [eax]
	0xa7301d: or edx, 0x1c9649d8
	0xa73023: mov edi, ebp
	0xa73025: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7302b: sub dword ptr [edi], edx
	0xa73086: mov ecx, ebp
	0xa73090: add ecx, 0xb8
	0xa7309c: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa730a0: mov ecx, dword ptr [ecx]
	0xa730b0: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa730bb: mov eax, dword ptr [eax]
	0xa730cc: add eax, 2
	0xa730d1: movzx eax, word ptr [eax]
	0xa730e1: mov ebx, ebp
	0xa730ed: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa730f3: add eax, dword ptr [ebx]
	0xa73103: sub eax, 0x49f62728
	0xa73112: mov ebx, ebp
	0xa73116: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73124: and dword ptr [ebx], eax
	0xa73126: and eax, 0xffff
	0xa73135: add ecx, eax
	0xa73139: mov eax, dword ptr [ecx]
	0xa73143: mov esi, ebp
	0xa73145: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a2b
	0xa7314b: add dword ptr [esi], 4
	0xa73151: jmp eax
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5f87c: mov esi, ebp
	0xa5f87e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa5f88e: mov esi, dword ptr [esi]
	0xa5f89f: add esi, 0
	0xa5f8b1: mov ebx, dword ptr [esi]
	0xa5f8c4: mov esi, ebp
	0xa5f8ce: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa5f8db: sub ebx, dword ptr [esi]
	0xa5f8dd: mov esi, ebp
	0xa5f8df: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5f8f1: add ebx, dword ptr [esi]
	0xa5f8fb: mov edi, ebp
	0xa5f8fd: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f90e: xor dword ptr [edi], ebx
	0xa5f92a: xor ebx, 0x9af695a
	0xa5f936: mov edi, ebp
	0xa5f938: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa5f94b: mov dword ptr [edi], ebx
	0xa5f94d: mov esi, ebp
	0xa5f94f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f955: sub dword ptr [esi], 0x1e25fd2b
	0xa5f95b: mov ebx, ebp
	0xa5f95d: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5f963: and dword ptr [ebx], 0xbd5f534
	0xa5f969: mov ebx, ebp
	0xa5f96b: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5f973: mov ecx, dword ptr [ebx]
	0xa5f975: and ecx, 0x335509c1
	0xa5f97b: mov eax, ebp
	0xa5f97d: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5f98a: xor dword ptr [eax], ecx
	0xa5f98c: mov edi, ebp
	0xa5f98e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5f994: sub dword ptr [edi], 0x445952c5
	0xa5f99a: mov edx, ebp
	0xa5f99c: mov ecx, ebp
	0xa5f99e: add edx, 0xef
	0xa5f9a4: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5f9aa: mov esi, dword ptr [ecx]
Load [EBP+0xef](STATIC)
	0xa5f9ac: mov ebx, dword ptr [edx]
	0xa5f9ae: and esi, 2
	0xa5f9b4: cmp esi, 0
	0xa5f9ba: je 0xa5f9dc
	0xa5f9c0: mov ecx, ebp
	0xa5f9c2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5f9c8: or dword ptr [ecx], 0x2b0222f3
	0xa5f9ce: mov ecx, ebp
	0xa5f9d0: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5f9d6: or dword ptr [ecx], 0x381c8e8b
	0xa5f9e5: cmp bl, 0
	0xa5f9e8: je 0xa5f9f9
	0xa5fa00: mov edx, ebp
	0xa5fa0a: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5fa10: xor dword ptr [edx], 0x3275b1c6
	0xa5fa35: mov edi, ebp
	0xa5fa3e: mov ebx, ebp
	0xa5fa4a: add edi, 0x95
	0xa5fa54: add ebx, 0xb8
Load [EBP+0x95](STATIC)
	0xa5fa69: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa5fa6b: mov ebx, dword ptr [ebx]
	0xa5fa76: add edi, 4
	0xa5fa8a: movzx edi, word ptr [edi]
	0xa5fab3: xor edi, 0x428a7c9f
	0xa5faf6: and edi, 0xffff
	0xa5fb0b: add ebx, edi
	0xa5fb1a: mov edi, dword ptr [ebx]
	0xa5fb2e: mov esi, ebp
	0xa5fb36: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a31
	0xa5fb3c: add dword ptr [esi], 6
	0xa5fb42: jmp edi
handlers outputs:



	0xa60c07: mov edi, ebp
	0xa60c09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c0f: mov esi, dword ptr [edi]
	0xa60c11: and esi, 2
	0xa60c17: cmp esi, 0
	0xa60c1d: je 0xa60c3f
	0xa60c23: mov edi, ebp
	0xa60c25: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c2b: and dword ptr [edi], 0x38beec75
	0xa60c31: mov edi, ebp
	0xa60c33: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c39: sub dword ptr [edi], 0x58680c81
	0xa60c3f: mov esi, ebp
	0xa60c43: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60c49: mov ecx, dword ptr [esi]
	0xa60c4b: and ecx, 2
	0xa60c51: cmp ecx, 0
	0xa60c57: je 0xa60c73
	0xa60c7d: mov esi, ebp
	0xa60c7f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60c8d: mov ecx, dword ptr [esi]
	0xa60c8f: sub ecx, 0x2e531dd6
	0xa60c95: mov edx, ebp
	0xa60c97: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60c9d: or dword ptr [edx], ecx
	0xa60c9f: mov edi, ebp
	0xa60ca1: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ca7: and dword ptr [edi], 0x2fc6b817
	0xa60cad: mov edi, ebp
	0xa60caf: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cb5: mov edx, dword ptr [edi]
	0xa60cb7: mov esi, ebp
	0xa60cb9: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60cbf: sub dword ptr [esi], edx
	0xa60cc1: mov edx, ebp
	0xa60cc3: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa60cc9: mov edi, dword ptr [edx]
	0xa60ccb: and edi, 0x7024bcb4
	0xa60cd1: mov ebx, ebp
	0xa60cd3: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60cd9: sub dword ptr [ebx], edi
	0xa60cdb: mov edx, ebp
	0xa60cdd: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ce3: or dword ptr [edx], 0x5703a393
	0xa60ce9: mov esi, ebp
	0xa60cf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60cfb: mov edi, dword ptr [esi]
	0xa60d07: and edi, 2
	0xa60d0d: cmp edi, 0
	0xa60d13: je 0xa60d2f
	0xa60d19: mov esi, ebp
	0xa60d1b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60d21: and dword ptr [esi], 0x33152bc5
	0xa60d31: mov esi, ebp
	0xa60d35: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa60d3d: mov esi, dword ptr [esi]
	0xa60d52: add esi, 0
	0xa60d74: movzx ecx, byte ptr [esi]
	0xa60d7d: mov esi, ebp
	0xa60d8d: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa60da0: sub ecx, dword ptr [esi]
	0xa60db2: mov esi, ebp
	0xa60dba: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60dc5: xor ecx, dword ptr [esi]
	0xa60dc9: mov esi, ebp
	0xa60dd1: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60dd9: or dword ptr [esi], ecx
	0xa60de3: mov esi, ebp
	0xa60def: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60e05: xor dword ptr [esi], 0x4c9a2b11
	0xa60e0b: mov esi, ebp
	0xa60e1b: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa60e2b: mov byte ptr [esi], cl
	0xa60e35: mov edi, ebp
	0xa60e37: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e3f: mov edx, dword ptr [edi]
	0xa60e41: cmp dl, 0
	0xa60e44: je 0xa60e55
	0xa60e70: mov edi, ebp
	0xa60e72: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa60e78: mov ebx, dword ptr [edi]
	0xa60e7a: and ebx, 2
	0xa60e80: cmp ebx, 0
	0xa60e86: je 0xa60ea8
	0xa60ea8: mov ecx, ebp
	0xa60ebb: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa60ec1: mov ebx, dword ptr [ecx]
	0xa60ec3: sub ebx, 0x2c7c5d51
	0xa60ec9: mov edx, ebp
	0xa60ecb: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60ed1: and dword ptr [edx], ebx
	0xa60ed3: mov ebx, ebp
	0xa60ed5: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa60edb: or dword ptr [ebx], 0x75104d02
	0xa60eeb: mov edi, ebp
	0xa60eed: mov esi, ebp
	0xa60ef9: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa60f01: mov edi, dword ptr [edi]
	0xa60f0d: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa60f17: mov esi, dword ptr [esi]
	0xa60f21: add edi, 1
	0xa60f2d: movzx edi, word ptr [edi]
	0xa60f35: mov ebx, ebp
	0xa60f3b: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa60f4d: sub edi, dword ptr [ebx]
	0xa60f59: add edi, 0x6f9bcb8e
	0xa60f67: mov edx, ebp
	0xa60f81: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa60f8f: add dword ptr [edx], edi
	0xa60fa3: and edi, 0xffff
	0xa60fb7: add esi, edi
	0xa60fc7: mov ecx, dword ptr [esi]
	0xa60fcb: mov edx, ebp
	0xa60fcf: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a34
	0xa60fd5: add dword ptr [edx], 3
	0xa60fdb: jmp ecx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa64e51: mov eax, ebp
	0xa64e59: add eax, 0x79
Load [EBP+0x79](STATIC)
	0xa64e67: mov edx, dword ptr [eax]
	0xa64e6f: xor edx, 0x9af695a
	0xa64e7d: add edx, 0x4558f3ea
	0xa64e83: mov ecx, ebp
	0xa64e9b: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa64ea9: mov dword ptr [ecx], edx
	0xa64ecf: mov eax, ebp
	0xa64ed1: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa64ed6: mov edi, dword ptr [eax]
	0xa64eda: xor edi, 0x1348fdb8
	0xa64ee6: sub edi, 0x4558f3ea
	0xa64eee: mov eax, ebp
	0xa64ef0: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa64ef5: mov dword ptr [eax], edi
	0xa64ef7: mov esi, ebp
	0xa64ef9: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa64eff: mov ecx, dword ptr [esi]
	0xa64f03: add ecx, 0x4558f3ea
	0xa64f0f: mov edx, ebp
	0xa64f15: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa64f1d: mov ebx, dword ptr [edx]
	0xa64f1f: sub ebx, 0x4558f3ea
	0xa64f25: mov edi, ebp
	0xa64f27: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa64f2d: mov al, byte ptr [edi]
	0xa64f2f: cmp al, 0x1f
	0xa64f31: jne 0xa64f3c
	0xa64f3c: cmp al, 0x52
	0xa64f3e: jne 0xa64f50
	0xa64f50: cmp al, 0x81
	0xa64f52: jne 0xa64f5b
	0xa64f58: test ecx, ebx
	0xa64f5a: pushfd
	0xa64f61: mov esi, ebp
	0xa64f63: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa64f69: mov dword ptr [esi], ecx
	0xa64f72: pop esi
	0xa64f75: mov ecx, ebp
	0xa64f7f: mov eax, ebp
	0xa64f81: add ecx, 0x95
	0xa64f87: add eax, 0x2d
Load [EBP+0x2d](STATIC)
	0xa64f8c: mov ebx, dword ptr [eax]
Load [EBP+0x95](STATIC)
	0xa64f96: mov ecx, dword ptr [ecx]
	0xa64f9e: add ecx, 0
	0xa64fab: movzx ecx, byte ptr [ecx]
	0xa64fae: cmp ecx, 0
	0xa64fb4: je 0xa64fe8
	0xa64fba: mov ecx, 0
	0xa64fc3: mov edx, ebp
	0xa64fc5: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa64fcf: mov edx, dword ptr [edx]
	0xa64fd1: add edx, 1
	0xa64fd9: mov cx, word ptr [edx]
	0xa64fdc: add ecx, ebp
Store VM_REG [EBP+0x3b]
	0xa64fde: mov dword ptr [ecx], esi
	0xa64fe8: sub ebx, 0x2b28b3ec
	0xa64ff6: mov esi, ebp
	0xa64ffe: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa65004: mov dword ptr [esi], ebx
	0xa65006: mov esi, ebp
	0xa65010: mov eax, ebp
	0xa65012: add esi, 0xb8
	0xa6501f: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa65024: mov eax, dword ptr [eax]
Load [EBP+0xb8](STATIC)
	0xa65026: mov esi, dword ptr [esi]
	0xa6502d: add eax, 3
	0xa65036: movzx eax, word ptr [eax]
	0xa65039: mov edx, ebp
	0xa6503f: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa65045: sub eax, dword ptr [edx]
	0xa65049: add eax, 0x7e6c66e7
	0xa6504e: mov edx, ebp
	0xa65056: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6505c: or dword ptr [edx], eax
	0xa6505e: and eax, 0xffff
	0xa65063: add esi, eax
	0xa6506d: mov edi, dword ptr [esi]
	0xa6506f: mov esi, ebp
	0xa65076: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a39
	0xa6507c: add dword ptr [esi], 5
	0xa65082: jmp edi
handlers outputs:



	0xa5cd00: mov esi, ebp
	0xa5cd02: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd08: mov ecx, dword ptr [esi]
	0xa5cd0c: and ecx, 2
	0xa5cd12: cmp ecx, 0
	0xa5cd18: je 0xa5cd3a
	0xa5cd1e: mov esi, ebp
	0xa5cd20: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cd26: add dword ptr [esi], 0x51509c8a
	0xa5cd2c: mov esi, ebp
	0xa5cd2e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cd34: add dword ptr [esi], 0x28ba0af1
	0xa5cd4d: mov edx, ebp
	0xa5cd4f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cd55: mov esi, dword ptr [edx]
	0xa5cd57: mov edi, ebp
	0xa5cd59: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd5f: sub dword ptr [edi], esi
	0xa5cd61: mov eax, ebp
	0xa5cd63: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd68: sub dword ptr [eax], 0x517af35
	0xa5cd6e: mov eax, ebp
	0xa5cd70: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cd7f: sub dword ptr [eax], 0x32035459
	0xa5cd9f: mov edx, ebp
	0xa5cda1: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cda7: sub dword ptr [edx], 0x78199ead
	0xa5cdad: mov eax, ebp
	0xa5cdaf: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cdb4: or dword ptr [eax], 0x217c89c9
	0xa5cdba: mov ecx, ebp
	0xa5cdbc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cdc2: mov eax, dword ptr [ecx]
	0xa5cdc4: add eax, 0x531dddb0
	0xa5cdc9: mov edi, ebp
	0xa5cdcb: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cdd1: and dword ptr [edi], eax
	0xa5cdd3: mov edi, ebp
	0xa5cdd5: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cddb: or dword ptr [edi], 0x49e1cbd1
	0xa5ce08: mov edi, ebp
	0xa5ce0a: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5ce18: mov edi, dword ptr [edi]
	0xa5ce2b: add edi, 2
	0xa5ce3a: movzx ebx, word ptr [edi]
	0xa5ce57: mov edi, ebp
	0xa5ce63: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5ce72: xor ebx, dword ptr [edi]
	0xa5ce82: mov edi, ebp
	0xa5ce86: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ce99: or dword ptr [edi], ebx
	0xa5cea3: mov edi, ebp
	0xa5ceaa: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cebb: sub dword ptr [edi], 0x503852d7
	0xa5cec5: and ebx, 0xffff
	0xa5ced3: add ebx, ebp
	0xa5ced5: xor ebx, 0x2b28b3ec
	0xa5ceeb: mov esi, ebp
	0xa5ceed: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa5cef3: mov dword ptr [esi], ebx
	0xa5cef5: mov ebx, ebp
	0xa5cef7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf04: mov edi, dword ptr [ebx]
	0xa5cf0c: and edi, 2
	0xa5cf12: cmp edi, 0
	0xa5cf18: je 0xa5cf3a
	0xa5cf1e: mov ebx, ebp
	0xa5cf20: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf26: sub dword ptr [ebx], 0x509d27db
	0xa5cf2c: mov ebx, ebp
	0xa5cf2e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5cf34: xor dword ptr [ebx], 0x6546bfdc
	0xa5cf3c: mov edi, ebp
	0xa5cf3e: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf44: mov eax, dword ptr [edi]
	0xa5cf48: add eax, 0x7887eedb
	0xa5cf53: mov edi, ebp
	0xa5cf55: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf5b: xor dword ptr [edi], eax
	0xa5cf67: mov ecx, ebp
	0xa5cf69: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf71: mov edx, dword ptr [ecx]
	0xa5cf73: or edx, 0x5b106951
	0xa5cf7f: mov ecx, ebp
	0xa5cf83: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cf89: or dword ptr [ecx], edx
	0xa5cf93: mov edi, ebp
	0xa5cf95: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5cf9b: mov ecx, dword ptr [edi]
	0xa5cf9d: mov esi, ebp
	0xa5cf9f: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfa5: or dword ptr [esi], ecx
	0xa5cfa7: mov eax, ebp
	0xa5cfa9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5cfae: or dword ptr [eax], 0x52b12e12
	0xa5cfbe: mov esi, ebp
	0xa5cfc0: mov ebx, ebp
	0xa5cfcc: add esi, 0x95
	0xa5cfe8: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5cff5: mov ebx, dword ptr [ebx]
Load [EBP+0x95](STATIC)
	0xa5d007: mov esi, dword ptr [esi]
	0xa5d00d: add esi, 0
	0xa5d020: movzx esi, word ptr [esi]
	0xa5d038: xor esi, 0x609915b4
	0xa5d03e: mov edi, ebp
	0xa5d04b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d056: xor dword ptr [edi], esi
	0xa5d05d: and esi, 0xffff
	0xa5d069: add ebx, esi
	0xa5d074: mov esi, dword ptr [ebx]
	0xa5d080: mov edi, ebp
	0xa5d08d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a3d
	0xa5d093: add dword ptr [edi], 4
	0xa5d099: jmp esi
handlers outputs:



	0xa6fdc0: cmp bl, 0
	0xa6fdc3: je 0xa6fdd4
	0xa6fde0: mov ebx, ebp
	0xa6fde4: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fdea: mov esi, dword ptr [ebx]
	0xa6fdec: and esi, 2
	0xa6fdf2: cmp esi, 0
	0xa6fdf8: je 0xa6fe1a
	0xa6fdfe: mov ebx, ebp
	0xa6fe00: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6fe06: add dword ptr [ebx], 0x6398d341
	0xa6fe0c: mov ebx, ebp
	0xa6fe0e: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6fe14: or dword ptr [ebx], 0x40db5e27
	0xa6fe30: mov edi, ebp
	0xa6fe32: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fe38: mov ebx, dword ptr [edi]
	0xa6fe3a: mov esi, ebp
	0xa6fe3c: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fe42: and dword ptr [esi], ebx
	0xa6fe44: mov esi, ebp
	0xa6fe4a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6fe54: mov esi, dword ptr [esi]
	0xa6fe66: add esi, 0
	0xa6fe6c: mov ecx, dword ptr [esi]
	0xa6fe7a: mov esi, ebp
	0xa6fe92: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa6fea1: sub ecx, dword ptr [esi]
	0xa6fec3: mov esi, ebp
	0xa6fec5: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fedb: xor dword ptr [esi], ecx
	0xa6feeb: xor ecx, 0x9af695a
	0xa6fef8: mov esi, ebp
	0xa6ff01: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa6ff0f: mov dword ptr [esi], ecx
	0xa6ff11: mov esi, ebp
	0xa6ff13: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff19: mov ebx, dword ptr [esi]
	0xa6ff1b: mov esi, ebp
	0xa6ff1d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6ff23: or dword ptr [esi], ebx
	0xa6ff38: mov ebx, ebp
	0xa6ff3a: add ebx, 0xa
	0xa6ff4a: cmp bl, 0
	0xa6ff4d: je 0xa6ff5e
	0xa6ff60: mov ebx, ebp
	0xa6ff64: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff6a: mov ecx, dword ptr [ebx]
	0xa6ff72: and ecx, 2
	0xa6ff7a: cmp ecx, 0
	0xa6ff80: je 0xa6ffa2
	0xa6ff86: mov ebx, ebp
	0xa6ff88: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6ff8e: sub dword ptr [ebx], 0x22b7ec1
	0xa6ff94: mov ebx, ebp
	0xa6ff96: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6ff9c: xor dword ptr [ebx], 0x48891bd9
	0xa6ffae: mov ecx, ebp
	0xa6ffb0: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ffb6: mov ebx, dword ptr [ecx]
	0xa6ffba: and ebx, 2
	0xa6ffc8: cmp ebx, 0
	0xa6ffce: je 0xa6ffea
	0xa6ffd4: mov ecx, ebp
	0xa6ffd6: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6ffdc: or dword ptr [ecx], 0x4e955f5e
	0xa6ffea: mov edi, ebp
	0xa6ffec: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fff2: mov ebx, dword ptr [edi]
	0xa6fff4: mov eax, ebp
	0xa6fff6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fffb: add dword ptr [eax], ebx
	0xa6fffd: mov edx, ebp
	0xa6ffff: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa70005: mov esi, dword ptr [edx]
	0xa70007: mov edi, ebp
	0xa70009: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7000f: add dword ptr [edi], esi
	0xa70019: mov edx, ebp
	0xa70021: mov ecx, ebp
	0xa70029: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7002f: mov ecx, dword ptr [ecx]
	0xa70033: add edx, 0xb8
	0xa70042: add ecx, 4
Load [EBP+0xb8](STATIC)
	0xa70051: mov edx, dword ptr [edx]
	0xa70061: movzx ecx, word ptr [ecx]
	0xa70066: mov edi, ebp
	0xa7006a: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa70076: add ecx, dword ptr [edi]
	0xa70078: add ecx, 0x2227c7fc
	0xa7009d: and ecx, 0xffff
	0xa700a7: add edx, ecx
	0xa700b7: mov edi, dword ptr [edx]
	0xa700bf: mov esi, ebp
	0xa700ca: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a43
	0xa700d0: add dword ptr [esi], 6
	0xa700d6: jmp edi
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73211: mov ecx, ebp
	0xa73213: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73219: add dword ptr [ecx], 0xd852b6c
	0xa7321f: mov ecx, ebp
	0xa73221: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa73227: and dword ptr [ecx], 0x4193680
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0x14](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a47
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa54082: mov eax, ebp
	0xa54084: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54089: and dword ptr [eax], 0x10b6d61f
	0xa5408f: mov esi, ebp
	0xa540a1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa540cb: mov esi, dword ptr [esi]
	0xa540dd: add esi, 0
	0xa540f1: movzx eax, byte ptr [esi]
	0xa540f4: mov esi, ebp
	0xa54112: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa54121: sub eax, dword ptr [esi]
	0xa5413b: mov edi, ebp
	0xa5413f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5415c: sub eax, dword ptr [edi]
	0xa5415e: mov edi, ebp
	0xa54172: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54183: and dword ptr [edi], eax
	0xa54195: mov edi, ebp
	0xa541a3: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa541ba: and dword ptr [edi], 0x3ad761a9
	0xa541d0: mov edi, ebp
	0xa541e5: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa541ef: mov byte ptr [edi], al
	0xa541f3: mov edi, ebp
	0xa541f5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa54201: mov ebx, dword ptr [edi]
	0xa54203: and ebx, 2
	0xa5420b: cmp ebx, 0
	0xa54211: je 0xa5422d
	0xa54279: mov eax, ebp
	0xa5427b: add eax, 0xef
	0xa54282: cmp al, 0
	0xa54284: je 0xa54295
	0xa54297: mov eax, ebp
	0xa54299: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5429e: add dword ptr [eax], 0x5842d7e1
	0xa542a4: mov esi, ebp
	0xa542ae: mov eax, ebp
	0xa542b8: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa542c0: mov esi, dword ptr [esi]
	0xa542d4: add esi, 1
	0xa542e0: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa542f5: mov eax, dword ptr [eax]
	0xa54305: movzx esi, word ptr [esi]
	0xa54310: mov edx, ebp
	0xa5431c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa54322: xor esi, dword ptr [edx]
	0xa54326: sub esi, 0x4b25c03c
	0xa5432c: mov edx, ebp
	0xa54348: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5434e: and dword ptr [edx], esi
	0xa54350: and esi, 0xffff
	0xa5435b: add eax, esi
	0xa54363: mov esi, dword ptr [eax]
	0xa54365: mov edx, ebp
	0xa54372: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a4a
	0xa54378: add dword ptr [edx], 3
	0xa5437e: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa7d6a6: mov eax, ebp
	0xa7d6a8: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7d6ad: mov esi, dword ptr [eax]
	0xa7d6af: or esi, 0x6ebe9626
	0xa7d6b5: mov edx, ebp
	0xa7d6b7: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7d6bd: xor dword ptr [edx], esi
	0xa7d6d1: mov edx, ebp
	0xa7d6dd: add edx, 0x49
Load [EBP+0x49](STATIC)
	0xa7d6e3: mov eax, dword ptr [edx]
	0xa7d6e5: xor eax, 0x1348fdb8
	0xa7d6ea: add eax, 0x57c5d5ad
	0xa7d6ef: mov edi, ebp
	0xa7d6f1: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7d6f7: mov dword ptr [edi], eax
	0xa7d6f9: mov esi, ebp
	0xa7d6fb: mov edi, ebp
	0xa7d6fd: add esi, 0x79
	0xa7d705: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7d70f: xor dword ptr [edi], 0x656f9c61
Load [EBP+0x79](STATIC)
	0xa7d715: mov ecx, dword ptr [esi]
	0xa7d720: xor ecx, 0x9af695a
	0xa7d728: add ecx, 0x57c5d5ad
	0xa7d740: mov esi, ebp
	0xa7d74d: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa7d75c: mov dword ptr [esi], ecx
	0xa7d75e: mov ecx, ebp
	0xa7d760: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7d768: mov ebx, dword ptr [ecx]
	0xa7d76f: mov edx, ebp
	0xa7d773: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7d779: or dword ptr [edx], ebx
	0xa7d795: mov esi, ebp
	0xa7d7a1: mov ecx, ebp
	0xa7d7af: add esi, 0x49
	0xa7d7b7: add ecx, 0xa
Load [EBP+0x49](STATIC)
	0xa7d7bd: mov eax, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7d7d1: xor dword ptr [ecx], 0x6ebaeb02
	0xa7d7dc: sub eax, 0x57c5d5ad
	0xa7d7eb: mov edi, ebp
	0xa7d7ed: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa7d800: mov edx, dword ptr [edi]
	0xa7d80e: sub edx, 0x57c5d5ad
	0xa7d814: mov esi, ebp
	0xa7d829: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa7d833: mov bl, byte ptr [esi]
	0xa7d835: cmp bl, 0x1f
	0xa7d838: jne 0xa7d847
	0xa7d83e: or al, dl
	0xa7d840: pushfd
	0xa7d847: cmp bl, 0x52
	0xa7d84a: jne 0xa7d85f
	0xa7d85f: cmp bl, 0x81
	0xa7d862: jne 0xa7d86f
	0xa7d878: mov edi, ebp
	0xa7d87a: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7d882: mov dword ptr [edi], eax
	0xa7d886: mov ecx, ebp
	0xa7d8b4: add ecx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7d8c5: mov eax, dword ptr [ecx]
	0xa7d8f0: sub eax, 0x2b28b3ec
	0xa7d8fe: mov edi, ebp
	0xa7d90e: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa7d91a: mov dword ptr [edi], eax
	0xa7d938: mov edx, ebp
	0xa7d93c: pop eax
	0xa7d93d: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7d943: mov edx, dword ptr [edx]
	0xa7d947: add edx, 2
	0xa7d959: movzx edx, byte ptr [edx]
	0xa7d95c: cmp edx, 0
	0xa7d962: je 0xa7d9b0
	0xa7d96e: mov edx, 0
	0xa7d97c: mov ecx, ebp
	0xa7d97e: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7d986: mov ecx, dword ptr [ecx]
	0xa7d988: add ecx, 0
	0xa7d996: mov dx, word ptr [ecx]
	0xa7d9a6: add edx, ebp
Store VM_REG [EBP+0x3b]
	0xa7d9ac: mov dword ptr [edx], eax
	0xa7d9b8: mov ecx, ebp
	0xa7d9bf: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7d9c5: mov ecx, dword ptr [ecx]
	0xa7d9d5: mov ebx, ebp
	0xa7d9d9: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7d9e1: mov ebx, dword ptr [ebx]
	0xa7d9ea: add ecx, 3
	0xa7d9f6: movzx ecx, word ptr [ecx]
	0xa7da0c: mov eax, ebp
	0xa7da15: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7da26: sub ecx, dword ptr [eax]
	0xa7da2a: sub ecx, 0xd1ef541
	0xa7da44: mov eax, ebp
	0xa7da50: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7da61: and dword ptr [eax], ecx
	0xa7da74: and ecx, 0xffff
	0xa7da82: add ebx, ecx
	0xa7da8e: mov edi, dword ptr [ebx]
	0xa7da90: mov ebx, ebp
	0xa7da9a: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a4f
	0xa7daa0: add dword ptr [ebx], 5
	0xa7daa6: jmp edi
handlers outputs:



	0xa75496: mov edi, ebp
	0xa75498: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7549e: mov esi, dword ptr [edi]
	0xa754a0: mov edi, ebp
	0xa754a2: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa754a8: sub dword ptr [edi], esi
	0xa754aa: mov ebx, ebp
	0xa754ac: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa754b4: mov edx, dword ptr [ebx]
	0xa754b6: and edx, 2
	0xa754c4: cmp edx, 0
	0xa754ca: je 0xa754ec
	0xa754d0: mov ebx, ebp
	0xa754d2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa754d8: and dword ptr [ebx], 0x2091bfb7
	0xa754de: mov ebx, ebp
	0xa754e0: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa754e6: or dword ptr [ebx], 0x5ef7f4c2
	0xa754ec: cmp cl, 0
	0xa754ef: je 0xa754ff
	0xa75503: mov ecx, ebp
	0xa7550c: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75512: and dword ptr [ecx], 0x1148d664
	0xa75518: mov edx, ebp
	0xa7551a: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa75520: mov esi, dword ptr [edx]
	0xa75522: mov ecx, ebp
	0xa75524: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7552a: add dword ptr [ecx], esi
	0xa7552c: mov edi, ebp
	0xa7552e: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa75534: xor dword ptr [edi], 0x6e6b7179
	0xa7553c: mov eax, ebp
	0xa7553e: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7554b: mov edx, dword ptr [eax]
	0xa7554d: and edx, 2
	0xa7555b: cmp edx, 0
	0xa75561: je 0xa75581
	0xa75567: mov eax, ebp
	0xa75569: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7556e: xor dword ptr [eax], 0xe3b5dd9
	0xa75574: mov eax, ebp
	0xa75576: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7557b: or dword ptr [eax], 0x4a389c85
	0xa75585: mov esi, ebp
	0xa75587: add esi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa7558d: mov ebx, dword ptr [esi]
	0xa7558f: add ebx, 0x2b28b3ec
	0xa75595: mov edx, ebp
	0xa75597: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa7559d: mov edi, dword ptr [edx]
	0xa7559f: xor edi, 0x2b28b3ec
	0xa755a5: mov ecx, ebp
	0xa755a7: add ecx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa755b5: mov al, byte ptr [ecx]
	0xa755b7: cmp al, 0x1f
	0xa755b9: jne 0xa755c1
	0xa755bf: mov byte ptr [edi], bl
	0xa755c1: cmp al, 0x52
	0xa755c3: jne 0xa755cc
	0xa755cc: cmp al, 0x81
	0xa755ce: jne 0xa755d6
	0xa755d6: cmp al, 2
	0xa755d8: jne 0xa755e0
	0xa755e0: mov ebx, ebp
	0xa755e2: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa755e8: xor dword ptr [ebx], 0x3e43e64f
	0xa755ee: mov edi, ebp
	0xa755fa: add edi, 0x95
	0xa7560f: mov ecx, ebp
	0xa7561d: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa75627: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa7562d: mov edi, dword ptr [edi]
	0xa7562f: add edi, 0
	0xa75635: movzx edi, word ptr [edi]
	0xa75640: mov edx, ebp
	0xa75642: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa75656: add edi, dword ptr [edx]
	0xa75658: xor edi, 0x37a47f4b
	0xa75668: mov edx, ebp
	0xa75677: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7567d: and dword ptr [edx], edi
	0xa7568e: and edi, 0xffff
	0xa75699: add ecx, edi
	0xa7569b: mov edi, dword ptr [ecx]
	0xa756a3: mov esi, ebp
	0xa756a5: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a51
	0xa756ab: add dword ptr [esi], 2
	0xa756b1: jmp edi
handlers outputs:



	0xa7a10b: mov eax, ebp
	0xa7a10d: add eax, 0xef
	0xa7a114: cmp al, 0
	0xa7a116: je 0xa7a127
	0xa7a145: mov ecx, ebp
	0xa7a147: add ecx, 0x49
	0xa7a165: mov eax, ebp
	0xa7a167: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a16c: mov edi, dword ptr [eax]
	0xa7a16e: mov edx, ebp
	0xa7a170: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a176: xor dword ptr [edx], edi
	0xa7a18a: cmp cl, 0
	0xa7a18d: je 0xa7a19d
	0xa7a19f: mov edx, ebp
	0xa7a1a1: add edx, 0xe5
	0xa7a1a7: mov eax, ebp
	0xa7a1a9: add eax, 0xa
Load [EBP+0xe5](STATIC)
	0xa7a1ae: mov ecx, dword ptr [edx]
	0xa7a1b0: and ecx, 2
	0xa7a1b6: cmp ecx, 0
	0xa7a1bc: je 0xa7a1de
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1de: xor dword ptr [eax], 0x46ff79b1
	0xa7a1e4: mov ebx, ebp
	0xa7a1e6: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a1ec: xor dword ptr [ebx], 0x2678d220
	0xa7a222: mov edi, ebp
	0xa7a228: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7a238: mov edi, dword ptr [edi]
	0xa7a241: add edi, 0
	0xa7a253: movzx ecx, byte ptr [edi]
	0xa7a256: mov edi, ebp
	0xa7a258: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a262: add ecx, dword ptr [edi]
	0xa7a264: mov edi, ebp
	0xa7a266: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a271: add ecx, dword ptr [edi]
	0xa7a283: mov ebx, ebp
	0xa7a28f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a29a: xor dword ptr [ebx], ecx
	0xa7a2a5: mov eax, ebp
	0xa7a2b4: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a2b9: and dword ptr [eax], 0x76f31181
	0xa7a2c1: mov eax, ebp
	0xa7a2d8: add eax, 0x9e
Store [EBP+0x9e](STATIC)
	0xa7a2df: mov byte ptr [eax], cl
	0xa7a2e1: mov eax, ebp
	0xa7a2e3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a2e8: mov edx, dword ptr [eax]
	0xa7a2ea: add edx, 0x6c2d4307
	0xa7a2f0: mov esi, ebp
	0xa7a2f2: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a2f8: xor dword ptr [esi], edx
	0xa7a2fa: mov esi, ebp
	0xa7a2fc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a302: and dword ptr [esi], 0x3ad95769
	0xa7a32c: mov edx, ebp
	0xa7a338: mov esi, ebp
	0xa7a344: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a34a: mov edx, dword ptr [edx]
	0xa7a354: add edx, 1
	0xa7a35c: add esi, 0xb8
	0xa7a364: movzx edx, word ptr [edx]
Load [EBP+0xb8](STATIC)
	0xa7a367: mov esi, dword ptr [esi]
	0xa7a373: mov eax, ebp
	0xa7a387: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7a38e: xor edx, dword ptr [eax]
	0xa7a399: xor edx, 0x768e7e12
	0xa7a3a1: mov eax, ebp
	0xa7a3b4: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a3bd: sub dword ptr [eax], edx
	0xa7a3d4: and edx, 0xffff
	0xa7a3e4: add esi, edx
	0xa7a3f6: mov ecx, dword ptr [esi]
	0xa7a404: mov edi, ebp
	0xa7a40d: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a54
	0xa7a413: add dword ptr [edi], 3
	0xa7a419: jmp ecx
handlers outputs:



	0xa7bb10: mov esi, ebp
	0xa7bb12: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb18: mov edi, dword ptr [esi]
	0xa7bb1a: mov ebx, ebp
	0xa7bb1c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb22: and dword ptr [ebx], edi
	0xa7bb2c: mov ebx, ebp
	0xa7bb30: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bb36: and dword ptr [ebx], 0x2bdcf64a
	0xa7bb3c: mov edi, ebp
	0xa7bb4e: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bb56: mov edi, dword ptr [edi]
	0xa7bb58: add edi, 2
	0xa7bb5e: movzx ebx, word ptr [edi]
	0xa7bb61: mov eax, ebp
	0xa7bb63: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7bb68: sub ebx, dword ptr [eax]
	0xa7bb6a: mov ecx, ebp
	0xa7bb6c: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bb72: xor ebx, dword ptr [ecx]
	0xa7bb7c: mov ecx, ebp
	0xa7bb7e: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7bb84: xor dword ptr [ecx], 0x5c1c708c
	0xa7bb8a: and ebx, 0xffff
	0xa7bb90: add ebx, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa7bb92: mov ebx, dword ptr [ebx]
	0xa7bb94: xor ebx, 0x1348fdb8
	0xa7bb9a: mov eax, ebp
	0xa7bb9c: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa7bba1: mov dword ptr [eax], ebx
	0xa7bba3: mov eax, ebp
	0xa7bba5: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bbb0: or dword ptr [eax], 0x217f8076
	0xa7bbca: mov ebx, ebp
	0xa7bbcc: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa7bbd2: mov eax, dword ptr [ebx]
	0xa7bbde: cmp al, 0
	0xa7bbe0: je 0xa7bbf1
	0xa7bbf3: mov esi, ebp
	0xa7bbf5: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bbfb: mov ecx, dword ptr [esi]
	0xa7bbfd: mov ebx, ebp
	0xa7bbff: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bc05: xor dword ptr [ebx], ecx
	0xa7bc07: mov edi, ebp
	0xa7bc09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7bc0f: mov esi, dword ptr [edi]
	0xa7bc11: and esi, 2
	0xa7bc17: cmp esi, 0
	0xa7bc1d: je 0xa7bc39
	0xa7bc47: mov edx, ebp
	0xa7bc51: add edx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7bc66: mov edx, dword ptr [edx]
	0xa7bc72: mov esi, ebp
	0xa7bc78: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7bc8c: mov esi, dword ptr [esi]
	0xa7bc96: add esi, 0
	0xa7bca8: movzx esi, word ptr [esi]
	0xa7bcd1: sub esi, 0x1945a008
	0xa7bce9: mov ebx, ebp
	0xa7bcf9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7bd09: add dword ptr [ebx], esi
	0xa7bd0b: and esi, 0xffff
	0xa7bd16: add edx, esi
	0xa7bd1c: mov esi, dword ptr [edx]
	0xa7bd20: mov edi, ebp
	0xa7bd24: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a58
	0xa7bd2a: add dword ptr [edi], 4
	0xa7bd30: jmp esi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa62ee6: mov ecx, ebp
	0xa62ee8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62eee: xor dword ptr [ecx], 0x6874d9
	0xa62ef4: mov ebx, ebp
	0xa62ef6: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62efc: add dword ptr [ebx], 0x3450e9d7
	0xa62f18: mov edx, ebp
	0xa62f1c: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62f28: mov al, byte ptr [edx]
	0xa62f2c: mov ecx, ebp
	0xa62f30: add ecx, 0x49
Load [EBP+0x49](STATIC)
	0xa62f36: mov ebx, dword ptr [ecx]
	0xa62f3e: xor ebx, 0x1348fdb8
	0xa62f44: mov ecx, 0
	0xa62f49: mov edx, ebp
	0xa62f4b: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa62f51: mov edx, dword ptr [edx]
	0xa62f53: add edx, 2
	0xa62f59: mov cx, word ptr [edx]
	0xa62f5c: add ecx, ebp
	0xa62f5e: cmp al, 0x52
	0xa62f60: jne 0xa62f73
	0xa62f73: push ebx
Load [EBP+0xdd](VM_REGISTER)
Store VM_REG [EBP+0xdd]
	0xa62f74: sub dword ptr [ecx], 4
	0xa62f7a: mov edx, ebp
	0xa62f83: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa62f8b: mov eax, dword ptr [edx]
	0xa62f8d: mov ebx, ebp
	0xa62f8f: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62f95: xor dword ptr [ebx], eax
	0xa62fb9: mov ebx, ebp
	0xa62fbb: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62fc1: sub dword ptr [ebx], 0x2a72d2aa
	0xa62fd1: mov esi, ebp
	0xa62fd3: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa62fd9: mov edx, dword ptr [esi]
	0xa62fdb: or edx, 0x6a5fa60f
	0xa62fe1: mov eax, ebp
	0xa62fe3: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa62fe8: add dword ptr [eax], edx
	0xa62fea: mov edi, ebp
	0xa62fec: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa62ff2: add dword ptr [edi], 0x6af3f9cd
	0xa63046: mov ebx, ebp
	0xa6304a: mov ecx, ebp
	0xa63058: add ebx, 0x95
	0xa63064: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa63075: mov ecx, dword ptr [ecx]
Load [EBP+0x95](STATIC)
	0xa6308a: mov ebx, dword ptr [ebx]
	0xa63090: add ebx, 0
	0xa6309b: movzx ebx, word ptr [ebx]
	0xa630a0: mov eax, ebp
	0xa630a4: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa630ab: xor ebx, dword ptr [eax]
	0xa630b1: xor ebx, 0x28fcb125
	0xa630e9: and ebx, 0xffff
	0xa630f3: add ecx, ebx
	0xa63106: mov edi, dword ptr [ecx]
	0xa63108: mov ecx, ebp
	0xa63112: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a5c
	0xa63118: add dword ptr [ecx], 4
	0xa6311e: jmp edi
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a60
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa50986: mov eax, ebp
	0xa50988: add eax, 0xef
	0xa50991: cmp al, 0
	0xa50993: je 0xa509a4
	0xa509c6: mov edi, ebp
	0xa509c8: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa509ce: mov ebx, dword ptr [edi]
	0xa509d0: and ebx, 2
	0xa509d6: cmp ebx, 0
	0xa509dc: je 0xa509fe
	0xa509fe: mov esi, ebp
	0xa50a0e: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50a25: mov esi, dword ptr [esi]
	0xa50a27: add esi, 0
	0xa50a33: movzx ebx, byte ptr [esi]
	0xa50a45: mov edx, ebp
	0xa50a53: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa50a59: add ebx, dword ptr [edx]
	0xa50a5d: mov edx, ebp
	0xa50a67: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50a6f: add ebx, dword ptr [edx]
	0xa50a80: mov edx, ebp
	0xa50a84: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50a94: and dword ptr [edx], ebx
	0xa50a96: mov edx, ebp
	0xa50a9c: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa50aa6: xor dword ptr [edx], 0x39e2bf6
	0xa50ac1: mov ecx, ebp
	0xa50acd: add ecx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa50ae2: mov byte ptr [ecx], bl
	0xa50ae4: mov edx, ebp
	0xa50ae6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50af4: mov eax, dword ptr [edx]
	0xa50afc: sub eax, 0x1e3a4334
	0xa50b03: mov ebx, ebp
	0xa50b05: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50b0b: xor dword ptr [ebx], eax
	0xa50b1f: mov esi, ebp
	0xa50b2e: mov eax, ebp
	0xa50b3d: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa50b4a: mov esi, dword ptr [esi]
	0xa50b5d: add esi, 1
	0xa50b6e: movzx esi, word ptr [esi]
	0xa50b79: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa50b8b: mov eax, dword ptr [eax]
	0xa50b95: mov edi, ebp
	0xa50b97: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa50bb2: xor esi, dword ptr [edi]
	0xa50bea: and esi, 0xffff
	0xa50bf0: add eax, esi
	0xa50bf2: mov esi, dword ptr [eax]
	0xa50bf4: mov edx, ebp
	0xa50c09: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a63
	0xa50c0f: add dword ptr [edx], 3
	0xa50c15: jmp esi
handlers outputs:



	0xa58da4: mov ecx, ebp
	0xa58dae: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58dc0: mov ebx, dword ptr [ecx]
	0xa58dc2: xor ebx, 0x247e447f
	0xa58dc8: mov esi, ebp
	0xa58dca: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58dd0: sub dword ptr [esi], ebx
	0xa58dd2: mov ecx, ebp
	0xa58dd4: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58dda: xor dword ptr [ecx], 0x2101d9d2
	0xa58de0: mov esi, ebp
	0xa58de2: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58df9: mov esi, dword ptr [esi]
	0xa58dfb: add esi, 0
	0xa58e0b: movzx ecx, word ptr [esi]
	0xa58e3f: mov ebx, ebp
	0xa58e47: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58e4f: xor ecx, dword ptr [ebx]
	0xa58e58: mov esi, ebp
	0xa58e5c: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58e62: add dword ptr [esi], ecx
	0xa58e76: mov ebx, ebp
	0xa58e86: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58e8c: add dword ptr [ebx], 0x479e6ec8
	0xa58ea1: and ecx, 0xffff
	0xa58eac: add ecx, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa58eb2: mov ecx, dword ptr [ecx]
	0xa58eb6: xor ecx, 0x9af695a
	0xa58ecc: mov esi, ebp
	0xa58ece: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa58ed6: mov dword ptr [esi], ecx
	0xa58ed8: mov ecx, ebp
	0xa58eda: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58ee8: mov esi, dword ptr [ecx]
	0xa58eee: xor esi, 0x38f07861
	0xa58ef4: mov eax, ebp
	0xa58ef6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58efb: and dword ptr [eax], esi
	0xa58efd: mov eax, ebp
	0xa58eff: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f04: or dword ptr [eax], 0x2ffb98e4
	0xa58f0a: mov ebx, ebp
	0xa58f13: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa58f19: mov edx, dword ptr [ebx]
	0xa58f1d: mov ebx, ebp
	0xa58f1f: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f25: sub dword ptr [ebx], edx
	0xa58f27: mov esi, ebp
	0xa58f29: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58f2f: sub dword ptr [esi], 0x7f9dc707
	0xa58f3f: mov edi, ebp
	0xa58f41: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58f47: and dword ptr [edi], 0x201178a2
	0xa58f55: mov edx, ebp
	0xa58f59: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58f5f: mov edi, dword ptr [edx]
	0xa58f63: and edi, 2
	0xa58f69: cmp edi, 0
	0xa58f6f: je 0xa58f91
	0xa58f91: mov ecx, ebp
	0xa58f93: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58f99: or dword ptr [ecx], 0x6157851f
	0xa58f9f: mov eax, ebp
	0xa58fa1: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fa6: and dword ptr [eax], 0x73d721
	0xa58fac: mov esi, ebp
	0xa58fae: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fb4: and dword ptr [esi], 0x45a5408a
	0xa58fba: mov esi, ebp
	0xa58fbc: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58fc2: add dword ptr [esi], 0x64f710e1
	0xa58fd2: mov ecx, ebp
	0xa58fdf: add ecx, 0xb8
	0xa58fed: mov eax, ebp
Load [EBP+0xb8](STATIC)
	0xa58fef: mov ecx, dword ptr [ecx]
	0xa59004: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa59015: mov eax, dword ptr [eax]
	0xa59026: add eax, 2
	0xa5903c: movzx eax, word ptr [eax]
	0xa59045: mov ebx, ebp
	0xa59047: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5905b: add eax, dword ptr [ebx]
	0xa59069: sub eax, 0x40edc9ca
	0xa59080: mov edi, ebp
	0xa59082: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59097: xor dword ptr [edi], eax
	0xa5909b: and eax, 0xffff
	0xa590a0: add ecx, eax
	0xa590a8: mov edi, dword ptr [ecx]
	0xa590af: mov eax, ebp
	0xa590b5: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a67
	0xa590ba: add dword ptr [eax], 4
	0xa590c0: jmp edi
handlers outputs:



	0xa57e8a: cmp dl, 0
	0xa57e8d: je 0xa57e9e
	0xa57ea0: mov edi, ebp
	0xa57ea2: mov eax, ebp
	0xa57ea4: add eax, 0xef
	0xa57eab: cmp al, 0
	0xa57ead: je 0xa57ebe
	0xa57ec0: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ec6: and dword ptr [edi], 0x3559bbe0
	0xa57ecc: mov esi, ebp
	0xa57ece: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57ed4: xor dword ptr [esi], 0x7ea468e7
	0xa57eda: mov ecx, ebp
	0xa57edc: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57ee2: mov ebx, dword ptr [ecx]
	0xa57ee4: mov edi, ebp
	0xa57ee6: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57eec: xor dword ptr [edi], ebx
	0xa57eee: mov esi, ebp
	0xa57ef0: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa57ef6: mov ebx, dword ptr [esi]
	0xa57ef8: mov edx, ebp
	0xa57efa: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f00: add dword ptr [edx], ebx
	0xa57f02: mov edx, ebp
	0xa57f04: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57f0a: and dword ptr [edx], 0x5a367804
	0xa57f10: mov esi, ebp
	0xa57f12: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57f18: sub dword ptr [esi], 0x43f36859
	0xa57f29: mov edx, ebp
	0xa57f35: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa57f44: mov edx, dword ptr [edx]
	0xa57f48: add edx, 2
	0xa57f62: movzx ecx, word ptr [edx]
	0xa57f65: mov edx, ebp
	0xa57f7c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa57f8d: xor ecx, dword ptr [edx]
	0xa57f98: mov eax, ebp
	0xa57fac: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa57fb3: xor ecx, dword ptr [eax]
	0xa57fb5: mov eax, ebp
	0xa57fb7: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa57fbc: xor dword ptr [eax], ecx
	0xa57fc8: mov eax, ebp
	0xa57fce: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa57fdd: sub dword ptr [eax], 0x50096f31
	0xa57ff7: and ecx, 0xffff
	0xa58003: add ecx, ebp
	0xa5800e: xor ecx, 0x2b28b3ec
	0xa58016: mov ebx, ebp
	0xa58022: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa58030: mov dword ptr [ebx], ecx
	0xa5803b: mov ecx, ebp
	0xa5803d: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa58043: mov ebx, dword ptr [ecx]
	0xa58045: or ebx, 0x62a21e52
	0xa5804b: mov esi, ebp
	0xa5804d: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58053: sub dword ptr [esi], ebx
	0xa58055: mov ecx, ebp
	0xa58057: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5805d: or dword ptr [ecx], 0x37afd558
	0xa58070: mov edx, ebp
	0xa58074: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5807c: mov eax, dword ptr [edx]
	0xa5807e: or eax, 0x61ddb8d8
	0xa58083: mov ecx, ebp
	0xa58085: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5808b: sub dword ptr [ecx], eax
	0xa5808d: mov esi, ebp
	0xa5808f: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58095: xor dword ptr [esi], 0x6c8e45f3
	0xa580af: mov ecx, ebp
	0xa580b1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa580b7: and dword ptr [ecx], 0x23762a96
	0xa580cf: mov ecx, ebp
	0xa580d1: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa580d7: mov edi, dword ptr [ecx]
	0xa580d9: and edi, 2
	0xa580df: cmp edi, 0
	0xa580e5: je 0xa58107
	0xa580eb: mov ecx, ebp
	0xa580ed: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa580f3: sub dword ptr [ecx], 0x2af0923d
	0xa580f9: mov ecx, ebp
	0xa580fb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58101: sub dword ptr [ecx], 0x3d654a0e
	0xa58114: mov ecx, ebp
	0xa58116: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa58120: mov ecx, dword ptr [ecx]
	0xa5812a: mov edx, ebp
	0xa5813e: add edx, 0xb8
	0xa58144: add ecx, 0
	0xa5814c: movzx ecx, word ptr [ecx]
Load [EBP+0xb8](STATIC)
	0xa58153: mov edx, dword ptr [edx]
	0xa5815c: mov ebx, ebp
	0xa58168: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa58172: xor ecx, dword ptr [ebx]
	0xa58174: xor ecx, 0x14fc0902
	0xa58185: mov ebx, ebp
	0xa58187: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58191: or dword ptr [ebx], ecx
	0xa581a6: and ecx, 0xffff
	0xa581b2: add edx, ecx
	0xa581c8: mov ebx, dword ptr [edx]
	0xa581ce: mov esi, ebp
	0xa581db: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a6b
	0xa581e1: add dword ptr [esi], 4
	0xa581e7: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa73869: mov eax, ebp
	0xa73873: add eax, 0x9e
	0xa7387c: cmp al, 0
	0xa7387e: je 0xa7388f
	0xa73891: mov esi, ebp
	0xa73893: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73899: mov edi, dword ptr [esi]
	0xa7389b: mov edx, ebp
	0xa7389d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa738a3: or dword ptr [edx], edi
	0xa738ad: mov edx, ebp
	0xa738af: add edx, 0x49
Load [EBP+0x49](STATIC)
	0xa738b5: mov esi, dword ptr [edx]
	0xa738b7: mov ecx, ebp
	0xa738b9: add ecx, 0xa
	0xa738bf: xor esi, 0x1348fdb8
	0xa738c5: sub esi, 0x10b8ac2a
	0xa738cb: mov edi, ebp
	0xa738cd: add edi, 0x49
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa738d3: and dword ptr [ecx], 0x190af2a6
Store [EBP+0x49](STATIC)
	0xa738d9: mov dword ptr [edi], esi
	0xa738df: mov edx, ebp
	0xa738eb: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa738f9: mov ebx, dword ptr [edx]
	0xa738fb: xor ebx, 0x9af695a
	0xa7390e: sub ebx, 0x10b8ac2a
	0xa7391c: mov ecx, ebp
	0xa73926: add ecx, 0x79
Store [EBP+0x79](STATIC)
	0xa73940: mov dword ptr [ecx], ebx
	0xa73946: mov esi, ebp
	0xa73950: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa73956: mov eax, dword ptr [esi]
	0xa7396a: add eax, 0x10b8ac2a
	0xa73973: mov esi, ebp
	0xa7397f: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa7398c: mov ebx, dword ptr [esi]
	0xa7398e: add ebx, 0x10b8ac2a
	0xa73998: mov esi, ebp
	0xa739a4: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa739b2: mov cl, byte ptr [esi]
	0xa739b4: cmp cl, 0x1f
	0xa739b7: jne 0xa739c4
	0xa739c4: cmp cl, 0x52
	0xa739c7: jne 0xa739d7
	0xa739d7: cmp cl, 0x81
	0xa739da: jne 0xa739e8
	0xa739e0: add eax, ebx
	0xa739e2: pushfd
	0xa739f2: add eax, 0x1439e080
	0xa73a03: mov esi, ebp
	0xa73a0e: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa73a18: mov dword ptr [esi], eax
	0xa73a1a: mov ebx, ebp
	0xa73a1c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73a22: add dword ptr [ebx], 0x2fdc6a96
	0xa73a32: cmp al, 0
	0xa73a34: je 0xa73a45
	0xa73a4e: mov ecx, ebp
	0xa73a50: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa73a58: mov edx, dword ptr [ecx]
	0xa73a5a: cmp bl, 0
	0xa73a5d: je 0xa73a6e
	0xa73a70: mov ecx, ebp
	0xa73a72: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73a78: add dword ptr [ecx], edx
	0xa73a80: mov edi, ebp
	0xa73a88: add edi, 0x95
	0xa73a95: pop ebx
Load [EBP+0x95](STATIC)
	0xa73a9c: mov edi, dword ptr [edi]
	0xa73aa4: add edi, 4
	0xa73aac: movzx edi, byte ptr [edi]
	0xa73aaf: cmp edi, 0
	0xa73ab5: je 0xa73af9
	0xa73ac2: mov edi, 0
	0xa73ac7: mov edx, ebp
	0xa73ad0: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa73ad6: mov edx, dword ptr [edx]
	0xa73ad8: add edx, 0
	0xa73aea: mov di, word ptr [edx]
	0xa73af3: add edi, ebp
Store VM_REG [EBP+0x3b]
	0xa73af7: mov dword ptr [edi], ebx
	0xa73b03: cmp bl, 0
	0xa73b06: je 0xa73b16
	0xa73b18: mov ecx, ebp
	0xa73b1a: add ecx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa73b20: mov eax, dword ptr [ecx]
	0xa73b22: sub eax, 0x1439e080
	0xa73b27: sub eax, 0x2b28b3ec
	0xa73b2c: mov ebx, ebp
	0xa73b2e: add ebx, 0x2d
Store [EBP+0x2d](STATIC)
	0xa73b34: mov dword ptr [ebx], eax
	0xa73b40: cmp cl, 0
	0xa73b43: je 0xa73b54
	0xa73b64: mov edi, ebp
	0xa73b74: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa73b7f: mov edi, dword ptr [edi]
	0xa73b83: mov ecx, ebp
	0xa73b85: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa73ba1: mov ecx, dword ptr [ecx]
	0xa73ba5: add edi, 2
	0xa73bb7: movzx edi, word ptr [edi]
	0xa73bbc: mov eax, ebp
	0xa73bca: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa73bd7: sub edi, dword ptr [eax]
	0xa73bd9: add edi, 0x6a3f10dd
	0xa73bf1: mov eax, ebp
	0xa73bf3: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73c09: add dword ptr [eax], edi
	0xa73c13: and edi, 0xffff
	0xa73c19: add ecx, edi
	0xa73c1d: mov edi, dword ptr [ecx]
	0xa73c21: mov ebx, ebp
	0xa73c2f: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a70
	0xa73c35: add dword ptr [ebx], 5
	0xa73c3b: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa6c134: mov ecx, ebp
	0xa6c136: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c13c: mov edi, dword ptr [ecx]
	0xa6c145: and edi, 2
	0xa6c14d: cmp edi, 0
	0xa6c153: je 0xa6c175
	0xa6c159: mov ecx, ebp
	0xa6c15b: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c161: add dword ptr [ecx], 0x2dc372d3
	0xa6c167: mov ecx, ebp
	0xa6c169: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c16f: xor dword ptr [ecx], 0x2151cce1
	0xa6c194: mov ecx, ebp
	0xa6c196: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c1a2: and dword ptr [ecx], 0x6af2de16
	0xa6c1ca: mov eax, ebp
	0xa6c1cc: mov esi, ebp
	0xa6c1ce: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c1d3: mov edi, dword ptr [eax]
	0xa6c1d5: and edi, 2
	0xa6c1db: cmp edi, 0
	0xa6c1e1: je 0xa6c201
	0xa6c1e7: mov eax, ebp
	0xa6c1e9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c1ee: sub dword ptr [eax], 0x5b7cdf21
	0xa6c1f4: mov eax, ebp
	0xa6c1f6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c1fb: add dword ptr [eax], 0x19f02a40
	0xa6c201: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c207: add dword ptr [esi], 0x4b12a33
	0xa6c20d: mov edi, ebp
	0xa6c20f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c215: mov esi, dword ptr [edi]
	0xa6c217: mov edx, ebp
	0xa6c219: and esi, 2
	0xa6c21f: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa6c225: mov ecx, dword ptr [edx]
	0xa6c227: add ecx, 0x2b28b3ec
	0xa6c22d: cmp esi, 0
	0xa6c233: je 0xa6c255
	0xa6c239: mov edi, ebp
	0xa6c23b: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c241: and dword ptr [edi], 0x1ba1d391
	0xa6c247: mov edi, ebp
	0xa6c249: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa6c24f: and dword ptr [edi], 0x5bd0f1c2
	0xa6c255: mov ebx, ebp
	0xa6c257: add ebx, 0xef
Load [EBP+0xef](STATIC)
	0xa6c25d: mov esi, dword ptr [ebx]
	0xa6c25f: xor esi, 0x2b28b3ec
	0xa6c265: mov edx, ebp
	0xa6c267: add edx, 0x9e
Load [EBP+0x9e](STATIC)
	0xa6c26d: mov bl, byte ptr [edx]
	0xa6c26f: cmp bl, 0x1f
	0xa6c272: jne 0xa6c27a
	0xa6c27a: cmp bl, 0x52
	0xa6c27d: jne 0xa6c286
	0xa6c286: cmp bl, 0x81
	0xa6c289: jne 0xa6c291
	0xa6c28f: mov dword ptr [esi], ecx
	0xa6c291: cmp bl, 2
	0xa6c294: jne 0xa6c29c
	0xa6c2a4: mov eax, ebp
	0xa6c2a6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c2ab: mov ebx, dword ptr [eax]
	0xa6c2ad: and ebx, 2
	0xa6c2b3: cmp ebx, 0
	0xa6c2b9: je 0xa6c2d3
	0xa6c2d3: mov eax, ebp
	0xa6c2d5: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c2da: mov ecx, dword ptr [eax]
	0xa6c2dc: mov eax, ebp
	0xa6c2de: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c2e3: and dword ptr [eax], ecx
	0xa6c2e5: mov edx, ebp
	0xa6c2e7: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6c2ed: mov esi, dword ptr [edx]
	0xa6c2ef: and esi, 0x587df907
	0xa6c2f5: mov edx, ebp
	0xa6c2f7: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c2fd: xor dword ptr [edx], esi
	0xa6c2ff: mov esi, ebp
	0xa6c301: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c307: or dword ptr [esi], 0x11e31c83
	0xa6c30f: mov esi, ebp
	0xa6c31e: add esi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa6c324: mov esi, dword ptr [esi]
	0xa6c328: mov eax, ebp
	0xa6c32a: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa6c33d: mov eax, dword ptr [eax]
	0xa6c347: add eax, 0
	0xa6c350: movzx eax, word ptr [eax]
	0xa6c355: mov edx, ebp
	0xa6c35b: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa6c36e: xor eax, dword ptr [edx]
	0xa6c370: sub eax, 0x2a562d1f
	0xa6c381: mov edx, ebp
	0xa6c38d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6c39b: and dword ptr [edx], eax
	0xa6c39d: and eax, 0xffff
	0xa6c3ab: add esi, eax
	0xa6c3b6: mov eax, dword ptr [esi]
	0xa6c3c0: mov ebx, ebp
	0xa6c3d4: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a72
	0xa6c3da: add dword ptr [ebx], 2
	0xa6c3e0: jmp eax
handlers outputs:



	0xa7a755: mov ecx, ebp
	0xa7a763: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7a769: mov ecx, dword ptr [ecx]
	0xa7a76d: add ecx, 0
	0xa7a778: movzx ebx, word ptr [ecx]
	0xa7a79d: mov eax, ebp
	0xa7a7b0: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a7be: sub ebx, dword ptr [eax]
	0xa7a7c2: mov eax, ebp
	0xa7a7cf: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a7d4: or dword ptr [eax], ebx
	0xa7a801: and ebx, 0xffff
	0xa7a807: add ebx, ebp
Load [EBP+0xf8](VM_REGISTER)
	0xa7a81b: mov ebx, dword ptr [ebx]
	0xa7a823: xor ebx, 0x9af695a
	0xa7a832: mov edx, ebp
	0xa7a839: add edx, 0x79
Store [EBP+0x79](STATIC)
	0xa7a84f: mov dword ptr [edx], ebx
	0xa7a851: mov ebx, ebp
	0xa7a853: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a859: mov edi, dword ptr [ebx]
	0xa7a865: mov edx, ebp
	0xa7a867: add edx, 0xa
	0xa7a86d: and edi, 2
	0xa7a873: cmp edi, 0
	0xa7a879: je 0xa7a895
	0xa7a899: mov edi, ebp
	0xa7a8a0: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8a6: mov ebx, dword ptr [edi]
	0xa7a8a8: and ebx, 2
	0xa7a8ae: cmp ebx, 0
	0xa7a8b4: je 0xa7a8d6
	0xa7a8d8: cmp dl, 0
	0xa7a8db: je 0xa7a8ec
	0xa7a8f7: mov edx, ebp
	0xa7a8f9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a8ff: mov ecx, dword ptr [edx]
	0xa7a901: and ecx, 2
	0xa7a907: cmp ecx, 0
	0xa7a90d: je 0xa7a92f
	0xa7a92f: mov esi, ebp
	0xa7a931: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7a937: mov ecx, dword ptr [esi]
	0xa7a939: and ecx, 0x5db1956c
	0xa7a93f: mov eax, ebp
	0xa7a941: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7a946: xor dword ptr [eax], ecx
	0xa7a948: mov esi, ebp
	0xa7a95a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7a960: mov eax, dword ptr [esi]
	0xa7a962: and eax, 2
	0xa7a967: cmp eax, 0
	0xa7a96c: je 0xa7a98e
	0xa7a98e: mov ecx, ebp
	0xa7a998: add ecx, 0xef
Load [EBP+0xef](STATIC)
	0xa7a99e: mov edx, dword ptr [ecx]
	0xa7a9a2: cmp dl, 0
	0xa7a9a5: je 0xa7a9b5
	0xa7a9b7: mov eax, ebp
	0xa7a9b9: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7a9be: add dword ptr [eax], 0x27628d33
	0xa7a9d4: mov eax, ebp
	0xa7a9dc: mov ecx, ebp
	0xa7a9e8: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7a9ef: mov eax, dword ptr [eax]
	0xa7a9f1: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7aa05: mov ecx, dword ptr [ecx]
	0xa7aa16: add ecx, 2
	0xa7aa1e: movzx ecx, word ptr [ecx]
	0xa7aa27: mov edx, ebp
	0xa7aa31: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa7aa39: sub ecx, dword ptr [edx]
	0xa7aa3d: xor ecx, 0x4ca6cd36
	0xa7aa51: mov edx, ebp
	0xa7aa61: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7aa6d: sub dword ptr [edx], ecx
	0xa7aa77: and ecx, 0xffff
	0xa7aa88: add eax, ecx
	0xa7aa8c: mov ecx, dword ptr [eax]
	0xa7aa96: mov edx, ebp
	0xa7aaa6: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a76
	0xa7aaac: add dword ptr [edx], 4
	0xa7aab2: jmp ecx
handlers outputs:



	0xa54082: mov eax, ebp
	0xa54084: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54089: and dword ptr [eax], 0x10b6d61f
	0xa5408f: mov esi, ebp
	0xa540a1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa540cb: mov esi, dword ptr [esi]
	0xa540dd: add esi, 0
	0xa540f1: movzx eax, byte ptr [esi]
	0xa540f4: mov esi, ebp
	0xa54112: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa54121: sub eax, dword ptr [esi]
	0xa5413b: mov edi, ebp
	0xa5413f: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5415c: sub eax, dword ptr [edi]
	0xa5415e: mov edi, ebp
	0xa54172: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa54183: and dword ptr [edi], eax
	0xa54195: mov edi, ebp
	0xa541a3: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa541ba: and dword ptr [edi], 0x3ad761a9
	0xa541d0: mov edi, ebp
	0xa541e5: add edi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa541ef: mov byte ptr [edi], al
	0xa541f3: mov edi, ebp
	0xa541f5: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa54201: mov ebx, dword ptr [edi]
	0xa54203: and ebx, 2
	0xa5420b: cmp ebx, 0
	0xa54211: je 0xa5422d
	0xa54279: mov eax, ebp
	0xa5427b: add eax, 0xef
	0xa54282: cmp al, 0
	0xa54284: je 0xa54295
	0xa54297: mov eax, ebp
	0xa54299: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5429e: add dword ptr [eax], 0x5842d7e1
	0xa542a4: mov esi, ebp
	0xa542ae: mov eax, ebp
	0xa542b8: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa542c0: mov esi, dword ptr [esi]
	0xa542d4: add esi, 1
	0xa542e0: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa542f5: mov eax, dword ptr [eax]
	0xa54305: movzx esi, word ptr [esi]
	0xa54310: mov edx, ebp
	0xa5431c: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa54322: xor esi, dword ptr [edx]
	0xa54326: sub esi, 0x4b25c03c
	0xa5432c: mov edx, ebp
	0xa54348: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5434e: and dword ptr [edx], esi
	0xa54350: and esi, 0xffff
	0xa5435b: add eax, esi
	0xa54363: mov esi, dword ptr [eax]
	0xa54365: mov edx, ebp
	0xa54372: add edx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a79
	0xa54378: add dword ptr [edx], 3
	0xa5437e: jmp esi
handlers outputs:



	0xa7c9a7: mov esi, ebp
	0xa7c9a9: mov edx, ebp
	0xa7c9ab: add edx, 0xef
	0xa7c9b1: add esi, 0xa
Load [EBP+0xef](STATIC)
	0xa7c9b7: mov eax, dword ptr [edx]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9b9: or dword ptr [esi], 0x31838a60
	0xa7c9bf: cmp bl, 0
	0xa7c9c2: je 0xa7c9d2
	0xa7c9d2: sub eax, edi
	0xa7c9d4: mov edx, ebp
	0xa7c9d6: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c9dc: mov ecx, dword ptr [edx]
	0xa7c9de: mov ebx, ebp
	0xa7c9e0: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c9e6: sub dword ptr [ebx], ecx
	0xa7c9e8: xor ebx, 0x4a2450f1
	0xa7c9ee: mov esi, ebp
	0xa7c9f8: add esi, 0x2d
	0xa7ca00: mov edi, ebp
Load [EBP+0x2d](STATIC)
	0xa7ca02: xor ebx, dword ptr [esi]
	0xa7ca04: sub ebx, eax
	0xa7ca06: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa7ca0c: add ebx, dword ptr [edi]
	0xa7ca24: cmp bl, 0
	0xa7ca27: je 0xa7ca37
	0xa7ca54: mov edi, ebp
	0xa7ca56: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca5c: sub dword ptr [edi], 0x7de1bb81
	0xa7ca6a: mov eax, ebp
	0xa7ca6c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7ca79: and dword ptr [eax], 0x51432f13
	0xa7ca9b: mov ebx, ebp
	0xa7ca9d: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7caa3: mov esi, dword ptr [ebx]
	0xa7caa5: mov ebx, ebp
	0xa7caa7: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7caad: xor dword ptr [ebx], esi
	0xa7caaf: mov esi, ebp
	0xa7cab1: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cab7: mov ecx, dword ptr [esi]
	0xa7cab9: and ecx, 2
	0xa7cabf: cmp ecx, 0
	0xa7cac5: je 0xa7cae1
	0xa7cae1: mov esi, ebp
	0xa7cae5: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7caf1: mov esi, dword ptr [esi]
	0xa7caf9: add esi, 2
	0xa7cb05: movzx eax, word ptr [esi]
	0xa7cb19: mov ecx, ebp
	0xa7cb23: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cb33: add eax, dword ptr [ecx]
	0xa7cb40: mov ebx, ebp
	0xa7cb46: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7cb4e: xor eax, dword ptr [ebx]
	0xa7cb52: mov ebx, ebp
	0xa7cb5a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cb6c: sub dword ptr [ebx], eax
	0xa7cb7a: mov edx, ebp
	0xa7cb82: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7cb95: add dword ptr [edx], 0x18607914
	0xa7cb9f: and eax, 0xffff
	0xa7cbb3: add eax, ebp
	0xa7cbc3: xor eax, 0x2b28b3ec
	0xa7cbd7: mov ecx, ebp
	0xa7cbdf: add ecx, 0xef
Store [EBP+0xef](STATIC)
	0xa7cbeb: mov dword ptr [ecx], eax
	0xa7cbf1: mov edx, ebp
	0xa7cbfb: mov edi, ebp
	0xa7cc08: add edx, 0x95
Load [EBP+0x95](STATIC)
	0xa7cc19: mov edx, dword ptr [edx]
	0xa7cc28: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7cc30: mov edi, dword ptr [edi]
	0xa7cc41: add edx, 0
	0xa7cc47: movzx edx, word ptr [edx]
	0xa7cc4a: mov ecx, ebp
	0xa7cc50: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa7cc5f: add edx, dword ptr [ecx]
	0xa7cc61: add edx, 0x54c0645e
	0xa7cc6e: mov ebx, ebp
	0xa7cc87: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7cc9a: or dword ptr [ebx], edx
	0xa7cca8: and edx, 0xffff
	0xa7ccba: add edi, edx
	0xa7ccc2: mov ebx, dword ptr [edi]
	0xa7cccf: mov edi, ebp
	0xa7cce3: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a7d
	0xa7cce9: add dword ptr [edi], 4
	0xa7ccef: jmp ebx
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0x13](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a81
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa5fbb6: mov esi, ebp
	0xa5fbba: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5fbc6: mov ecx, dword ptr [esi]
	0xa5fbc8: and ecx, 2
	0xa5fbd0: cmp ecx, 0
	0xa5fbd6: je 0xa5fbec
	0xa5fbf6: mov ecx, ebp
	0xa5fbf8: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5fbfe: and dword ptr [ecx], 0x1f328bbd
	0xa5fc0d: mov edx, ebp
	0xa5fc0f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5fc15: sub dword ptr [edx], 0x7bda11bd
	0xa5fc1b: mov edx, ebp
	0xa5fc1d: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5fc23: or dword ptr [edx], 0x1b2f3f73
	0xa5fc47: mov ecx, ebp
	0xa5fc49: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5fc4f: xor dword ptr [ecx], 0x128874ff
	0xa5fc55: mov edx, ebp
	0xa5fc57: add edx, 0x79
Load [EBP+0x79](STATIC)
	0xa5fc5d: mov edi, dword ptr [edx]
	0xa5fc5f: xor edi, 0x9af695a
	0xa5fc65: mov edx, ebp
	0xa5fc67: mov ebx, ebp
	0xa5fc69: add ebx, 0x79
	0xa5fc6f: add edx, 0xe5
Store [EBP+0x79](STATIC)
	0xa5fc75: mov dword ptr [ebx], edi
Load [EBP+0xe5](STATIC)
	0xa5fc77: mov eax, dword ptr [edx]
	0xa5fc79: and eax, 2
	0xa5fc7e: cmp eax, 0
	0xa5fc83: je 0xa5fca5
	0xa5fc89: mov edx, ebp
	0xa5fc8b: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5fc91: or dword ptr [edx], 0x8efdab5
	0xa5fc97: mov edx, ebp
	0xa5fc99: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5fc9f: sub dword ptr [edx], 0x609f215e
	0xa5fcb9: cmp dl, 0
	0xa5fcbc: je 0xa5fccc
	0xa5fcce: mov esi, ebp
	0xa5fcd0: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa5fcd6: mov edi, dword ptr [esi]
	0xa5fcd8: xor edi, 0x1348fdb8
	0xa5fcde: sub edi, 0x76d25869
	0xa5fce4: mov esi, ebp
	0xa5fce6: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5fcec: mov dword ptr [esi], edi
	0xa5fcee: mov edx, ebp
	0xa5fcf0: add edx, 0x49
Load [EBP+0x49](STATIC)
	0xa5fd02: mov ecx, dword ptr [edx]
	0xa5fd04: add ecx, 0x76d25869
	0xa5fd0a: mov edi, ebp
	0xa5fd0c: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa5fd17: mov ebx, dword ptr [edi]
	0xa5fd19: mov eax, ebp
	0xa5fd1b: add eax, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5fd20: mov dl, byte ptr [eax]
	0xa5fd22: cmp dl, 0x1f
	0xa5fd25: jne 0xa5fd2e
	0xa5fd2b: sub cl, bl
	0xa5fd2d: pushfd
	0xa5fd2e: cmp dl, 0x52
	0xa5fd31: jne 0xa5fd3b
	0xa5fd3b: cmp dl, 0x81
	0xa5fd3e: jne 0xa5fd47
	0xa5fd47: sub ecx, 0x744ae4f3
	0xa5fd4d: mov edi, ebp
	0xa5fd4f: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5fd55: mov dword ptr [edi], ecx
	0xa5fd75: pop eax
	0xa5fd88: mov edi, ebp
	0xa5fd8f: mov ebx, ebp
	0xa5fd91: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa5fda5: mov ecx, dword ptr [edi]
	0xa5fda9: add ecx, 0x744ae4f3
	0xa5fdb5: sub ecx, 0x2b28b3ec
	0xa5fdcd: add ebx, 0x95
	0xa5fdd3: mov edi, ebp
Load [EBP+0x95](STATIC)
	0xa5fdd5: mov ebx, dword ptr [ebx]
	0xa5fddb: add ebx, 0
	0xa5fde3: add edi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa5fdf1: mov dword ptr [edi], ecx
	0xa5fdf3: movzx ebx, byte ptr [ebx]
	0xa5fdf6: cmp ebx, 0
	0xa5fdfc: je 0xa5fe61
	0xa5fe08: mov ebx, 0
	0xa5fe1e: mov esi, ebp
	0xa5fe26: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa5fe33: mov esi, dword ptr [esi]
	0xa5fe40: add esi, 3
	0xa5fe48: mov bx, word ptr [esi]
	0xa5fe4f: add ebx, ebp
Store VM_REG [EBP+0x3b]
	0xa5fe53: mov dword ptr [ebx], eax
	0xa5fe65: mov ebx, ebp
	0xa5fe6f: mov eax, ebp
	0xa5fe77: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5fe92: mov eax, dword ptr [eax]
	0xa5fe9a: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5fea6: mov ebx, dword ptr [ebx]
	0xa5fea8: add ebx, 1
	0xa5feb6: movzx ebx, word ptr [ebx]
	0xa5fec1: mov edi, ebp
	0xa5fed3: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5fee1: add ebx, dword ptr [edi]
	0xa5fef8: mov edi, ebp
	0xa5fefa: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5ff0a: and dword ptr [edi], ebx
	0xa5ff17: and ebx, 0xffff
	0xa5ff1d: add eax, ebx
	0xa5ff1f: mov edi, dword ptr [eax]
	0xa5ff29: mov esi, ebp
	0xa5ff2f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a86
	0xa5ff35: add dword ptr [esi], 5
	0xa5ff3b: jmp edi
handlers outputs:



	0xa4ff6f: mov edi, ebp
	0xa4ff7b: add edi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa4ff81: mov al, byte ptr [edi]
	0xa4ff83: cmp al, 0
	0xa4ff85: je 0xa4ff96
	0xa4ffa8: mov edx, ebp
	0xa4ffb8: add edx, 0x2d
Load [EBP+0x2d](STATIC)
	0xa4ffc2: mov ebx, dword ptr [edx]
	0xa4ffd2: add ebx, 0x2b28b3ec
	0xa4ffe0: mov esi, ebp
	0xa4ffe2: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa4fff5: mov ecx, dword ptr [esi]
	0xa5000b: xor ecx, 0x2b28b3ec
	0xa5001c: mov esi, ebp
	0xa50020: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa5002c: mov al, byte ptr [esi]
	0xa5002e: cmp al, 0x1f
	0xa50030: jne 0xa50041
	0xa50036: mov byte ptr [ecx], bl
	0xa50041: cmp al, 0x52
	0xa50043: jne 0xa50058
	0xa50058: cmp al, 0x81
	0xa5005a: jne 0xa50089
	0xa50089: cmp al, 2
	0xa5008b: jne 0xa5009b
	0xa500c9: mov eax, ebp
	0xa500cb: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa500d0: mov esi, dword ptr [eax]
	0xa500d4: and esi, 2
	0xa500da: cmp esi, 0
	0xa500e0: je 0xa500fa
	0xa500fa: mov esi, ebp
	0xa500fc: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5010c: mov edi, dword ptr [esi]
	0xa5010e: and edi, 2
	0xa50120: cmp edi, 0
	0xa50126: je 0xa50148
	0xa50159: mov esi, ebp
	0xa5015b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50161: mov eax, dword ptr [esi]
	0xa50163: mov ecx, ebp
	0xa5016d: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa50175: xor dword ptr [ecx], eax
	0xa50191: mov esi, ebp
	0xa50193: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa50199: mov ecx, dword ptr [esi]
	0xa5019b: and ecx, 2
	0xa501a1: cmp ecx, 0
	0xa501a7: je 0xa501c9
	0xa501c9: mov ecx, ebp
	0xa501cb: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa501d1: mov edx, dword ptr [ecx]
	0xa501d3: and edx, 2
	0xa501d9: cmp edx, 0
	0xa501df: je 0xa50201
	0xa50215: cmp al, 0
	0xa50217: je 0xa50228
	0xa5022a: mov edi, ebp
	0xa5022e: mov eax, ebp
	0xa50236: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5023b: mov eax, dword ptr [eax]
	0xa50246: add eax, 0
	0xa5024d: add edi, 0xb8
Load [EBP+0xb8](STATIC)
	0xa5025d: mov edi, dword ptr [edi]
	0xa5026b: movzx eax, word ptr [eax]
	0xa5026e: mov ebx, ebp
	0xa5027d: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa5028e: add eax, dword ptr [ebx]
	0xa50292: mov ebx, ebp
	0xa50294: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa502aa: or dword ptr [ebx], eax
	0xa502ac: and eax, 0xffff
	0xa502b9: add edi, eax
	0xa502c4: mov eax, dword ptr [edi]
	0xa502cc: mov esi, ebp
	0xa502d0: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a88
	0xa502d6: add dword ptr [esi], 2
	0xa502dc: jmp eax
handlers outputs:



	0xa6fdc0: cmp bl, 0
	0xa6fdc3: je 0xa6fdd4
	0xa6fde0: mov ebx, ebp
	0xa6fde4: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fdea: mov esi, dword ptr [ebx]
	0xa6fdec: and esi, 2
	0xa6fdf2: cmp esi, 0
	0xa6fdf8: je 0xa6fe1a
	0xa6fe30: mov edi, ebp
	0xa6fe32: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fe38: mov ebx, dword ptr [edi]
	0xa6fe3a: mov esi, ebp
	0xa6fe3c: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fe42: and dword ptr [esi], ebx
	0xa6fe44: mov esi, ebp
	0xa6fe4a: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa6fe54: mov esi, dword ptr [esi]
	0xa6fe66: add esi, 0
	0xa6fe6c: mov ecx, dword ptr [esi]
	0xa6fe7a: mov esi, ebp
	0xa6fe92: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa6fea1: sub ecx, dword ptr [esi]
	0xa6fec3: mov esi, ebp
	0xa6fec5: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fedb: xor dword ptr [esi], ecx
	0xa6feeb: xor ecx, 0x9af695a
	0xa6fef8: mov esi, ebp
	0xa6ff01: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa6ff0f: mov dword ptr [esi], ecx
	0xa6ff11: mov esi, ebp
	0xa6ff13: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff19: mov ebx, dword ptr [esi]
	0xa6ff1b: mov esi, ebp
	0xa6ff1d: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6ff23: or dword ptr [esi], ebx
	0xa6ff38: mov ebx, ebp
	0xa6ff3a: add ebx, 0xa
	0xa6ff4a: cmp bl, 0
	0xa6ff4d: je 0xa6ff5e
	0xa6ff60: mov ebx, ebp
	0xa6ff64: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ff6a: mov ecx, dword ptr [ebx]
	0xa6ff72: and ecx, 2
	0xa6ff7a: cmp ecx, 0
	0xa6ff80: je 0xa6ffa2
	0xa6ffae: mov ecx, ebp
	0xa6ffb0: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6ffb6: mov ebx, dword ptr [ecx]
	0xa6ffba: and ebx, 2
	0xa6ffc8: cmp ebx, 0
	0xa6ffce: je 0xa6ffea
	0xa6ffea: mov edi, ebp
	0xa6ffec: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa6fff2: mov ebx, dword ptr [edi]
	0xa6fff4: mov eax, ebp
	0xa6fff6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6fffb: add dword ptr [eax], ebx
	0xa6fffd: mov edx, ebp
	0xa6ffff: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa70005: mov esi, dword ptr [edx]
	0xa70007: mov edi, ebp
	0xa70009: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7000f: add dword ptr [edi], esi
	0xa70019: mov edx, ebp
	0xa70021: mov ecx, ebp
	0xa70029: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7002f: mov ecx, dword ptr [ecx]
	0xa70033: add edx, 0xb8
	0xa70042: add ecx, 4
Load [EBP+0xb8](STATIC)
	0xa70051: mov edx, dword ptr [edx]
	0xa70061: movzx ecx, word ptr [ecx]
	0xa70066: mov edi, ebp
	0xa7006a: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa70076: add ecx, dword ptr [edi]
	0xa70078: add ecx, 0x2227c7fc
	0xa7009d: and ecx, 0xffff
	0xa700a7: add edx, ecx
	0xa700b7: mov edi, dword ptr [edx]
	0xa700bf: mov esi, ebp
	0xa700ca: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a8e
	0xa700d0: add dword ptr [esi], 6
	0xa700d6: jmp edi
handlers outputs:



	0xa73175: mov ebx, ebp
	0xa73177: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7317d: sub dword ptr [ebx], 0x5c0aca40
	0xa7318b: mov edx, ebp
	0xa7318d: add edx, 0xef
Load [EBP+0xef](STATIC)
	0xa73193: mov ebx, dword ptr [edx]
	0xa7319f: cmp bl, 0
	0xa731a2: je 0xa731b3
	0xa731b5: mov edx, ebp
	0xa731b9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731c7: mov esi, dword ptr [edx]
	0xa731c9: sub esi, 0x29675260
	0xa731cf: cmp dl, 0
	0xa731d2: je 0xa731e2
	0xa731e4: mov eax, ebp
	0xa731e6: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa731eb: sub dword ptr [eax], esi
	0xa731ed: mov ecx, ebp
	0xa731ef: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa731fd: mov eax, dword ptr [ecx]
	0xa731ff: and eax, 2
	0xa73206: cmp eax, 0
	0xa7320b: je 0xa7322d
	0xa73266: mov edi, ebp
	0xa73268: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7326e: mov eax, dword ptr [edi]
	0xa73270: and eax, 0x574c62f2
	0xa73275: mov edi, ebp
	0xa73277: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7327d: sub dword ptr [edi], eax
	0xa7327f: mov edi, ebp
	0xa7328d: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa7329b: mov edi, dword ptr [edi]
	0xa7329d: add edi, 2
	0xa732b1: movzx edx, word ptr [edi]
	0xa732b4: mov edi, ebp
	0xa732bc: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa732d2: xor edx, dword ptr [edi]
	0xa732d8: mov edi, ebp
	0xa732dc: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa732e8: sub edx, dword ptr [edi]
	0xa732f0: mov edi, ebp
	0xa73306: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7331b: add dword ptr [edi], edx
	0xa73336: and edx, 0xffff
	0xa73341: add edx, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa7334b: mov edx, dword ptr [edx]
	0xa73357: xor edx, 0x1348fdb8
	0xa7336c: mov edi, ebp
	0xa7337b: add edi, 0x49
Store [EBP+0x49](STATIC)
	0xa7338d: mov dword ptr [edi], edx
	0xa733a1: mov edx, ebp
	0xa733a3: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733a9: or dword ptr [edx], 0x5baf5b88
	0xa733be: mov edx, ebp
	0xa733c0: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa733c6: mov esi, dword ptr [edx]
	0xa733c8: add esi, 0x4224d60a
	0xa733ce: mov edx, ebp
	0xa733d0: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa733d6: xor dword ptr [edx], esi
	0xa733dc: mov eax, ebp
	0xa733ea: mov edi, ebp
	0xa733f0: add eax, 0xb8
	0xa733f5: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa733fd: mov edi, dword ptr [edi]
Load [EBP+0xb8](STATIC)
	0xa733ff: mov eax, dword ptr [eax]
	0xa73401: add edi, 0
	0xa73409: movzx edi, word ptr [edi]
	0xa7341f: mov ebx, ebp
	0xa73425: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa7342d: sub edi, dword ptr [ebx]
	0xa73442: add edi, 0x11d383b1
	0xa7344a: mov ebx, ebp
	0xa7345c: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa73462: or dword ptr [ebx], edi
	0xa73475: and edi, 0xffff
	0xa73493: add eax, edi
	0xa7349b: mov edi, dword ptr [eax]
	0xa7349d: mov esi, ebp
	0xa734b6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a92
	0xa734bc: add dword ptr [esi], 4
	0xa734c2: jmp edi
handlers outputs:



	0xa59336: mov eax, ebp
	0xa5934b: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa5935a: mov eax, dword ptr [eax]
	0xa5935c: add eax, 0
	0xa59363: movzx ecx, word ptr [eax]
	0xa5936e: mov eax, ebp
	0xa59370: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa59377: xor ecx, dword ptr [eax]
	0xa59381: mov eax, ebp
	0xa59395: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa593a9: add ecx, dword ptr [eax]
	0xa593f6: and ecx, 0xffff
	0xa59405: add ecx, ebp
	0xa59415: xor ecx, 0x2b28b3ec
	0xa5942c: mov ebx, ebp
	0xa59430: add ebx, 0xef
Store [EBP+0xef](STATIC)
	0xa59443: mov dword ptr [ebx], ecx
	0xa5944f: cmp cl, 0
	0xa59452: je 0xa59462
	0xa59464: mov esi, ebp
	0xa59468: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59476: mov ebx, dword ptr [esi]
	0xa5947f: and ebx, 2
	0xa59485: cmp ebx, 0
	0xa5948b: je 0xa594ad
	0xa594c5: mov eax, ebp
	0xa594c7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa594cc: and dword ptr [eax], 0x6cee713a
	0xa594d2: mov eax, ebp
	0xa594e6: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa594ed: mov ebx, dword ptr [eax]
	0xa594f1: and ebx, 2
	0xa594f7: cmp ebx, 0
	0xa594fd: je 0xa59517
	0xa59521: mov eax, ebp
	0xa59523: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa59528: and dword ptr [eax], 0x3e54d275
	0xa5952e: mov edx, ebp
	0xa59530: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa59536: mov esi, dword ptr [edx]
	0xa5953e: and esi, 2
	0xa5954b: cmp esi, 0
	0xa59551: je 0xa59573
	0xa5957d: mov edi, ebp
	0xa5957f: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa59585: xor dword ptr [edi], 0x70b6bd58
	0xa595c7: mov esi, ebp
	0xa595cf: mov eax, ebp
	0xa595d1: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa595e3: mov esi, dword ptr [esi]
	0xa595f3: add eax, 0xb8
Load [EBP+0xb8](STATIC)
	0xa595fa: mov eax, dword ptr [eax]
	0xa59604: add esi, 2
	0xa5960a: movzx esi, word ptr [esi]
	0xa59612: mov ebx, ebp
	0xa59620: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa59637: sub esi, dword ptr [ebx]
	0xa59639: add esi, 0x39cfa64e
	0xa59645: mov ebx, ebp
	0xa59650: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5966b: or dword ptr [ebx], esi
	0xa5967b: and esi, 0xffff
	0xa5968f: add eax, esi
	0xa59691: mov edi, dword ptr [eax]
	0xa596a4: mov esi, ebp
	0xa596a6: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a96
	0xa596ac: add dword ptr [esi], 4
	0xa596b2: jmp edi
handlers outputs:



	0xa588d5: mov eax, ebp
	0xa588d7: mov esi, ebp
	0xa588d9: add eax, 0xa
	0xa588de: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa588e4: mov ebx, dword ptr [esi]
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa588e6: xor dword ptr [eax], 0x6e4fe52f
	0xa588ec: and ebx, 2
	0xa588f2: cmp ebx, 0
	0xa588f8: je 0xa58914
	0xa58914: mov esi, ebp
	0xa58926: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa58932: mov esi, dword ptr [esi]
	0xa58934: add esi, 0
	0xa5893a: movzx ebx, byte ptr [esi]
	0xa58954: mov ecx, ebp
	0xa58961: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5896f: xor ebx, dword ptr [ecx]
	0xa58977: mov ecx, ebp
	0xa58989: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58991: sub ebx, dword ptr [ecx]
	0xa589a3: mov ecx, ebp
	0xa589b5: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa589cc: add dword ptr [ecx], ebx
	0xa589d6: mov ecx, ebp
	0xa589e2: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa589ee: sub dword ptr [ecx], 0x9717c7e
	0xa589fd: mov esi, ebp
	0xa589ff: add esi, 0x9e
Store [EBP+0x9e](STATIC)
	0xa58a05: mov byte ptr [esi], bl
	0xa58a07: mov edi, ebp
	0xa58a09: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a0f: mov ecx, dword ptr [edi]
	0xa58a11: mov eax, ebp
	0xa58a13: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58a18: or dword ptr [eax], ecx
	0xa58a1c: mov esi, ebp
	0xa58a1e: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a24: mov ecx, dword ptr [esi]
	0xa58a2c: and ecx, 2
	0xa58a32: cmp ecx, 0
	0xa58a38: je 0xa58a54
	0xa58a46: mov esi, ebp
	0xa58a48: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a4e: and dword ptr [esi], 0x52a08f92
	0xa58a56: mov edi, ebp
	0xa58a58: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58a5e: mov edx, dword ptr [edi]
	0xa58a60: and edx, 2
	0xa58a66: cmp edx, 0
	0xa58a6c: je 0xa58a8e
	0xa58a72: mov edi, ebp
	0xa58a74: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a7a: xor dword ptr [edi], 0xb349b13
	0xa58a80: mov edi, ebp
	0xa58a82: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58a88: xor dword ptr [edi], 0x327917a9
	0xa58a8e: mov ecx, ebp
	0xa58a90: mov esi, ebp
	0xa58a92: add ecx, 0xef
	0xa58a9a: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58aa0: mov ebx, dword ptr [esi]
	0xa58aa2: and ebx, 2
	0xa58aa8: cmp ebx, 0
	0xa58aae: je 0xa58aca
	0xa58ad2: mov edx, ebp
	0xa58ad6: add edx, 0xe5
	0xa58adc: cmp cl, 0
	0xa58adf: je 0xa58aef
Load [EBP+0xe5](STATIC)
	0xa58af1: mov eax, dword ptr [edx]
	0xa58af3: and eax, 2
	0xa58af8: cmp eax, 0
	0xa58afd: je 0xa58b1f
	0xa58b21: mov esi, ebp
	0xa58b23: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa58b39: mov edx, dword ptr [esi]
	0xa58b3b: and edx, 2
	0xa58b43: cmp edx, 0
	0xa58b49: je 0xa58b6b
	0xa58b6d: mov esi, ebp
	0xa58b6f: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa58b75: mov ecx, dword ptr [esi]
	0xa58b7d: xor ecx, 0x4a2807f6
	0xa58b83: mov edi, ebp
	0xa58b85: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa58b97: add dword ptr [edi], ecx
	0xa58b99: mov esi, ebp
	0xa58ba9: add esi, 0xb8
	0xa58bc3: mov edx, ebp
	0xa58bc7: add edx, 0x95
Load [EBP+0xb8](STATIC)
	0xa58bd1: mov esi, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa58bdb: mov edx, dword ptr [edx]
	0xa58bdf: add edx, 1
	0xa58bf9: movzx edx, word ptr [edx]
	0xa58c06: mov eax, ebp
	0xa58c1b: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa58c20: add edx, dword ptr [eax]
	0xa58c32: mov edi, ebp
	0xa58c3d: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa58c47: sub dword ptr [edi], edx
	0xa58c53: and edx, 0xffff
	0xa58c66: add esi, edx
	0xa58c6e: mov edi, dword ptr [esi]
	0xa58c70: mov esi, ebp
	0xa58c7f: add esi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a99
	0xa58c85: add dword ptr [esi], 3
	0xa58c8b: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa62148: mov ecx, ebp
	0xa6214a: add ecx, 0xe5
	0xa62150: mov edi, ebp
	0xa62152: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa62158: mov ebx, dword ptr [edi]
Load [EBP+0xe5](STATIC)
	0xa6215a: mov edx, dword ptr [ecx]
	0xa6215c: xor ebx, 0x9af695a
	0xa62162: and edx, 2
	0xa62168: mov esi, ebp
	0xa6216a: cmp edx, 0
	0xa62170: je 0xa62192
	0xa62192: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa62198: mov dword ptr [esi], ebx
	0xa6219a: mov eax, ebp
	0xa6219c: add eax, 0x49
Load [EBP+0x49](STATIC)
	0xa621a1: mov edx, dword ptr [eax]
	0xa621a3: xor edx, 0x1348fdb8
	0xa621a9: mov eax, ebp
	0xa621ab: add eax, 0x49
Store [EBP+0x49](STATIC)
	0xa621b0: mov dword ptr [eax], edx
	0xa621b4: mov edi, ebp
	0xa621b6: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa621bc: mov ebx, dword ptr [edi]
	0xa621be: mov eax, ebp
	0xa621c0: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa621cb: add dword ptr [eax], ebx
	0xa621cf: mov edi, ebp
	0xa621de: mov ebx, ebp
	0xa621e9: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa62201: sub dword ptr [ebx], 0x3d05ee7
	0xa62207: add edi, 0x49
Load [EBP+0x49](STATIC)
	0xa6220d: mov edx, dword ptr [edi]
	0xa62215: mov edi, ebp
	0xa6221d: add edi, 0x79
Load [EBP+0x79](STATIC)
	0xa62229: mov eax, dword ptr [edi]
	0xa62259: mov esi, ebp
	0xa6225b: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa62265: mov cl, byte ptr [esi]
	0xa62267: cmp cl, 0x1f
	0xa6226a: jne 0xa62273
	0xa62273: cmp cl, 0x52
	0xa62276: jne 0xa62286
	0xa62286: cmp cl, 0x81
	0xa62289: jne 0xa62294
	0xa6228f: sub edx, eax
	0xa62291: pushfd
	0xa6229a: sub edx, 0x6a17db71
	0xa622a4: mov esi, ebp
	0xa622ae: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa622b4: mov dword ptr [esi], edx
	0xa622b8: mov ebx, ebp
	0xa622ba: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa622c0: sub dword ptr [ebx], 0x6a1e83ce
	0xa622d7: mov ecx, ebp
	0xa622d9: add ecx, 0xa
	0xa622e3: mov ebx, ebp
	0xa622e5: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa622eb: mov edx, dword ptr [ebx]
	0xa622ed: mov eax, ebp
	0xa622ef: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa622f4: add dword ptr [eax], edx
	0xa6230c: mov edi, ebp
	0xa62316: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6231c: sub dword ptr [edi], 0x2e0475ae
	0xa62324: cmp cl, 0
	0xa62327: je 0xa62338
	0xa6234c: mov edi, ebp
	0xa6235c: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa62368: mov eax, dword ptr [edi]
	0xa6237a: add eax, 0x6a17db71
	0xa623ae: sub eax, 0x2b28b3ec
	0xa623b9: mov esi, ebp
	0xa623bd: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa623c5: mov dword ptr [esi], eax
	0xa623cf: mov edi, ebp
	0xa623fc: pop eax
	0xa623fd: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa62403: mov edi, dword ptr [edi]
	0xa6240b: add edi, 2
	0xa62413: movzx edi, byte ptr [edi]
	0xa62416: cmp edi, 0
	0xa6241c: je 0xa6247c
	0xa62422: mov edi, 0
	0xa62427: mov ecx, ebp
	0xa62435: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa6244f: mov ecx, dword ptr [ecx]
	0xa6245b: add ecx, 3
	0xa62463: mov di, word ptr [ecx]
	0xa6246c: add edi, ebp
Store VM_REG [EBP+0x3b]
	0xa6246e: mov dword ptr [edi], eax
	0xa62486: mov eax, ebp
	0xa62494: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa6249b: mov eax, dword ptr [eax]
	0xa624a3: mov ebx, ebp
	0xa624ab: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa624b8: mov ebx, dword ptr [ebx]
	0xa624cd: add eax, 0
	0xa624da: movzx eax, word ptr [eax]
	0xa624fd: sub eax, 0x39546c87
	0xa62506: mov ecx, ebp
	0xa62508: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa6251a: and dword ptr [ecx], eax
	0xa6252b: and eax, 0xffff
	0xa62532: add ebx, eax
	0xa62542: mov eax, dword ptr [ebx]
	0xa62546: mov ebx, ebp
	0xa6254a: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61a9e
	0xa62550: add dword ptr [ebx], 5
	0xa62556: jmp eax
handlers outputs:



	0xa8047b: mov edx, ebp
	0xa8047f: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80485: mov ebx, dword ptr [edx]
	0xa80487: xor ebx, 0x42c2da8b
	0xa80495: cmp dl, 0
	0xa80498: je 0xa804a9
	0xa804ab: mov esi, ebp
	0xa804ad: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa804b3: sub dword ptr [esi], ebx
	0xa804d7: mov esi, ebp
	0xa804d9: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa804df: sub dword ptr [esi], 0x21770846
	0xa804e5: mov edi, ebp
	0xa804e7: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa804ed: mov esi, dword ptr [edi]
	0xa804ef: and esi, 2
	0xa804f5: cmp esi, 0
	0xa804fb: je 0xa8051d
	0xa80501: mov edi, ebp
	0xa80503: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80509: and dword ptr [edi], 0x581a4311
	0xa8050f: mov edi, ebp
	0xa80511: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80517: add dword ptr [edi], 0x34964937
	0xa8051d: mov eax, ebp
	0xa8051f: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80524: mov esi, dword ptr [eax]
	0xa80526: and esi, 2
	0xa8052c: cmp esi, 0
	0xa80532: je 0xa80552
	0xa80538: mov eax, ebp
	0xa8053a: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8053f: xor dword ptr [eax], 0x3d4bda1a
	0xa80545: mov eax, ebp
	0xa80547: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa8054c: or dword ptr [eax], 0x7d5a262b
	0xa80580: mov ecx, ebp
	0xa80582: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa80588: xor dword ptr [ecx], 0x52394180
	0xa8058e: mov esi, ebp
	0xa80590: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa80596: mov edi, dword ptr [esi]
	0xa80598: mov ebx, ebp
	0xa8059a: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa805a0: or dword ptr [ebx], edi
	0xa805aa: mov edi, ebp
	0xa805ae: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa805b4: mov ebx, dword ptr [edi]
	0xa805b6: sub ebx, 0x31568d1a
	0xa805bc: mov eax, ebp
	0xa805be: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa805c3: sub dword ptr [eax], ebx
	0xa805f0: mov edi, ebp
	0xa805f2: add edi, 0x2d
Load [EBP+0x2d](STATIC)
	0xa805f8: mov ecx, dword ptr [edi]
	0xa80601: add ecx, 0x2b28b3ec
	0xa80609: mov esi, ebp
	0xa80615: add esi, 0xef
Load [EBP+0xef](STATIC)
	0xa80622: mov eax, dword ptr [esi]
	0xa8062c: xor eax, 0x2b28b3ec
	0xa80633: mov esi, ebp
	0xa80637: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa8063f: mov bl, byte ptr [esi]
	0xa80641: cmp bl, 0x1f
	0xa80644: jne 0xa80661
	0xa80661: cmp bl, 0x52
	0xa80664: jne 0xa8066f
	0xa8066f: cmp bl, 0x81
	0xa80672: jne 0xa806b6
	0xa80684: mov dword ptr [eax], ecx
	0xa806b6: cmp bl, 2
	0xa806b9: jne 0xa806cd
	0xa806de: cmp bl, 0
	0xa806e1: je 0xa806f2
	0xa8071f: mov eax, ebp
	0xa8072c: add eax, 0x95
Load [EBP+0x95](STATIC)
	0xa8073b: mov eax, dword ptr [eax]
	0xa80743: add eax, 0
	0xa80756: mov ebx, ebp
	0xa80758: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa80772: mov ebx, dword ptr [ebx]
	0xa8078b: movzx eax, word ptr [eax]
	0xa8078e: mov edx, ebp
	0xa80790: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa807a4: sub eax, dword ptr [edx]
	0xa807ba: add eax, 0x30b3abb7
	0xa807c8: mov ecx, ebp
	0xa807d1: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa807d9: or dword ptr [ecx], eax
	0xa807e1: and eax, 0xffff
	0xa807ea: add ebx, eax
	0xa807f0: mov edi, dword ptr [ebx]
	0xa807f7: mov ecx, ebp
	0xa807ff: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61aa0
	0xa80805: add dword ptr [ecx], 2
	0xa8080b: jmp edi
handlers outputs:



basic block ends with indirect unconditional branch
	0xa79113: mov edi, ebp
	0xa79115: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7911b: mov edx, dword ptr [edi]
	0xa7911d: mov ecx, ebp
	0xa7911f: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa79125: add dword ptr [ecx], edx
	0xa7913b: mov esi, ebp
	0xa7913d: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa79143: mov edx, dword ptr [esi]
	0xa79145: mov ebx, ebp
	0xa79147: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7914d: add dword ptr [ebx], edx
	0xa7916f: mov edx, ebp
	0xa79171: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa79177: mov esi, dword ptr [edx]
	0xa79179: sub esi, 0xf815f99
	0xa7917f: mov ecx, ebp
	0xa79181: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa79187: and dword ptr [ecx], esi
	0xa79189: mov esi, ebp
	0xa7918b: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa79191: mov edi, dword ptr [esi]
	0xa79193: mov ecx, ebp
	0xa79195: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7919b: or dword ptr [ecx], edi
	0xa791a7: cmp cl, 0
	0xa791aa: je 0xa791bb
	0xa791bd: mov ebx, ebp
	0xa791bf: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa791c5: mov eax, dword ptr [ebx]
	0xa791c7: and eax, 2
	0xa791cc: cmp eax, 0
	0xa791d1: je 0xa791f3
	0xa791d7: mov ebx, ebp
	0xa791d9: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa791df: and dword ptr [ebx], 0x734856c1
	0xa791e5: mov ebx, ebp
	0xa791e7: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa791ed: add dword ptr [ebx], 0x469c330c
	0xa791f3: mov ebx, ebp
	0xa791f5: add ebx, 0xef
	0xa791fb: mov esi, ebp
	0xa791ff: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa79205: mov edx, dword ptr [esi]
	0xa79207: or edx, 0x797fa67c
	0xa7920d: mov edi, ebp
	0xa7920f: cmp bl, 0
	0xa79212: je 0xa79223
	0xa79225: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7922b: and dword ptr [edi], edx
	0xa7922d: mov eax, ebp
	0xa7922f: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa79234: mov edi, dword ptr [eax]
	0xa79236: add edi, 0x7ac934a2
	0xa7923c: mov edx, ebp
	0xa7923e: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa79244: add dword ptr [edx], edi
	0xa79246: mov esi, ebp
	0xa79254: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa79266: mov esi, dword ptr [esi]
	0xa7927b: add esi, 0
	0xa79281: mov ecx, dword ptr [esi]
	0xa792b3: mov eax, ebp
	0xa792b7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa792cd: sub ecx, dword ptr [eax]
	0xa792f8: mov eax, ebp
	0xa792ff: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7930d: xor dword ptr [eax], 0x6e487ece
	0xa79319: xor ecx, 0x9af695a
	0xa79323: mov esi, ebp
	0xa79334: add esi, 0x79
Store [EBP+0x79](STATIC)
	0xa79342: mov dword ptr [esi], ecx
	0xa79344: mov edx, ebp
	0xa79346: add edx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7934c: mov eax, dword ptr [edx]
	0xa7934e: xor eax, 0x7ab6617b
	0xa79353: mov ecx, ebp
	0xa79355: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7935b: xor dword ptr [ecx], eax
	0xa79367: mov edi, ebp
	0xa79369: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7936f: add dword ptr [edi], 0x26562996
	0xa79385: mov ebx, ebp
	0xa79394: add ebx, 0x2d
	0xa793b0: mov esi, ebp
	0xa793b4: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa793ba: or ebx, dword ptr [esi]
	0xa793c8: cmp bl, 0
	0xa793cb: je 0xa793dc
	0xa793e4: mov ebx, ebp
	0xa793ea: mov ecx, ebp
	0xa793f3: add ebx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa793ff: mov ebx, dword ptr [ebx]
	0xa7940c: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa79417: mov ecx, dword ptr [ecx]
	0xa79429: add ecx, 4
	0xa79431: movzx ecx, word ptr [ecx]
	0xa79448: mov edi, ebp
	0xa79450: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa79467: add ecx, dword ptr [edi]
	0xa79469: xor ecx, 0x4bb0b061
	0xa7947a: mov edi, ebp
	0xa7947c: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa79482: or dword ptr [edi], ecx
	0xa7948f: and ecx, 0xffff
	0xa794a7: add ebx, ecx
	0xa794b1: mov ecx, dword ptr [ebx]
	0xa794c3: mov eax, ebp
	0xa794cb: add eax, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61aa6
	0xa794d0: add dword ptr [eax], 6
	0xa794d6: jmp ecx
handlers outputs:



	0xa5d8ec: mov edi, ebp
	0xa5d8ee: add edi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d8f4: mov ebx, dword ptr [edi]
	0xa5d8f6: mov ecx, ebp
	0xa5d8f8: add ecx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d8fe: xor dword ptr [ecx], ebx
	0xa5d90e: mov eax, ebp
	0xa5d916: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa5d91b: mov ebx, dword ptr [eax]
	0xa5d91d: xor ebx, 0x7bd6a2f
	0xa5d925: cmp cl, 0
	0xa5d928: je 0xa5d938
	0xa5d93a: mov eax, ebp
	0xa5d93c: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d941: sub dword ptr [eax], ebx
	0xa5d943: mov edi, ebp
	0xa5d945: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d94b: xor dword ptr [edi], 0x29066f31
	0xa5d951: mov ecx, ebp
	0xa5d953: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa5d95b: mov esi, dword ptr [ecx]
	0xa5d95d: and esi, 2
	0xa5d969: cmp esi, 0
	0xa5d96f: je 0xa5d991
	0xa5d975: mov ecx, ebp
	0xa5d977: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d97d: xor dword ptr [ecx], 0x76980d16
	0xa5d983: mov ecx, ebp
	0xa5d985: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d98b: add dword ptr [ecx], 0x1f0a33d1
	0xa5d993: cmp cl, 0
	0xa5d996: je 0xa5d9a6
	0xa5d9a8: mov edx, ebp
	0xa5d9aa: mov edi, ebp
	0xa5d9ac: add edi, 0xe5
	0xa5d9b2: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5d9b8: xor dword ptr [edx], 0x226701a6
Load [EBP+0xe5](STATIC)
	0xa5d9be: mov eax, dword ptr [edi]
	0xa5d9c0: and eax, 2
	0xa5d9c5: cmp eax, 0
	0xa5d9ca: je 0xa5d9ec
	0xa5d9d0: mov edi, ebp
	0xa5d9d2: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d9d8: add dword ptr [edi], 0x6a46ac4c
	0xa5d9de: mov edi, ebp
	0xa5d9e0: add edi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5d9e6: xor dword ptr [edi], 0x281a5962
	0xa5d9ee: mov edi, ebp
	0xa5d9f2: add edi, 0x95
Load [EBP+0x95](STATIC)
	0xa5d9f8: mov edi, dword ptr [edi]
	0xa5da02: add edi, 0
	0xa5da0a: movzx ecx, word ptr [edi]
	0xa5da18: mov edi, ebp
	0xa5da23: add edi, 0xa
Load [EBP+0xa](STATIC)
	0xa5da2b: sub ecx, dword ptr [edi]
	0xa5da50: mov esi, ebp
	0xa5da61: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5da7a: or dword ptr [esi], ecx
	0xa5da88: mov esi, ebp
	0xa5da98: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5daa4: sub dword ptr [esi], 0x46e39799
	0xa5dab2: and ecx, 0xffff
	0xa5daba: add ecx, ebp
Load [EBP+0x41](VM_REGISTER)
	0xa5dac4: mov ecx, dword ptr [ecx]
	0xa5dac6: xor ecx, 0x1348fdb8
	0xa5dad4: mov esi, ebp
	0xa5dae2: add esi, 0x49
Store [EBP+0x49](STATIC)
	0xa5daee: mov dword ptr [esi], ecx
	0xa5db01: mov ebx, ebp
	0xa5db03: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa5db13: mov ebx, dword ptr [ebx]
	0xa5db17: mov ecx, ebp
	0xa5db1b: add ecx, 0xb8
	0xa5db34: add ebx, 2
	0xa5db4e: movzx ebx, word ptr [ebx]
Load [EBP+0xb8](STATIC)
	0xa5db60: mov ecx, dword ptr [ecx]
	0xa5db62: mov edx, ebp
	0xa5db72: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa5db7e: sub ebx, dword ptr [edx]
	0xa5db86: add ebx, 0x673daeaa
	0xa5db8e: mov edx, ebp
	0xa5db92: add edx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5dba7: and dword ptr [edx], ebx
	0xa5dbb6: and ebx, 0xffff
	0xa5dbbe: add ecx, ebx
	0xa5dbc8: mov ebx, dword ptr [ecx]
	0xa5dbcc: mov edi, ebp
	0xa5dbd4: add edi, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61aaa
	0xa5dbda: add dword ptr [edi], 4
	0xa5dbe0: jmp ebx
handlers outputs:



	0xa7c3ab: cmp dl, 0
	0xa7c3ae: je 0xa7c3bf
	0xa7c3cc: mov esi, ebp
	0xa7c3ce: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c3d4: add dword ptr [esi], 0x5e888862
	0xa7c3e0: mov esi, ebp
	0xa7c3ea: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa7c3f0: mov esi, dword ptr [esi]
	0xa7c3f2: add esi, 2
	0xa7c403: movzx edx, word ptr [esi]
	0xa7c408: mov esi, ebp
	0xa7c416: add esi, 0xa
Load [EBP+0xa](STATIC)
	0xa7c41e: sub edx, dword ptr [esi]
	0xa7c42e: mov esi, ebp
	0xa7c436: add esi, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c440: xor edx, dword ptr [esi]
	0xa7c44f: mov esi, ebp
	0xa7c457: add esi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c46b: and dword ptr [esi], edx
	0xa7c46f: mov esi, ebp
	0xa7c481: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa7c496: and dword ptr [esi], 0x6c5c027
	0xa7c4a9: and edx, 0xffff
	0xa7c4bf: add edx, ebp
	0xa7c4c8: xor edx, 0x2b28b3ec
	0xa7c4d3: mov esi, ebp
	0xa7c4e2: add esi, 0xef
Store [EBP+0xef](STATIC)
	0xa7c4ef: mov dword ptr [esi], edx
	0xa7c526: mov ebx, ebp
	0xa7c528: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa7c52e: mov esi, dword ptr [ebx]
	0xa7c530: mov ebx, ebp
	0xa7c532: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c538: or dword ptr [ebx], esi
	0xa7c53a: mov eax, ebp
	0xa7c53c: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c541: add dword ptr [eax], 0x69c6a8ff
	0xa7c54e: mov ecx, ebp
	0xa7c550: mov ebx, ebp
	0xa7c55d: add ebx, 0x95
Load [EBP+0x95](STATIC)
	0xa7c563: mov ebx, dword ptr [ebx]
	0xa7c573: add ecx, 0xb8
Load [EBP+0xb8](STATIC)
	0xa7c57b: mov ecx, dword ptr [ecx]
	0xa7c589: add ebx, 0
	0xa7c599: movzx ebx, word ptr [ebx]
	0xa7c5a4: mov eax, ebp
	0xa7c5a8: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa7c5ad: xor ebx, dword ptr [eax]
	0xa7c5b7: sub ebx, 0x791c4b32
	0xa7c5bf: mov eax, ebp
	0xa7c5c1: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa7c5d9: xor dword ptr [eax], ebx
	0xa7c5db: and ebx, 0xffff
	0xa7c5e1: add ecx, ebx
	0xa7c5ed: mov eax, dword ptr [ecx]
	0xa7c5ef: mov ebx, ebp
	0xa7c5f9: add ebx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61aae
	0xa7c5ff: add dword ptr [ebx], 4
	0xa7c605: jmp eax
handlers outputs:



	0xa56574: mov esi, ebp
	0xa56576: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa56593: mov esi, dword ptr [esi]
	0xa5659f: add esi, 2
	0xa565c3: movzx ecx, byte ptr [esi]
	0xa565e9: mov eax, ebp
	0xa565ef: add eax, 0xa
Load [EBP+0xa](STATIC)
	0xa565fe: sub ecx, dword ptr [eax]
	0xa5660c: mov ebx, ebp
	0xa56615: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
	0xa56624: add ecx, dword ptr [ebx]
	0xa5665f: mov ebx, ebp
	0xa5666b: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56675: or dword ptr [ebx], 0x7ec4eb23
	0xa5667d: mov ebx, ebp
	0xa5667f: add ebx, 0x9e
Store [EBP+0x9e](STATIC)
	0xa56690: mov byte ptr [ebx], cl
	0xa56692: mov ebx, ebp
	0xa56694: add ebx, 0xa
Load [EBP+0xa](STATIC)
	0xa566a0: mov edi, dword ptr [ebx]
	0xa566ad: mov esi, ebp
	0xa566af: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566b5: and dword ptr [esi], edi
	0xa566b7: mov eax, ebp
	0xa566b9: add eax, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566be: xor dword ptr [eax], 0x73e12ce0
	0xa566ce: mov edx, ebp
	0xa566d0: add edx, 0xa
Load [EBP+0xa](STATIC)
	0xa566d6: mov eax, dword ptr [edx]
	0xa566d8: xor eax, 0x17a2fbf2
	0xa566dd: mov esi, ebp
	0xa566df: add esi, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566e5: xor dword ptr [esi], eax
	0xa566e7: mov edx, ebp
	0xa566e9: add edx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa566ef: xor dword ptr [edx], 0x599a8aa5
	0xa566f5: mov eax, ebp
	0xa566f7: add eax, 0xe5
Load [EBP+0xe5](STATIC)
	0xa566fc: mov ebx, dword ptr [eax]
	0xa566fe: mov edi, ebp
	0xa56700: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56706: and dword ptr [edi], ebx
	0xa56719: mov edi, ebp
	0xa5671b: add edi, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56721: sub dword ptr [edi], 0x31011cc8
	0xa56739: mov eax, ebp
	0xa5673b: add eax, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa56740: xor dword ptr [eax], 0x554a5ab3
	0xa56746: mov ecx, ebp
	0xa56748: add ecx, 0xa
Load [EBP+0xa](STATIC)
	0xa5674e: mov eax, dword ptr [ecx]
	0xa56750: xor eax, 0x1fbc7a4b
	0xa56755: mov ecx, ebp
	0xa56757: add ecx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa5675d: xor dword ptr [ecx], eax
	0xa5675f: mov ebx, ebp
	0xa56761: add ebx, 0xe5
Load [EBP+0xe5](STATIC)
Store [EBP+0xe5](STATIC)
	0xa56767: xor dword ptr [ebx], 0x25ab6016
	0xa5676f: mov ecx, ebp
	0xa56779: add ecx, 0xa
	0xa5677f: cmp cl, 0
	0xa56782: je 0xa56792
	0xa5679e: mov edi, ebp
	0xa567a0: add edi, 0xb8
	0xa567b8: mov ecx, ebp
	0xa567c4: add ecx, 0x95
Load [EBP+0xb8](STATIC)
	0xa567d5: mov edi, dword ptr [edi]
Load [EBP+0x95](STATIC)
	0xa567d7: mov ecx, dword ptr [ecx]
	0xa567e2: add ecx, 0
	0xa567fb: movzx ecx, word ptr [ecx]
	0xa5682a: mov ebx, ebp
	0xa5683b: add ebx, 0xa
Load [EBP+0xa](STATIC)
Store [EBP+0xa](STATIC)
	0xa5684d: sub dword ptr [ebx], ecx
	0xa5685c: and ecx, 0xffff
	0xa5686d: add edi, ecx
	0xa56871: mov ebx, dword ptr [edi]
	0xa56873: mov ecx, ebp
	0xa56880: add ecx, 0x95
Load [EBP+0x95](STATIC)
bytecode=0xb61ab1
	0xa56886: add dword ptr [ecx], 3
	0xa5688c: jmp ebx
handlers outputs:



basic block ends with indirect unconditional branch
	0xa74541: mov edi, ebp
	0xa74545: mov ecx, ebp
	0xa74547: add ecx, 0x49
	0xa7454f: add edi, 0x79
Load [EBP+0x49](STATIC)
	0xa74555: mov eax, dword ptr [ecx]
	0xa7455c: xor eax, 0x1348fdb8
	0xa74563: xor eax, 0x40648d72
Load [EBP+0x79](STATIC)
	0xa7456a: mov ecx, dword ptr [edi]
	0xa7456c: xor ecx, 0x9af695a
	0xa74574: sub ecx, 0x40648d72
	0xa74580: mov edi, ebp
	0xa74584: mov esi, ebp
	0xa7458c: add esi, 0x49
	0xa74592: add edi, 0x79
Store [EBP+0x79](STATIC)
	0xa7459d: mov dword ptr [edi], ecx
Store [EBP+0x49](STATIC)
	0xa7459f: mov dword ptr [esi], eax
	0xa745a7: mov esi, ebp
	0xa745ae: add esi, 0x95
Load [EBP+0x95](STATIC)
	0xa745b4: mov esi, dword ptr [esi]
	0xa745ba: add esi, 3
	0xa745c6: movzx eax, word ptr [esi]
	0xa745d1: add eax, ebp
Load [EBP+0x3b](VM_REGISTER)
	0xa745db: push dword ptr [eax]
	0xa745e2: mov esi, ebp
	0xa745ea: add esi, 0x49
Load [EBP+0x49](STATIC)
	0xa745f6: mov ebx, dword ptr [esi]
	0xa745f8: xor ebx, 0x40648d72
	0xa74604: mov esi, ebp
	0xa74606: add esi, 0x79
Load [EBP+0x79](STATIC)
	0xa7460e: mov edx, dword ptr [esi]
	0xa74610: add edx, 0x40648d72
	0xa74618: mov ecx, edx
	0xa74626: mov esi, ebp
	0xa7462c: add esi, 0x9e
Load [EBP+0x9e](STATIC)
	0xa74638: mov al, byte ptr [esi]
	0xa7463a: cmp al, 0x1f
	0xa7463c: jne 0xa7464a
	0xa7464a: cmp al, 0x52
	0xa7464c: jne 0xa74661
	0xa74661: cmp al, 0x81
	0xa74663: jne 0xa7466f
	0xa74669: popfd
	0xa7466a: shr ebx, cl
	0xa7466c: pushfd
	0xa7466f: sub ebx, 0x29abdda1
	0xa7467d: mov esi, ebp
	0xa7467f: add esi, 0x2d
Store [EBP+0x2d](STATIC)
	0xa74690: mov dword ptr [esi], ebx
	0xa74698: mov esi, ebp
	0xa7469a: add esi, 0x2d
	0xa746a0: mov ebx, ebp
	0xa746a2: add ebx, 0x95
	0xa746b4: pop edx
Load [EBP+0x2d](STATIC)
	0xa746b7: mov eax, dword ptr [esi]
Load [EBP+0x95](STATIC)
	0xa746b9: mov ebx, dword ptr [ebx]
	0xa746c7: add ebx, 2
	0xa746d3: add eax, 0x29abdda1
	0xa746d8: sub eax, 0x2b28b3ec
	0xa746df: mov esi, ebp
	0xa746e9: add esi, 0x2d
	0xa746ef: movzx ebx, byte ptr [ebx]
Store [EBP+0x2d](STATIC)
	0xa746f4: mov dword ptr [esi], eax
	0xa746f6: cmp ebx, 0
	0xa746fc: je 0xa74739
	0xa74706: mov ebx, 0
	0xa7470b: mov ecx, ebp
	0xa7470d: add ecx, 0x95
Load [EBP+0x95](STATIC)
	0xa7471a: mov ecx, dword ptr [ecx]
	0xa7471e: add ecx, 3
	0xa7472a: mov bx, word ptr [ecx]
	0xa74733: add ebx, ebp
Store VM_REG [EBP+0x3b]
[@0xa4e6a1]:32 bv[31..0]
source_node: (((((((((((((0x0) << 1 | ((t170 >> 21) & 0x1)) << 2 | 0x0) << 1 | ((t170 >> 18) & 0x1)) << 3 | 0x0) << 1 | ((t170 >> 14) & 0x1)) << 2 | 0x0) << 2 | ((t170 >> 10) & 0x3)) << 1 | 0x1) << 1 | ((t170 >> 8) & 0x1)) << 3 | 0x0) << 1 | ((t170 >> 4) & 0x1)) << 4 | 0x1)
handlers outputs:



storeAccess source_node error?
b-b617d9
b-b617d9
b-b617dd
b-b617df
	mov VM_REG_DD,esp
b-b617e3
b-b617e7
b-b617eb
b-b617ef
b-b617f2
b-b617f6
b-b617fb
b-b617fd
b-b61801
b-b61804
b-b61808
b-b6180e
b-b61813
b-b61815
b-b61818
b-b6181c
b-b61820
b-b61825
b-b6182a
b-b6182c
b-b61830
b-b61834
b-b61837
b-b6183b
b-b6183f
b-b61844
b-b61846
b-b6184c
b-b61850
b-b61853
b-b61857
b-b6185c
b-b6185e
b-b61862
b-b61867
b-b6186b
b-b6186e
b-b61873
b-b61875
b-b61879
b-b6187d
b-b61881
b-b61885
b-b61888
b-b6188d
b-b6188f
b-b61893
b-b61897
b-b6189a
b-b618a0
b-b618a5
b-b618a7
b-b618ab
b-b618af
b-b618b2
b-b618b7
b-b618bc
b-b618be
b-b618c1
b-b618c5
b-b618c9
b-b618cd
b-b618d1
b-b618d6
b-b618d8
b-b618dc
b-b618e0
b-b618e6
b-b618e9
b-b618ee
b-b618f0
b-b618f4
b-b618f7
b-b618fc
b-b61900
b-b61905
b-b61907
b-b6190a
b-b6190e
b-b61912
b-b61916
b-b6191a
b-b6191f
b-b61921
b-b61925
b-b61928
b-b6192e
b-b61932
b-b61937
b-b61939
b-b6193d
b-b61941
b-b61944
b-b61949
b-b6194e
b-b61950
b-b61954
b-b61957
b-b6195b
b-b6195f
b-b61963
b-b61968
b-b6196a
b-b6196e
b-b61974
b-b61977
b-b6197b
b-b61980
b-b61982
b-b61986
b-b6198a
b-b6198d
b-b61992
b-b61997
b-b61999
b-b6199d
b-b619a0
b-b619a4
b-b619a8
b-b619ac
b-b619b1
b-b619b3
b-b619b7
b-b619bd
b-b619c1
b-b619c4
b-b619c9
b-b619cb
b-b619ce
b-b619d3
b-b619d7
b-b619db
b-b619e0
b-b619e2
b-b619e5
b-b619e9
b-b619ed
b-b619f1
b-b619f5
b-b619f9
b-b619ff
	mov VM_REG_3B,0x0
b-b61a04
b-b61a06
b-b61a09
b-b61a0d
	mov VM_REG_3B,topofstack
	mov t128,VM_REG_DD
	mov t129,Add(t128, 0x4)
	mov VM_REG_DD,t129
b-b61a13
	mov t131,VM_REG_DD
	mov t132,Add(t131, 0x8)
	mov VM_REG_DD,t132
b-b61a18
b-b61a1b
b-b61a1f
	mov t137,VM_REG_DD
	mov t138,Sub(t137, 0x4)
	mov VM_REG_DD,t138
	mov dword ptr ds:[Add(stack, -0x4)],0x0
b-b61a23
b-b61a27
b-b61a2b
b-b61a31
b-b61a34
	mov VM_REG_3B,0x44
b-b61a39
b-b61a3d
b-b61a43
b-b61a47
b-b61a4a
	mov VM_REG_3B,0x80
b-b61a4f
b-b61a51
b-b61a54
b-b61a58
	mov t149,VM_REG_DD
	mov t150,Sub(t149, 0x4)
	mov VM_REG_DD,t150
	mov dword ptr ds:[Add(stack, -0x4)],0x0
b-b61a5c
b-b61a60
b-b61a63
b-b61a67
b-b61a6b
	mov VM_REG_3B,0x44
b-b61a70
b-b61a72
b-b61a76
b-b61a79
b-b61a7d
b-b61a81
	mov VM_REG_3B,0x44
b-b61a86
b-b61a88
b-b61a8e
b-b61a92
b-b61a96
b-b61a99
	mov VM_REG_3B,0x95
b-b61a9e
b-b61aa0
b-b61aa6
b-b61aaa
b-b61aae
b-b61ab1
